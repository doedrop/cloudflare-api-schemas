{
    "id": "https://api.cloudflare.com/schemas/v4/client/account/pages/projects.json",
    "title": "Pages Project",
    "description": "A Pages project represents a website deployed to Cloudflare's edge.",
    "cfExtendedDescription": "**For more detailed documentation on using the API for Pages see the [Pages docs](https://developers.cloudflare.com/pages/).**",
    "type": "object",
    "links": [
        {
            "title": "Get projects",
            "description": "Fetch a list of all user projects",
            "rel": "self",
            "href": "accounts/:account_id/pages/projects",
            "method": "GET",
            "cfRequestHeaders": {
                "type": "object",
                "required": [
                    "X-Auth-Email",
                    "X-Auth-Key"
                ],
                "properties": {
                    "X-Auth-Email": {
                        "description": "Your Cloudflare email",
                        "type": "string",
                        "example": "user@example.com"
                    },
                    "X-Auth-Key": {
                        "description": "Your Cloudflare API key",
                        "type": "string",
                        "minLength": 45,
                        "maxLength": 45,
                        "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                    }
                }
            },
            "html_id": "pages-project-get-projects",
            "uri": "accounts/:account_id/pages/projects",
            "curl": "curl -X GET \"https://api.cloudflare.com/client/v4/accounts/:account_id/pages/projects\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\"",
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"name\": \"NextJS Blog\",\n    \"id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n    \"created_on\": \"2017-01-01T00:00:00Z\",\n    \"subdomain\": \"helloworld.pages.dev\",\n    \"domains\": [\n      \"customdomain.com\",\n      \"customdomain.org\"\n    ],\n    \"source\": {\n      \"type\": \"github\",\n      \"config\": {\n        \"owner\": \"cloudflare\",\n        \"repo_name\": \"ninjakittens\",\n        \"production_branch\": \"main\",\n        \"pr_comments_enabled\": true,\n        \"deployments_enabled\": true\n      }\n    },\n    \"build_config\": {\n      \"build_command\": \"npm run build\",\n      \"destination_dir\": \"build\",\n      \"root_dir\": \"/\",\n      \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n      \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n    },\n    \"deployment_configs\": {\n      \"preview\": {\n        \"env_vars\": {\n          \"BUILD_VERSION\": {\n            \"value\": \"3.3\"\n          }\n        }\n      },\n      \"production\": {\n        \"env_vars\": {\n          \"BUILD_VERSION\": {\n            \"value\": \"3.3\"\n          }\n        }\n      }\n    },\n    \"latest_deployment\": {\n      \"id\": \"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\n      \"short_id\": \"f64788e9\",\n      \"project_id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n      \"project_name\": \"ninjakittens\",\n      \"environment\": \"preview\",\n      \"url\": \"https://f64788e9.ninjakittens.pages.dev\",\n      \"created_on\": \"2021-03-09T00:55:03.923456Z\",\n      \"modified_on\": \"2021-03-09T00:58:59.045655\",\n      \"aliases\": [\n        \"https://branchname.projectname.pages.dev\"\n      ],\n      \"latest_stage\": {\n        \"name\": \"deploy\",\n        \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n        \"ended_on\": \"2021-03-09T00:58:59.045655\",\n        \"status\": \"success\"\n      },\n      \"env_vars\": {\n        \"BUILD_VERSION\": {\n          \"value\": \"3.3\"\n        },\n        \"ENV\": {\n          \"value\": \"STAGING\"\n        }\n      },\n      \"deployment_trigger\": {\n        \"type\": \"ad_hoc\",\n        \"metadata\": {\n          \"branch\": \"main\",\n          \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n          \"commit_message\": \"Update index.html\"\n        }\n      },\n      \"stages\": [\n        {\n          \"name\": \"queued\",\n          \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n          \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n          \"status\": \"active\"\n        },\n        {\n          \"name\": \"initialize\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"clone_repo\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"build\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"deploy\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        }\n      ],\n      \"build_config\": {\n        \"build_command\": \"npm run build\",\n        \"destination_dir\": \"build\",\n        \"root_dir\": \"/\",\n        \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n        \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n      },\n      \"source\": {\n        \"type\": \"github\",\n        \"config\": {\n          \"owner\": \"cloudflare\",\n          \"repo_name\": \"ninjakittens\",\n          \"production_branch\": \"main\",\n          \"pr_comments_enabled\": true,\n          \"deployments_enabled\": true\n        }\n      }\n    },\n    \"canonical_deployment\": {\n      \"id\": \"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\n      \"short_id\": \"f64788e9\",\n      \"project_id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n      \"project_name\": \"ninjakittens\",\n      \"environment\": \"preview\",\n      \"url\": \"https://f64788e9.ninjakittens.pages.dev\",\n      \"created_on\": \"2021-03-09T00:55:03.923456Z\",\n      \"modified_on\": \"2021-03-09T00:58:59.045655\",\n      \"aliases\": [\n        \"https://branchname.projectname.pages.dev\"\n      ],\n      \"latest_stage\": {\n        \"name\": \"deploy\",\n        \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n        \"ended_on\": \"2021-03-09T00:58:59.045655\",\n        \"status\": \"success\"\n      },\n      \"env_vars\": {\n        \"BUILD_VERSION\": {\n          \"value\": \"3.3\"\n        },\n        \"ENV\": {\n          \"value\": \"STAGING\"\n        }\n      },\n      \"deployment_trigger\": {\n        \"type\": \"ad_hoc\",\n        \"metadata\": {\n          \"branch\": \"main\",\n          \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n          \"commit_message\": \"Update index.html\"\n        }\n      },\n      \"stages\": [\n        {\n          \"name\": \"queued\",\n          \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n          \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n          \"status\": \"active\"\n        },\n        {\n          \"name\": \"initialize\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"clone_repo\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"build\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"deploy\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        }\n      ],\n      \"build_config\": {\n        \"build_command\": \"npm run build\",\n        \"destination_dir\": \"build\",\n        \"root_dir\": \"/\",\n        \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n        \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n      },\n      \"source\": {\n        \"type\": \"github\",\n        \"config\": {\n          \"owner\": \"cloudflare\",\n          \"repo_name\": \"ninjakittens\",\n          \"production_branch\": \"main\",\n          \"pr_comments_enabled\": true,\n          \"deployments_enabled\": true\n        }\n      }\n    }\n  },\n  \"result_info\": {\n    \"page\": 1,\n    \"per_page\": 100,\n    \"count\": 1,\n    \"total_count\": 1\n  }\n}"
        },
        {
            "title": "Get project",
            "description": "Fetch a project by name",
            "rel": "self",
            "href": "accounts/:account_id/pages/projects/:project_name",
            "method": "GET",
            "cfRequestHeaders": {
                "type": "object",
                "required": [
                    "X-Auth-Email",
                    "X-Auth-Key"
                ],
                "properties": {
                    "X-Auth-Email": {
                        "description": "Your Cloudflare email",
                        "type": "string",
                        "example": "user@example.com"
                    },
                    "X-Auth-Key": {
                        "description": "Your Cloudflare API key",
                        "type": "string",
                        "minLength": 45,
                        "maxLength": 45,
                        "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                    }
                }
            },
            "html_id": "pages-project-get-project",
            "uri": "accounts/:account_id/pages/projects/:project_name",
            "curl": "curl -X GET \"https://api.cloudflare.com/client/v4/accounts/:account_id/pages/projects/:project_name\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\"",
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"name\": \"NextJS Blog\",\n    \"id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n    \"created_on\": \"2017-01-01T00:00:00Z\",\n    \"subdomain\": \"helloworld.pages.dev\",\n    \"domains\": [\n      \"customdomain.com\",\n      \"customdomain.org\"\n    ],\n    \"source\": {\n      \"type\": \"github\",\n      \"config\": {\n        \"owner\": \"cloudflare\",\n        \"repo_name\": \"ninjakittens\",\n        \"production_branch\": \"main\",\n        \"pr_comments_enabled\": true,\n        \"deployments_enabled\": true\n      }\n    },\n    \"build_config\": {\n      \"build_command\": \"npm run build\",\n      \"destination_dir\": \"build\",\n      \"root_dir\": \"/\",\n      \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n      \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n    },\n    \"deployment_configs\": {\n      \"preview\": {\n        \"env_vars\": {\n          \"BUILD_VERSION\": {\n            \"value\": \"3.3\"\n          }\n        }\n      },\n      \"production\": {\n        \"env_vars\": {\n          \"BUILD_VERSION\": {\n            \"value\": \"3.3\"\n          }\n        }\n      }\n    },\n    \"latest_deployment\": {\n      \"id\": \"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\n      \"short_id\": \"f64788e9\",\n      \"project_id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n      \"project_name\": \"ninjakittens\",\n      \"environment\": \"preview\",\n      \"url\": \"https://f64788e9.ninjakittens.pages.dev\",\n      \"created_on\": \"2021-03-09T00:55:03.923456Z\",\n      \"modified_on\": \"2021-03-09T00:58:59.045655\",\n      \"aliases\": [\n        \"https://branchname.projectname.pages.dev\"\n      ],\n      \"latest_stage\": {\n        \"name\": \"deploy\",\n        \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n        \"ended_on\": \"2021-03-09T00:58:59.045655\",\n        \"status\": \"success\"\n      },\n      \"env_vars\": {\n        \"BUILD_VERSION\": {\n          \"value\": \"3.3\"\n        },\n        \"ENV\": {\n          \"value\": \"STAGING\"\n        }\n      },\n      \"deployment_trigger\": {\n        \"type\": \"ad_hoc\",\n        \"metadata\": {\n          \"branch\": \"main\",\n          \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n          \"commit_message\": \"Update index.html\"\n        }\n      },\n      \"stages\": [\n        {\n          \"name\": \"queued\",\n          \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n          \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n          \"status\": \"active\"\n        },\n        {\n          \"name\": \"initialize\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"clone_repo\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"build\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"deploy\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        }\n      ],\n      \"build_config\": {\n        \"build_command\": \"npm run build\",\n        \"destination_dir\": \"build\",\n        \"root_dir\": \"/\",\n        \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n        \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n      },\n      \"source\": {\n        \"type\": \"github\",\n        \"config\": {\n          \"owner\": \"cloudflare\",\n          \"repo_name\": \"ninjakittens\",\n          \"production_branch\": \"main\",\n          \"pr_comments_enabled\": true,\n          \"deployments_enabled\": true\n        }\n      }\n    },\n    \"canonical_deployment\": {\n      \"id\": \"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\n      \"short_id\": \"f64788e9\",\n      \"project_id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n      \"project_name\": \"ninjakittens\",\n      \"environment\": \"preview\",\n      \"url\": \"https://f64788e9.ninjakittens.pages.dev\",\n      \"created_on\": \"2021-03-09T00:55:03.923456Z\",\n      \"modified_on\": \"2021-03-09T00:58:59.045655\",\n      \"aliases\": [\n        \"https://branchname.projectname.pages.dev\"\n      ],\n      \"latest_stage\": {\n        \"name\": \"deploy\",\n        \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n        \"ended_on\": \"2021-03-09T00:58:59.045655\",\n        \"status\": \"success\"\n      },\n      \"env_vars\": {\n        \"BUILD_VERSION\": {\n          \"value\": \"3.3\"\n        },\n        \"ENV\": {\n          \"value\": \"STAGING\"\n        }\n      },\n      \"deployment_trigger\": {\n        \"type\": \"ad_hoc\",\n        \"metadata\": {\n          \"branch\": \"main\",\n          \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n          \"commit_message\": \"Update index.html\"\n        }\n      },\n      \"stages\": [\n        {\n          \"name\": \"queued\",\n          \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n          \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n          \"status\": \"active\"\n        },\n        {\n          \"name\": \"initialize\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"clone_repo\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"build\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"deploy\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        }\n      ],\n      \"build_config\": {\n        \"build_command\": \"npm run build\",\n        \"destination_dir\": \"build\",\n        \"root_dir\": \"/\",\n        \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n        \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n      },\n      \"source\": {\n        \"type\": \"github\",\n        \"config\": {\n          \"owner\": \"cloudflare\",\n          \"repo_name\": \"ninjakittens\",\n          \"production_branch\": \"main\",\n          \"pr_comments_enabled\": true,\n          \"deployments_enabled\": true\n        }\n      }\n    }\n  },\n  \"result_info\": {\n    \"page\": 1,\n    \"per_page\": 100,\n    \"count\": 1,\n    \"total_count\": 1\n  }\n}"
        },
        {
            "title": "Delete project",
            "description": "Destroy a project by name",
            "rel": "self",
            "href": "accounts/:account_id/pages/projects/:project_name",
            "method": "DELETE",
            "cfRequestHeaders": {
                "type": "object",
                "required": [
                    "X-Auth-Email",
                    "X-Auth-Key"
                ],
                "properties": {
                    "X-Auth-Email": {
                        "description": "Your Cloudflare email",
                        "type": "string",
                        "example": "user@example.com"
                    },
                    "X-Auth-Key": {
                        "description": "Your Cloudflare API key",
                        "type": "string",
                        "minLength": 45,
                        "maxLength": 45,
                        "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                    }
                }
            },
            "html_id": "pages-project-delete-project",
            "uri": "accounts/:account_id/pages/projects/:project_name",
            "curl": "curl -X DELETE \"https://api.cloudflare.com/client/v4/accounts/:account_id/pages/projects/:project_name\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\"",
            "response": "{\n  \"result\": null,\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": []\n}"
        },
        {
            "title": "Create project",
            "description": "Make a new project",
            "rel": "self",
            "href": "accounts/:account_id/pages/projects",
            "method": "POST",
            "cfRequestHeaders": {
                "type": "object",
                "required": [
                    "X-Auth-Email",
                    "X-Auth-Key"
                ],
                "properties": {
                    "X-Auth-Email": {
                        "description": "Your Cloudflare email",
                        "type": "string",
                        "example": "user@example.com"
                    },
                    "X-Auth-Key": {
                        "description": "Your Cloudflare API key",
                        "type": "string",
                        "minLength": 45,
                        "maxLength": 45,
                        "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                    },
                    "Content-Type": {
                        "type": "string",
                        "enum": [
                            "application/json"
                        ],
                        "example": "application/json"
                    }
                }
            },
            "encType": "application/json",
            "html_id": "pages-project-create-project",
            "uri": "accounts/:account_id/pages/projects",
            "curl": "curl -X POST \"https://api.cloudflare.com/client/v4/accounts/:account_id/pages/projects\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\" \\\n     --data '{\"name\":\"NextJS Blog\",\"id\":\"7b162ea7-7367-4d67-bcde-1160995d5\",\"created_on\":\"2017-01-01T00:00:00Z\",\"subdomain\":\"helloworld.pages.dev\",\"domains\":[\"customdomain.com\",\"customdomain.org\"],\"source\":{\"type\":\"github\",\"config\":{\"owner\":\"cloudflare\",\"repo_name\":\"ninjakittens\",\"production_branch\":\"main\",\"pr_comments_enabled\":true,\"deployments_enabled\":true}},\"build_config\":{\"build_command\":\"npm run build\",\"destination_dir\":\"build\",\"root_dir\":\"/\",\"web_analytics_tag\":\"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\"web_analytics_token\":\"021e1057c18547eca7b79f2516f06o7x\"},\"deployment_configs\":{\"preview\":{\"env_vars\":{\"BUILD_VERSION\":{\"value\":\"3.3\"}}},\"production\":{\"env_vars\":{\"BUILD_VERSION\":{\"value\":\"3.3\"}}}},\"latest_deployment\":{\"id\":\"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\"short_id\":\"f64788e9\",\"project_id\":\"7b162ea7-7367-4d67-bcde-1160995d5\",\"project_name\":\"ninjakittens\",\"environment\":\"preview\",\"url\":\"https://f64788e9.ninjakittens.pages.dev\",\"created_on\":\"2021-03-09T00:55:03.923456Z\",\"modified_on\":\"2021-03-09T00:58:59.045655\",\"aliases\":[\"https://branchname.projectname.pages.dev\"],\"latest_stage\":{\"name\":\"deploy\",\"started_on\":\"2021-03-09T00:55:03.923456Z\",\"ended_on\":\"2021-03-09T00:58:59.045655\",\"status\":\"success\"},\"env_vars\":{\"BUILD_VERSION\":{\"value\":\"3.3\"},\"ENV\":{\"value\":\"STAGING\"}},\"deployment_trigger\":{\"type\":\"ad_hoc\",\"metadata\":{\"branch\":\"main\",\"commit_hash\":\"ad9ccd918a81025731e10e40267e11273a263421\",\"commit_message\":\"Update index.html\"}},\"stages\":[{\"name\":\"queued\",\"started_on\":\"2021-06-03T15:38:15.608194Z\",\"ended_on\":\"2021-06-03T15:39:03.134378Z\",\"status\":\"active\"},{\"name\":\"initialize\",\"started_on\":null,\"ended_on\":null,\"status\":\"idle\"},{\"name\":\"clone_repo\",\"started_on\":null,\"ended_on\":null,\"status\":\"idle\"},{\"name\":\"build\",\"started_on\":null,\"ended_on\":null,\"status\":\"idle\"},{\"name\":\"deploy\",\"started_on\":null,\"ended_on\":null,\"status\":\"idle\"}],\"build_config\":{\"build_command\":\"npm run build\",\"destination_dir\":\"build\",\"root_dir\":\"/\",\"web_analytics_tag\":\"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\"web_analytics_token\":\"021e1057c18547eca7b79f2516f06o7x\"},\"source\":{\"type\":\"github\",\"config\":{\"owner\":\"cloudflare\",\"repo_name\":\"ninjakittens\",\"production_branch\":\"main\",\"pr_comments_enabled\":true,\"deployments_enabled\":true}}},\"canonical_deployment\":{\"id\":\"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\"short_id\":\"f64788e9\",\"project_id\":\"7b162ea7-7367-4d67-bcde-1160995d5\",\"project_name\":\"ninjakittens\",\"environment\":\"preview\",\"url\":\"https://f64788e9.ninjakittens.pages.dev\",\"created_on\":\"2021-03-09T00:55:03.923456Z\",\"modified_on\":\"2021-03-09T00:58:59.045655\",\"aliases\":[\"https://branchname.projectname.pages.dev\"],\"latest_stage\":{\"name\":\"deploy\",\"started_on\":\"2021-03-09T00:55:03.923456Z\",\"ended_on\":\"2021-03-09T00:58:59.045655\",\"status\":\"success\"},\"env_vars\":{\"BUILD_VERSION\":{\"value\":\"3.3\"},\"ENV\":{\"value\":\"STAGING\"}},\"deployment_trigger\":{\"type\":\"ad_hoc\",\"metadata\":{\"branch\":\"main\",\"commit_hash\":\"ad9ccd918a81025731e10e40267e11273a263421\",\"commit_message\":\"Update index.html\"}},\"stages\":[{\"name\":\"queued\",\"started_on\":\"2021-06-03T15:38:15.608194Z\",\"ended_on\":\"2021-06-03T15:39:03.134378Z\",\"status\":\"active\"},{\"name\":\"initialize\",\"started_on\":null,\"ended_on\":null,\"status\":\"idle\"},{\"name\":\"clone_repo\",\"started_on\":null,\"ended_on\":null,\"status\":\"idle\"},{\"name\":\"build\",\"started_on\":null,\"ended_on\":null,\"status\":\"idle\"},{\"name\":\"deploy\",\"started_on\":null,\"ended_on\":null,\"status\":\"idle\"}],\"build_config\":{\"build_command\":\"npm run build\",\"destination_dir\":\"build\",\"root_dir\":\"/\",\"web_analytics_tag\":\"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\"web_analytics_token\":\"021e1057c18547eca7b79f2516f06o7x\"},\"source\":{\"type\":\"github\",\"config\":{\"owner\":\"cloudflare\",\"repo_name\":\"ninjakittens\",\"production_branch\":\"main\",\"pr_comments_enabled\":true,\"deployments_enabled\":true}}}}'",
            "parameters": {
                "_formatter": {
                    "jsonMediaType": {}
                },
                "all_props": {
                    "name": {
                        "type": "string",
                        "example": "\"NextJS Blog\"",
                        "description": "Name of the project"
                    },
                    "id": {
                        "type": "string",
                        "example": "\"7b162ea7-7367-4d67-bcde-1160995d5\"",
                        "description": "Id of the project",
                        "readOnly": true
                    },
                    "created_on": {
                        "type": "string",
                        "example": "\"2017-01-01T00:00:00Z\"",
                        "description": "When the project was created",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "subdomain": {
                        "type": "string",
                        "example": "\"helloworld.pages.dev\"",
                        "description": "The Cloudflare subdomain associated with the project",
                        "readOnly": true
                    },
                    "domains": {
                        "type": "array",
                        "example": "[\n  \"customdomain.com\",\n  \"customdomain.org\"\n]",
                        "description": "A list of associated custom domains for the project",
                        "readOnly": true
                    },
                    "source": {
                        "type": "object",
                        "example": "{\n  \"type\": \"github\",\n  \"config\": {\n    \"owner\": \"cloudflare\",\n    \"repo_name\": \"ninjakittens\",\n    \"production_branch\": \"main\",\n    \"pr_comments_enabled\": true,\n    \"deployments_enabled\": true\n  }\n}",
                        "properties": {
                            "type": {
                                "type": "string",
                                "example": "\"github\"",
                                "description": "Project host type",
                                "readOnly": true
                            },
                            "config": {
                                "type": "object",
                                "example": "{\n  \"owner\": \"cloudflare\",\n  \"repo_name\": \"ninjakittens\",\n  \"production_branch\": \"main\",\n  \"pr_comments_enabled\": true,\n  \"deployments_enabled\": true\n}",
                                "properties": {
                                    "owner": {
                                        "type": "string",
                                        "example": "\"cloudflare\"",
                                        "description": "Project owner username",
                                        "readOnly": true
                                    },
                                    "repo_name": {
                                        "type": "string",
                                        "example": "\"ninjakittens\"",
                                        "description": "Project repository name"
                                    },
                                    "production_branch": {
                                        "type": "string",
                                        "example": "\"main\"",
                                        "description": "Project production branch name"
                                    },
                                    "pr_comments_enabled": {
                                        "type": "boolean",
                                        "example": "true",
                                        "description": "Enable Pages to comment on Pull Requests"
                                    },
                                    "deployments_enabled": {
                                        "type": "boolean",
                                        "example": "true",
                                        "description": "Toggle deployments on this repo"
                                    }
                                }
                            }
                        },
                        "readOnly": true,
                        "description": "Configs for the project source"
                    },
                    "build_config": {
                        "type": "object",
                        "example": "{\n  \"build_command\": \"npm run build\",\n  \"destination_dir\": \"build\",\n  \"root_dir\": \"/\",\n  \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n  \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n}",
                        "properties": {
                            "build_command": {
                                "type": "string",
                                "example": "\"npm run build\"",
                                "description": "Command used to build project"
                            },
                            "destination_dir": {
                                "type": "string",
                                "example": "\"build\"",
                                "description": "Output directory of the build"
                            },
                            "root_dir": {
                                "type": "string",
                                "example": "\"/\"",
                                "description": "Directory to run the command"
                            },
                            "web_analytics_tag": {
                                "type": "string",
                                "example": "\"cee1c73f6e4743d0b5e6bb1a0bcaabcc\"",
                                "description": "The classifying tag for analytics"
                            },
                            "web_analytics_token": {
                                "type": "string",
                                "example": "\"021e1057c18547eca7b79f2516f06o7x\"",
                                "description": "The auth token for analytics"
                            }
                        },
                        "description": "Configs for the project build process"
                    },
                    "deployment_configs": {
                        "type": "object",
                        "example": "{\n  \"preview\": {\n    \"env_vars\": {\n      \"BUILD_VERSION\": {\n        \"value\": \"3.3\"\n      }\n    }\n  },\n  \"production\": {\n    \"env_vars\": {\n      \"BUILD_VERSION\": {\n        \"value\": \"3.3\"\n      }\n    }\n  }\n}",
                        "properties": {
                            "preview": {
                                "type": "object",
                                "example": "{\n  \"env_vars\": {\n    \"BUILD_VERSION\": {\n      \"value\": \"3.3\"\n    }\n  }\n}",
                                "properties": {
                                    "env_vars": {
                                        "type": "object",
                                        "example": "{\n  \"BUILD_VERSION\": {\n    \"value\": \"3.3\"\n  }\n}",
                                        "properties": {
                                            "BUILD_VERSION": {
                                                "type": "object",
                                                "example": "{\n  \"value\": \"3.3\"\n}",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "\"3.3\"",
                                                        "description": "Environment variable value"
                                                    }
                                                },
                                                "description": "Environment variable"
                                            }
                                        },
                                        "description": "Environment variables for build configs"
                                    }
                                },
                                "description": "Configs for preview deploys"
                            },
                            "production": {
                                "type": "object",
                                "example": "{\n  \"env_vars\": {\n    \"BUILD_VERSION\": {\n      \"value\": \"3.3\"\n    }\n  }\n}",
                                "properties": {
                                    "env_vars": {
                                        "type": "object",
                                        "example": "{\n  \"BUILD_VERSION\": {\n    \"value\": \"3.3\"\n  }\n}",
                                        "properties": {
                                            "BUILD_VERSION": {
                                                "type": "object",
                                                "example": "{\n  \"value\": \"3.3\"\n}",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "\"3.3\"",
                                                        "description": "Environment variable value"
                                                    }
                                                },
                                                "description": "Environment variable"
                                            }
                                        },
                                        "description": "Environment variables for build configs"
                                    }
                                },
                                "description": "Configs for production deploys"
                            }
                        },
                        "description": "Configs for deployments in a project"
                    },
                    "latest_deployment": {
                        "type": "object",
                        "example": "{\n  \"id\": \"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\n  \"short_id\": \"f64788e9\",\n  \"project_id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n  \"project_name\": \"ninjakittens\",\n  \"environment\": \"preview\",\n  \"url\": \"https://f64788e9.ninjakittens.pages.dev\",\n  \"created_on\": \"2021-03-09T00:55:03.923456Z\",\n  \"modified_on\": \"2021-03-09T00:58:59.045655\",\n  \"aliases\": [\n    \"https://branchname.projectname.pages.dev\"\n  ],\n  \"latest_stage\": {\n    \"name\": \"deploy\",\n    \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n    \"ended_on\": \"2021-03-09T00:58:59.045655\",\n    \"status\": \"success\"\n  },\n  \"env_vars\": {\n    \"BUILD_VERSION\": {\n      \"value\": \"3.3\"\n    },\n    \"ENV\": {\n      \"value\": \"STAGING\"\n    }\n  },\n  \"deployment_trigger\": {\n    \"type\": \"ad_hoc\",\n    \"metadata\": {\n      \"branch\": \"main\",\n      \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n      \"commit_message\": \"Update index.html\"\n    }\n  },\n  \"stages\": [\n    {\n      \"name\": \"queued\",\n      \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n      \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n      \"status\": \"active\"\n    },\n    {\n      \"name\": \"initialize\",\n      \"started_on\": null,\n      \"ended_on\": null,\n      \"status\": \"idle\"\n    },\n    {\n      \"name\": \"clone_repo\",\n      \"started_on\": null,\n      \"ended_on\": null,\n      \"status\": \"idle\"\n    },\n    {\n      \"name\": \"build\",\n      \"started_on\": null,\n      \"ended_on\": null,\n      \"status\": \"idle\"\n    },\n    {\n      \"name\": \"deploy\",\n      \"started_on\": null,\n      \"ended_on\": null,\n      \"status\": \"idle\"\n    }\n  ],\n  \"build_config\": {\n    \"build_command\": \"npm run build\",\n    \"destination_dir\": \"build\",\n    \"root_dir\": \"/\",\n    \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n    \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n  },\n  \"source\": {\n    \"type\": \"github\",\n    \"config\": {\n      \"owner\": \"cloudflare\",\n      \"repo_name\": \"ninjakittens\",\n      \"production_branch\": \"main\",\n      \"pr_comments_enabled\": true,\n      \"deployments_enabled\": true\n    }\n  }\n}",
                        "properties": {
                            "id": {
                                "type": "string",
                                "example": "\"f64788e9-fccd-4d4a-a28a-cb84f88f6\"",
                                "description": "Id of the deployment",
                                "readOnly": true
                            },
                            "short_id": {
                                "type": "string",
                                "example": "\"f64788e9\"",
                                "description": "Short Id (8 character) of the deployment",
                                "readOnly": true
                            },
                            "project_id": {
                                "type": "string",
                                "example": "\"7b162ea7-7367-4d67-bcde-1160995d5\"",
                                "description": "Id of the project",
                                "readOnly": true
                            },
                            "project_name": {
                                "type": "string",
                                "example": "\"ninjakittens\"",
                                "readOnly": true,
                                "description": "Name of the project"
                            },
                            "environment": {
                                "type": "string",
                                "example": "\"preview\"",
                                "description": "Type of deploy",
                                "readOnly": true,
                                "pattern": "preview|prediction"
                            },
                            "url": {
                                "type": "string",
                                "example": "\"https://f64788e9.ninjakittens.pages.dev\"",
                                "description": "The live URL to view this deployment",
                                "readOnly": true
                            },
                            "created_on": {
                                "type": "string",
                                "example": "\"2021-03-09T00:55:03.923456Z\"",
                                "description": "When the deployment was created",
                                "format": "date-time",
                                "readOnly": true
                            },
                            "modified_on": {
                                "type": "string",
                                "example": "\"2021-03-09T00:58:59.045655\"",
                                "description": "When the deployment was last modified",
                                "format": "date-time",
                                "readOnly": true
                            },
                            "aliases": {
                                "type": "array",
                                "example": "[\n  \"https://branchname.projectname.pages.dev\"\n]",
                                "description": "A list of alias URLs pointing to this deployment",
                                "readOnly": true
                            },
                            "latest_stage": {
                                "type": "object",
                                "example": "{\n  \"name\": \"deploy\",\n  \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n  \"ended_on\": \"2021-03-09T00:58:59.045655\",\n  \"status\": \"success\"\n}",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "\"deploy\"",
                                        "description": "The current build stage",
                                        "pattern": "queued|initialize|clone_repo|build|deploy"
                                    },
                                    "started_on": {
                                        "type": "string",
                                        "example": "\"2021-03-09T00:55:03.923456Z\"",
                                        "description": "When the stage started",
                                        "format": "date-time",
                                        "readOnly": true
                                    },
                                    "ended_on": {
                                        "type": "string",
                                        "example": "\"2021-03-09T00:58:59.045655\"",
                                        "description": "When the stage ended",
                                        "format": "date-time",
                                        "readOnly": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "\"success\"",
                                        "description": "State of the current stage",
                                        "pattern": "success|idle|active|failure|canceled",
                                        "readOnly": true
                                    }
                                },
                                "readOnly": true,
                                "description": "The status of the deployment"
                            },
                            "env_vars": {
                                "type": "object",
                                "example": "{\n  \"BUILD_VERSION\": {\n    \"value\": \"3.3\"\n  },\n  \"ENV\": {\n    \"value\": \"STAGING\"\n  }\n}",
                                "description": "A dict of env variables to build this deploy",
                                "readOnly": true
                            },
                            "deployment_trigger": {
                                "type": "object",
                                "example": "{\n  \"type\": \"ad_hoc\",\n  \"metadata\": {\n    \"branch\": \"main\",\n    \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n    \"commit_message\": \"Update index.html\"\n  }\n}",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "\"ad_hoc\"",
                                        "description": "What caused the deployment",
                                        "pattern": "push|ad_hoc",
                                        "readOnly": true
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "example": "{\n  \"branch\": \"main\",\n  \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n  \"commit_message\": \"Update index.html\"\n}",
                                        "properties": {
                                            "branch": {
                                                "type": "string",
                                                "example": "\"main\"",
                                                "description": "Where the trigger happened",
                                                "readOnly": true
                                            },
                                            "commit_hash": {
                                                "type": "string",
                                                "example": "\"ad9ccd918a81025731e10e40267e11273a263421\"",
                                                "description": "Hash of the deployment trigger commit",
                                                "readOnly": true
                                            },
                                            "commit_message": {
                                                "type": "string",
                                                "example": "\"Update index.html\"",
                                                "description": "Message of the deployment trigger commit",
                                                "readOnly": true
                                            }
                                        },
                                        "description": "Additional info about the trigger"
                                    }
                                },
                                "description": "Info about what caused the deployment",
                                "readOnly": true
                            },
                            "stages": {
                                "type": "array",
                                "example": "[\n  {\n    \"name\": \"queued\",\n    \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n    \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n    \"status\": \"active\"\n  },\n  {\n    \"name\": \"initialize\",\n    \"started_on\": null,\n    \"ended_on\": null,\n    \"status\": \"idle\"\n  },\n  {\n    \"name\": \"clone_repo\",\n    \"started_on\": null,\n    \"ended_on\": null,\n    \"status\": \"idle\"\n  },\n  {\n    \"name\": \"build\",\n    \"started_on\": null,\n    \"ended_on\": null,\n    \"status\": \"idle\"\n  },\n  {\n    \"name\": \"deploy\",\n    \"started_on\": null,\n    \"ended_on\": null,\n    \"status\": \"idle\"\n  }\n]",
                                "readOnly": true,
                                "description": "List of past stages",
                                "items": {
                                    "description": "The status of the deployment",
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "name": {
                                            "description": "The current build stage",
                                            "type": "string",
                                            "pattern": "queued|initialize|clone_repo|build|deploy",
                                            "example": "deploy"
                                        },
                                        "started_on": {
                                            "description": "When the stage started",
                                            "format": "date-time",
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "2021-03-09T00:55:03.923456Z"
                                        },
                                        "ended_on": {
                                            "description": "When the stage ended",
                                            "format": "date-time",
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "2021-03-09T00:58:59.045655"
                                        },
                                        "status": {
                                            "description": "State of the current stage",
                                            "type": "string",
                                            "pattern": "success|idle|active|failure|canceled",
                                            "readOnly": true,
                                            "example": "success"
                                        }
                                    }
                                }
                            },
                            "build_config": {
                                "type": "object",
                                "example": "{\n  \"build_command\": \"npm run build\",\n  \"destination_dir\": \"build\",\n  \"root_dir\": \"/\",\n  \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n  \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n}",
                                "properties": {
                                    "build_command": {
                                        "type": "string",
                                        "example": "\"npm run build\"",
                                        "description": "Command used to build project"
                                    },
                                    "destination_dir": {
                                        "type": "string",
                                        "example": "\"build\"",
                                        "description": "Output directory of the build"
                                    },
                                    "root_dir": {
                                        "type": "string",
                                        "example": "\"/\"",
                                        "description": "Directory to run the command"
                                    },
                                    "web_analytics_tag": {
                                        "type": "string",
                                        "example": "\"cee1c73f6e4743d0b5e6bb1a0bcaabcc\"",
                                        "description": "The classifying tag for analytics"
                                    },
                                    "web_analytics_token": {
                                        "type": "string",
                                        "example": "\"021e1057c18547eca7b79f2516f06o7x\"",
                                        "description": "The auth token for analytics"
                                    }
                                },
                                "readOnly": true,
                                "description": "Configs for the project build process"
                            },
                            "source": {
                                "type": "object",
                                "example": "{\n  \"type\": \"github\",\n  \"config\": {\n    \"owner\": \"cloudflare\",\n    \"repo_name\": \"ninjakittens\",\n    \"production_branch\": \"main\",\n    \"pr_comments_enabled\": true,\n    \"deployments_enabled\": true\n  }\n}",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "\"github\"",
                                        "description": "Project host type",
                                        "readOnly": true
                                    },
                                    "config": {
                                        "type": "object",
                                        "example": "{\n  \"owner\": \"cloudflare\",\n  \"repo_name\": \"ninjakittens\",\n  \"production_branch\": \"main\",\n  \"pr_comments_enabled\": true,\n  \"deployments_enabled\": true\n}",
                                        "properties": {
                                            "owner": {
                                                "type": "string",
                                                "example": "\"cloudflare\"",
                                                "description": "Project owner username",
                                                "readOnly": true
                                            },
                                            "repo_name": {
                                                "type": "string",
                                                "example": "\"ninjakittens\"",
                                                "description": "Project repository name"
                                            },
                                            "production_branch": {
                                                "type": "string",
                                                "example": "\"main\"",
                                                "description": "Project production branch name"
                                            },
                                            "pr_comments_enabled": {
                                                "type": "boolean",
                                                "example": "true",
                                                "description": "Enable Pages to comment on Pull Requests"
                                            },
                                            "deployments_enabled": {
                                                "type": "boolean",
                                                "example": "true",
                                                "description": "Toggle deployments on this repo"
                                            }
                                        }
                                    }
                                },
                                "readOnly": true,
                                "description": "Configs for the project source"
                            }
                        },
                        "description": "Most recent deployment to the repo",
                        "readOnly": true,
                        "id": "https://api.cloudflare.com/schemas/v4/client/account/pages/deployments.json",
                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                        "title": "Pages Deployment",
                        "cfExtendedDescription": "**For more detailed documentation on using the API for Pages see the [Pages docs](https://developers.cloudflare.com/pages/).**",
                        "cfDeprecations": {
                            "logs_v1_deprecated": {
                                "id": "logs_v1_deprecated",
                                "description": "Use \"Get deployment logs\" instead: https://api.cloudflare.com/#pages-deployment-get-deployment-logs.",
                                "eol": "2022-09-19",
                                "display": true
                            }
                        },
                        "links": [
                            {
                                "title": "Get deployments",
                                "description": "Fetch a list of deployments from a project",
                                "rel": "self",
                                "href": "accounts/:account_id/pages/projects/:project_name/deployments",
                                "method": "GET",
                                "cfRequestHeaders": {
                                    "type": "object",
                                    "required": [
                                        "X-Auth-Email",
                                        "X-Auth-Key"
                                    ],
                                    "properties": {
                                        "X-Auth-Email": {
                                            "description": "Your Cloudflare email",
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "X-Auth-Key": {
                                            "description": "Your Cloudflare API key",
                                            "type": "string",
                                            "minLength": 45,
                                            "maxLength": 45,
                                            "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                        }
                                    }
                                },
                                "targetSchema": {
                                    "allOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "cfRecurse": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "title": "Get deployment info",
                                "description": "Fetch a deployment",
                                "rel": "self",
                                "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id",
                                "method": "GET",
                                "cfRequestHeaders": {
                                    "type": "object",
                                    "required": [
                                        "X-Auth-Email",
                                        "X-Auth-Key"
                                    ],
                                    "properties": {
                                        "X-Auth-Email": {
                                            "description": "Your Cloudflare email",
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "X-Auth-Key": {
                                            "description": "Your Cloudflare API key",
                                            "type": "string",
                                            "minLength": 45,
                                            "maxLength": 45,
                                            "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                        }
                                    }
                                },
                                "targetSchema": {
                                    "allOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "cfRecurse": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "title": "Get deployment stage logs",
                                "description": "Fetch deploy logs",
                                "rel": "self",
                                "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/history/:deployment_stage_name/logs",
                                "method": "GET",
                                "cfDeprecation": {
                                    "id": "logs_v1_deprecated",
                                    "description": "Use \"Get deployment logs\" instead: https://api.cloudflare.com/#pages-deployment-get-deployment-logs.",
                                    "eol": "2022-09-19",
                                    "display": true
                                },
                                "cfRequestHeaders": {
                                    "type": "object",
                                    "required": [
                                        "X-Auth-Email",
                                        "X-Auth-Key"
                                    ],
                                    "properties": {
                                        "X-Auth-Email": {
                                            "description": "Your Cloudflare email",
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "X-Auth-Key": {
                                            "description": "Your Cloudflare API key",
                                            "type": "string",
                                            "minLength": 45,
                                            "maxLength": 45,
                                            "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                        }
                                    }
                                },
                                "targetSchema": {
                                    "allOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": "object",
                                                    "example": {
                                                        "name": "build",
                                                        "started_on": "2021-04-20T19:35:58.238757Z",
                                                        "ended_on": "2021-04-20T19:36:06.38889Z",
                                                        "status": "success",
                                                        "start": 0,
                                                        "end": 37,
                                                        "total": 37,
                                                        "data": [
                                                            {
                                                                "id": 15,
                                                                "timestamp": "2021-04-20T19:35:59.0749819Z",
                                                                "message": "Installing dependencies"
                                                            },
                                                            {
                                                                "id": 16,
                                                                "timestamp": "2021-04-20T19:35:59.0931208Z",
                                                                "message": "Python version set to 2.7"
                                                            },
                                                            {
                                                                "id": 17,
                                                                "timestamp": "2021-04-20T19:36:02.2369501Z",
                                                                "message": "v12.18.0 is already installed."
                                                            },
                                                            {
                                                                "id": 18,
                                                                "timestamp": "2021-04-20T19:36:02.6028886Z",
                                                                "message": "Now using node v12.18.0 (npm v6.14.4)"
                                                            },
                                                            {
                                                                "id": 19,
                                                                "timestamp": "2021-04-20T19:36:02.624555Z",
                                                                "message": "Started restoring cached build plugins"
                                                            },
                                                            {
                                                                "id": 20,
                                                                "timestamp": "2021-04-20T19:36:02.6340688Z",
                                                                "message": "Finished restoring cached build plugins"
                                                            },
                                                            {
                                                                "id": 21,
                                                                "timestamp": "2021-04-20T19:36:02.963095Z",
                                                                "message": "Attempting ruby version 2.7.1, read from environment"
                                                            },
                                                            {
                                                                "id": 22,
                                                                "timestamp": "2021-04-20T19:36:04.2236084Z",
                                                                "message": "Using ruby version 2.7.1"
                                                            },
                                                            {
                                                                "id": 23,
                                                                "timestamp": "2021-04-20T19:36:04.5450152Z",
                                                                "message": "Using PHP version 5.6"
                                                            },
                                                            {
                                                                "id": 24,
                                                                "timestamp": "2021-04-20T19:36:04.5740509Z",
                                                                "message": "5.2 is already installed."
                                                            },
                                                            {
                                                                "id": 25,
                                                                "timestamp": "2021-04-20T19:36:04.577035Z",
                                                                "message": "Using Swift version 5.2"
                                                            },
                                                            {
                                                                "id": 26,
                                                                "timestamp": "2021-04-20T19:36:04.5771615Z",
                                                                "message": "Installing Hugo 0.54.0"
                                                            },
                                                            {
                                                                "id": 27,
                                                                "timestamp": "2021-04-20T19:36:05.4786868Z",
                                                                "message": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
                                                            },
                                                            {
                                                                "id": 28,
                                                                "timestamp": "2021-04-20T19:36:05.4794366Z",
                                                                "message": "Started restoring cached go cache"
                                                            },
                                                            {
                                                                "id": 29,
                                                                "timestamp": "2021-04-20T19:36:05.481977Z",
                                                                "message": "Finished restoring cached go cache"
                                                            },
                                                            {
                                                                "id": 30,
                                                                "timestamp": "2021-04-20T19:36:05.9049776Z",
                                                                "message": "go version go1.14.4 linux/amd64"
                                                            },
                                                            {
                                                                "id": 31,
                                                                "timestamp": "2021-04-20T19:36:05.9086053Z",
                                                                "message": "go version go1.14.4 linux/amd64"
                                                            },
                                                            {
                                                                "id": 32,
                                                                "timestamp": "2021-04-20T19:36:05.9163568Z",
                                                                "message": "Installing missing commands"
                                                            },
                                                            {
                                                                "id": 33,
                                                                "timestamp": "2021-04-20T19:36:05.9163934Z",
                                                                "message": "Verify run directory"
                                                            },
                                                            {
                                                                "id": 34,
                                                                "timestamp": "2021-04-20T19:36:05.9164636Z",
                                                                "message": "Executing user command: echo \"skipping build step: no build command specified\""
                                                            },
                                                            {
                                                                "id": 35,
                                                                "timestamp": "2021-04-20T19:36:05.9165087Z",
                                                                "message": "skipping build step: no build command specified"
                                                            },
                                                            {
                                                                "id": 36,
                                                                "timestamp": "2021-04-20T19:36:05.917412Z",
                                                                "message": "Finished"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "title": "Get deployment logs",
                                "description": "Fetch deploy logs",
                                "rel": "self",
                                "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/history/logs",
                                "method": "GET",
                                "cfRequestHeaders": {
                                    "type": "object",
                                    "required": [
                                        "X-Auth-Email",
                                        "X-Auth-Key"
                                    ],
                                    "properties": {
                                        "X-Auth-Email": {
                                            "description": "Your Cloudflare email",
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "X-Auth-Key": {
                                            "description": "Your Cloudflare API key",
                                            "type": "string",
                                            "minLength": 45,
                                            "maxLength": 45,
                                            "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                        }
                                    }
                                },
                                "targetSchema": {
                                    "allOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": "object",
                                                    "example": {
                                                        "total": 30,
                                                        "includes_container_logs": true,
                                                        "data": [
                                                            {
                                                                "ts": "2021-04-20T19:35:29.0749819Z",
                                                                "line": "Cloning repository..."
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:30.0749819Z",
                                                                "line": "From https://github.com/cloudflare/example"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:30.0749819Z",
                                                                "line": " * branch            209c5bb11d89533f426b2f8469bcae12fdccf71b -> FETCH_HEAD"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:30.0749819Z",
                                                                "line": ""
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:30.0749819Z",
                                                                "line": "HEAD is now at 209c5bb Update index.html"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:30.0749819Z",
                                                                "line": ""
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:30.0749819Z",
                                                                "line": ""
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:30.0749819Z",
                                                                "line": "Success: Finished cloning repository files"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:59.0749819Z",
                                                                "line": "Installing dependencies"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:59.0931208Z",
                                                                "line": "Python version set to 2.7"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:02.2369501Z",
                                                                "line": "v12.18.0 is already installed."
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:02.6028886Z",
                                                                "line": "Now using node v12.18.0 (npm v6.14.4)"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:02.624555Z",
                                                                "line": "Started restoring cached build plugins"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:02.6340688Z",
                                                                "line": "Finished restoring cached build plugins"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:02.963095Z",
                                                                "line": "Attempting ruby version 2.7.1, read from environment"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:04.2236084Z",
                                                                "line": "Using ruby version 2.7.1"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:04.5450152Z",
                                                                "line": "Using PHP version 5.6"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:04.5740509Z",
                                                                "line": "5.2 is already installed."
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:04.577035Z",
                                                                "line": "Using Swift version 5.2"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:04.5771615Z",
                                                                "line": "Installing Hugo 0.54.0"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.4786868Z",
                                                                "line": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.4794366Z",
                                                                "line": "Started restoring cached go cache"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.481977Z",
                                                                "line": "Finished restoring cached go cache"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.9049776Z",
                                                                "line": "go version go1.14.4 linux/amd64"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.9086053Z",
                                                                "line": "go version go1.14.4 linux/amd64"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.9163568Z",
                                                                "line": "Installing missing commands"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.9163934Z",
                                                                "line": "Verify run directory"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.9164636Z",
                                                                "line": "Executing user command: echo \"skipping build step: no build command specified\""
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.9165087Z",
                                                                "line": "skipping build step: no build command specified"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.917412Z",
                                                                "line": "Finished"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "title": "Delete deployment",
                                "description": "Destroy a deployment",
                                "rel": "self",
                                "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id",
                                "method": "DELETE",
                                "cfRequestHeaders": {
                                    "type": "object",
                                    "required": [
                                        "X-Auth-Email",
                                        "X-Auth-Key"
                                    ],
                                    "properties": {
                                        "X-Auth-Email": {
                                            "description": "Your Cloudflare email",
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "X-Auth-Key": {
                                            "description": "Your Cloudflare API key",
                                            "type": "string",
                                            "minLength": 45,
                                            "maxLength": 45,
                                            "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                        }
                                    }
                                },
                                "targetSchema": {
                                    "example": {
                                        "result": null,
                                        "success": true,
                                        "errors": [],
                                        "messages": []
                                    }
                                }
                            },
                            {
                                "title": "Create deployment",
                                "description": "Start a new deployment from production. The repo/account must have been authorized through the Pages UI dash before.",
                                "rel": "self",
                                "href": "accounts/:account_id/pages/projects/:project_name/deployments",
                                "method": "POST",
                                "cfRequestHeaders": {
                                    "type": "object",
                                    "required": [
                                        "X-Auth-Email",
                                        "X-Auth-Key"
                                    ],
                                    "properties": {
                                        "X-Auth-Email": {
                                            "description": "Your Cloudflare email",
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "X-Auth-Key": {
                                            "description": "Your Cloudflare API key",
                                            "type": "string",
                                            "minLength": 45,
                                            "maxLength": 45,
                                            "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                        }
                                    }
                                },
                                "targetSchema": {
                                    "allOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "cfRecurse": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "title": "Retry deployment",
                                "description": "Retry a previous deployment",
                                "rel": "self",
                                "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/retry",
                                "method": "POST",
                                "cfRequestHeaders": {
                                    "type": "object",
                                    "required": [
                                        "X-Auth-Email",
                                        "X-Auth-Key"
                                    ],
                                    "properties": {
                                        "X-Auth-Email": {
                                            "description": "Your Cloudflare email",
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "X-Auth-Key": {
                                            "description": "Your Cloudflare API key",
                                            "type": "string",
                                            "minLength": 45,
                                            "maxLength": 45,
                                            "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                        }
                                    }
                                },
                                "targetSchema": {
                                    "allOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "cfRecurse": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "title": "Rollback deployment",
                                "description": "Rollback the production deployment to a previous deploy. You can only rollback to succesful builds on production.",
                                "rel": "self",
                                "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/rollback",
                                "method": "POST",
                                "cfRequestHeaders": {
                                    "type": "object",
                                    "required": [
                                        "X-Auth-Email",
                                        "X-Auth-Key"
                                    ],
                                    "properties": {
                                        "X-Auth-Email": {
                                            "description": "Your Cloudflare email",
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "X-Auth-Key": {
                                            "description": "Your Cloudflare API key",
                                            "type": "string",
                                            "minLength": 45,
                                            "maxLength": 45,
                                            "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                        }
                                    }
                                },
                                "targetSchema": {
                                    "allOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "cfRecurse": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ],
                        "definitions": {
                            "deployment-new-deployment": {
                                "allOf": [
                                    {
                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                        "description": "Common schema for all Cloudflare v4 API responses",
                                        "type": "object",
                                        "required": [
                                            "success",
                                            "errors",
                                            "messages",
                                            "result"
                                        ],
                                        "oneOf": [
                                            {
                                                "$comment": "This subschema describes successful responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            true
                                                        ],
                                                        "example": true
                                                    },
                                                    "errors": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "messages": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": [
                                                            "object",
                                                            "array",
                                                            "string"
                                                        ]
                                                    }
                                                }
                                            },
                                            {
                                                "$comment": "This subschema describes failure responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            false
                                                        ],
                                                        "example": false
                                                    },
                                                    "errors": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "minLength": 1,
                                                        "example": [
                                                            {
                                                                "code": 7003,
                                                                "message": "No route for the URI"
                                                            }
                                                        ]
                                                    },
                                                    "messages": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": "null",
                                                        "enum": [
                                                            null
                                                        ],
                                                        "example": null
                                                    }
                                                }
                                            }
                                        ],
                                        "definitions": {
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "result": {
                                                "cfRecurse": ""
                                            }
                                        }
                                    }
                                ]
                            },
                            "deployment-response-stage-logs": {
                                "allOf": [
                                    {
                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                        "description": "Common schema for all Cloudflare v4 API responses",
                                        "type": "object",
                                        "required": [
                                            "success",
                                            "errors",
                                            "messages",
                                            "result"
                                        ],
                                        "oneOf": [
                                            {
                                                "$comment": "This subschema describes successful responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            true
                                                        ],
                                                        "example": true
                                                    },
                                                    "errors": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "messages": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": [
                                                            "object",
                                                            "array",
                                                            "string"
                                                        ]
                                                    }
                                                }
                                            },
                                            {
                                                "$comment": "This subschema describes failure responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            false
                                                        ],
                                                        "example": false
                                                    },
                                                    "errors": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "minLength": 1,
                                                        "example": [
                                                            {
                                                                "code": 7003,
                                                                "message": "No route for the URI"
                                                            }
                                                        ]
                                                    },
                                                    "messages": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": "null",
                                                        "enum": [
                                                            null
                                                        ],
                                                        "example": null
                                                    }
                                                }
                                            }
                                        ],
                                        "definitions": {
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "result": {
                                                "type": "object",
                                                "example": {
                                                    "name": "build",
                                                    "started_on": "2021-04-20T19:35:58.238757Z",
                                                    "ended_on": "2021-04-20T19:36:06.38889Z",
                                                    "status": "success",
                                                    "start": 0,
                                                    "end": 37,
                                                    "total": 37,
                                                    "data": [
                                                        {
                                                            "id": 15,
                                                            "timestamp": "2021-04-20T19:35:59.0749819Z",
                                                            "message": "Installing dependencies"
                                                        },
                                                        {
                                                            "id": 16,
                                                            "timestamp": "2021-04-20T19:35:59.0931208Z",
                                                            "message": "Python version set to 2.7"
                                                        },
                                                        {
                                                            "id": 17,
                                                            "timestamp": "2021-04-20T19:36:02.2369501Z",
                                                            "message": "v12.18.0 is already installed."
                                                        },
                                                        {
                                                            "id": 18,
                                                            "timestamp": "2021-04-20T19:36:02.6028886Z",
                                                            "message": "Now using node v12.18.0 (npm v6.14.4)"
                                                        },
                                                        {
                                                            "id": 19,
                                                            "timestamp": "2021-04-20T19:36:02.624555Z",
                                                            "message": "Started restoring cached build plugins"
                                                        },
                                                        {
                                                            "id": 20,
                                                            "timestamp": "2021-04-20T19:36:02.6340688Z",
                                                            "message": "Finished restoring cached build plugins"
                                                        },
                                                        {
                                                            "id": 21,
                                                            "timestamp": "2021-04-20T19:36:02.963095Z",
                                                            "message": "Attempting ruby version 2.7.1, read from environment"
                                                        },
                                                        {
                                                            "id": 22,
                                                            "timestamp": "2021-04-20T19:36:04.2236084Z",
                                                            "message": "Using ruby version 2.7.1"
                                                        },
                                                        {
                                                            "id": 23,
                                                            "timestamp": "2021-04-20T19:36:04.5450152Z",
                                                            "message": "Using PHP version 5.6"
                                                        },
                                                        {
                                                            "id": 24,
                                                            "timestamp": "2021-04-20T19:36:04.5740509Z",
                                                            "message": "5.2 is already installed."
                                                        },
                                                        {
                                                            "id": 25,
                                                            "timestamp": "2021-04-20T19:36:04.577035Z",
                                                            "message": "Using Swift version 5.2"
                                                        },
                                                        {
                                                            "id": 26,
                                                            "timestamp": "2021-04-20T19:36:04.5771615Z",
                                                            "message": "Installing Hugo 0.54.0"
                                                        },
                                                        {
                                                            "id": 27,
                                                            "timestamp": "2021-04-20T19:36:05.4786868Z",
                                                            "message": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
                                                        },
                                                        {
                                                            "id": 28,
                                                            "timestamp": "2021-04-20T19:36:05.4794366Z",
                                                            "message": "Started restoring cached go cache"
                                                        },
                                                        {
                                                            "id": 29,
                                                            "timestamp": "2021-04-20T19:36:05.481977Z",
                                                            "message": "Finished restoring cached go cache"
                                                        },
                                                        {
                                                            "id": 30,
                                                            "timestamp": "2021-04-20T19:36:05.9049776Z",
                                                            "message": "go version go1.14.4 linux/amd64"
                                                        },
                                                        {
                                                            "id": 31,
                                                            "timestamp": "2021-04-20T19:36:05.9086053Z",
                                                            "message": "go version go1.14.4 linux/amd64"
                                                        },
                                                        {
                                                            "id": 32,
                                                            "timestamp": "2021-04-20T19:36:05.9163568Z",
                                                            "message": "Installing missing commands"
                                                        },
                                                        {
                                                            "id": 33,
                                                            "timestamp": "2021-04-20T19:36:05.9163934Z",
                                                            "message": "Verify run directory"
                                                        },
                                                        {
                                                            "id": 34,
                                                            "timestamp": "2021-04-20T19:36:05.9164636Z",
                                                            "message": "Executing user command: echo \"skipping build step: no build command specified\""
                                                        },
                                                        {
                                                            "id": 35,
                                                            "timestamp": "2021-04-20T19:36:05.9165087Z",
                                                            "message": "skipping build step: no build command specified"
                                                        },
                                                        {
                                                            "id": 36,
                                                            "timestamp": "2021-04-20T19:36:05.917412Z",
                                                            "message": "Finished"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "deployment-response-logs": {
                                "allOf": [
                                    {
                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                        "description": "Common schema for all Cloudflare v4 API responses",
                                        "type": "object",
                                        "required": [
                                            "success",
                                            "errors",
                                            "messages",
                                            "result"
                                        ],
                                        "oneOf": [
                                            {
                                                "$comment": "This subschema describes successful responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            true
                                                        ],
                                                        "example": true
                                                    },
                                                    "errors": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "messages": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": [
                                                            "object",
                                                            "array",
                                                            "string"
                                                        ]
                                                    }
                                                }
                                            },
                                            {
                                                "$comment": "This subschema describes failure responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            false
                                                        ],
                                                        "example": false
                                                    },
                                                    "errors": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "minLength": 1,
                                                        "example": [
                                                            {
                                                                "code": 7003,
                                                                "message": "No route for the URI"
                                                            }
                                                        ]
                                                    },
                                                    "messages": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": "null",
                                                        "enum": [
                                                            null
                                                        ],
                                                        "example": null
                                                    }
                                                }
                                            }
                                        ],
                                        "definitions": {
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "result": {
                                                "type": "object",
                                                "example": {
                                                    "total": 30,
                                                    "includes_container_logs": true,
                                                    "data": [
                                                        {
                                                            "ts": "2021-04-20T19:35:29.0749819Z",
                                                            "line": "Cloning repository..."
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:30.0749819Z",
                                                            "line": "From https://github.com/cloudflare/example"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:30.0749819Z",
                                                            "line": " * branch            209c5bb11d89533f426b2f8469bcae12fdccf71b -> FETCH_HEAD"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:30.0749819Z",
                                                            "line": ""
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:30.0749819Z",
                                                            "line": "HEAD is now at 209c5bb Update index.html"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:30.0749819Z",
                                                            "line": ""
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:30.0749819Z",
                                                            "line": ""
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:30.0749819Z",
                                                            "line": "Success: Finished cloning repository files"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:59.0749819Z",
                                                            "line": "Installing dependencies"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:59.0931208Z",
                                                            "line": "Python version set to 2.7"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:02.2369501Z",
                                                            "line": "v12.18.0 is already installed."
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:02.6028886Z",
                                                            "line": "Now using node v12.18.0 (npm v6.14.4)"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:02.624555Z",
                                                            "line": "Started restoring cached build plugins"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:02.6340688Z",
                                                            "line": "Finished restoring cached build plugins"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:02.963095Z",
                                                            "line": "Attempting ruby version 2.7.1, read from environment"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:04.2236084Z",
                                                            "line": "Using ruby version 2.7.1"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:04.5450152Z",
                                                            "line": "Using PHP version 5.6"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:04.5740509Z",
                                                            "line": "5.2 is already installed."
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:04.577035Z",
                                                            "line": "Using Swift version 5.2"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:04.5771615Z",
                                                            "line": "Installing Hugo 0.54.0"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.4786868Z",
                                                            "line": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.4794366Z",
                                                            "line": "Started restoring cached go cache"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.481977Z",
                                                            "line": "Finished restoring cached go cache"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.9049776Z",
                                                            "line": "go version go1.14.4 linux/amd64"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.9086053Z",
                                                            "line": "go version go1.14.4 linux/amd64"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.9163568Z",
                                                            "line": "Installing missing commands"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.9163934Z",
                                                            "line": "Verify run directory"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.9164636Z",
                                                            "line": "Executing user command: echo \"skipping build step: no build command specified\""
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.9165087Z",
                                                            "line": "skipping build step: no build command specified"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.917412Z",
                                                            "line": "Finished"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "deployment-list-response": {
                                "allOf": [
                                    {
                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                        "description": "Common schema for all Cloudflare v4 API responses",
                                        "type": "object",
                                        "required": [
                                            "success",
                                            "errors",
                                            "messages",
                                            "result"
                                        ],
                                        "oneOf": [
                                            {
                                                "$comment": "This subschema describes successful responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            true
                                                        ],
                                                        "example": true
                                                    },
                                                    "errors": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "messages": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": [
                                                            "object",
                                                            "array",
                                                            "string"
                                                        ]
                                                    }
                                                }
                                            },
                                            {
                                                "$comment": "This subschema describes failure responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            false
                                                        ],
                                                        "example": false
                                                    },
                                                    "errors": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "minLength": 1,
                                                        "example": [
                                                            {
                                                                "code": 7003,
                                                                "message": "No route for the URI"
                                                            }
                                                        ]
                                                    },
                                                    "messages": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": "null",
                                                        "enum": [
                                                            null
                                                        ],
                                                        "example": null
                                                    }
                                                }
                                            }
                                        ],
                                        "definitions": {
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "result_info": {
                                                "type": "object",
                                                "properties": {
                                                    "page": {
                                                        "example": 1
                                                    },
                                                    "per_page": {
                                                        "example": 100
                                                    },
                                                    "count": {
                                                        "example": 1
                                                    },
                                                    "total_count": {
                                                        "example": 1
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "result": {
                                                "type": "array",
                                                "cfRecurse": ""
                                            }
                                        }
                                    }
                                ]
                            },
                            "deployment-response-details": {
                                "allOf": [
                                    {
                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                        "description": "Common schema for all Cloudflare v4 API responses",
                                        "type": "object",
                                        "required": [
                                            "success",
                                            "errors",
                                            "messages",
                                            "result"
                                        ],
                                        "oneOf": [
                                            {
                                                "$comment": "This subschema describes successful responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            true
                                                        ],
                                                        "example": true
                                                    },
                                                    "errors": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "messages": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": [
                                                            "object",
                                                            "array",
                                                            "string"
                                                        ]
                                                    }
                                                }
                                            },
                                            {
                                                "$comment": "This subschema describes failure responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            false
                                                        ],
                                                        "example": false
                                                    },
                                                    "errors": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "minLength": 1,
                                                        "example": [
                                                            {
                                                                "code": 7003,
                                                                "message": "No route for the URI"
                                                            }
                                                        ]
                                                    },
                                                    "messages": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": "null",
                                                        "enum": [
                                                            null
                                                        ],
                                                        "example": null
                                                    }
                                                }
                                            }
                                        ],
                                        "definitions": {
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "result": {
                                                "cfRecurse": ""
                                            }
                                        }
                                    }
                                ]
                            },
                            "account_identifier": {
                                "id": "https://api.cloudflare.com/schemas/v4/common/identifier.json",
                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                "description": "API item identifier tag",
                                "type": "string",
                                "maxLength": 32,
                                "readOnly": true,
                                "example": "9a7806061c88ada191ed06f989cc3dac"
                            },
                            "build_config": {
                                "description": "Configs for the project build process",
                                "type": "object",
                                "properties": {
                                    "build_command": {
                                        "description": "Command used to build project",
                                        "type": "string",
                                        "example": "npm run build"
                                    },
                                    "destination_dir": {
                                        "description": "Output directory of the build",
                                        "type": "string",
                                        "example": "build"
                                    },
                                    "root_dir": {
                                        "description": "Directory to run the command",
                                        "type": "string",
                                        "example": "/"
                                    },
                                    "web_analytics_tag": {
                                        "description": "The classifying tag for analytics",
                                        "type": "string",
                                        "example": "cee1c73f6e4743d0b5e6bb1a0bcaabcc"
                                    },
                                    "web_analytics_token": {
                                        "description": "The auth token for analytics",
                                        "type": "string",
                                        "example": "021e1057c18547eca7b79f2516f06o7x"
                                    }
                                }
                            },
                            "stage": {
                                "description": "The status of the deployment",
                                "type": "object",
                                "readOnly": true,
                                "properties": {
                                    "name": {
                                        "description": "The current build stage",
                                        "type": "string",
                                        "pattern": "queued|initialize|clone_repo|build|deploy",
                                        "example": "deploy"
                                    },
                                    "started_on": {
                                        "description": "When the stage started",
                                        "format": "date-time",
                                        "type": "string",
                                        "readOnly": true,
                                        "example": "2021-03-09T00:55:03.923456Z"
                                    },
                                    "ended_on": {
                                        "description": "When the stage ended",
                                        "format": "date-time",
                                        "type": "string",
                                        "readOnly": true,
                                        "example": "2021-03-09T00:58:59.045655"
                                    },
                                    "status": {
                                        "description": "State of the current stage",
                                        "type": "string",
                                        "pattern": "success|idle|active|failure|canceled",
                                        "readOnly": true,
                                        "example": "success"
                                    }
                                }
                            }
                        },
                        "cfLinkErrors": {
                            "8000000": "An unknown error occurred",
                            "8000001": "A project already exists for this repo",
                            "8000002": "A project with this name already exists",
                            "8000003": "Invalid project name",
                            "8000004": "Account not authorized for the requested repo",
                            "8000005": "Required field missing",
                            "8000006": "Unable to parse request",
                            "8000007": "Project not found",
                            "8000008": "No installation found",
                            "8000009": "Deployment not found",
                            "8000010": "User is not authorized for provided GitHub Installation ID",
                            "8000011": "User has no linked GitHub accounts matching the provided username",
                            "8000012": "User has no linked GitHub repositories matching the provided name",
                            "8000013": "Authorization failed",
                            "8000014": "Deployment type not found",
                            "8000015": "Domain is invalid",
                            "8000016": "Unicode domains are not supported",
                            "8000017": "An operation is already in progress for this domain",
                            "8000018": "Domain is unavailable",
                            "8000019": "Project has reached the maximum number of allowed domains",
                            "8000020": "No deployment stage found for the provided name",
                            "8000021": "Domain not found",
                            "8000022": "Invalid PATCH operation requested",
                            "8000023": "Attempt to add duplicate environment variable, or replace or delete nonexistent variable",
                            "8000024": "Invalid list options provided",
                            "8000025": "Domain is not registered",
                            "8000026": "Coming soon",
                            "8000027": "Too many projects",
                            "8000028": "Must delete custom domains before deleting project",
                            "8000029": "Subdomain is unavailable",
                            "8000030": "Subdomain is blocked",
                            "8000031": "Unable to cancel completed deployment",
                            "8000032": "Unable to find a branch with the provided name",
                            "8000033": "Production branch must be set",
                            "8000034": "Cannot delete active production deployment",
                            "8000035": "Cannot delete aliased deployment",
                            "8000036": "Account has been blocked"
                        }
                    },
                    "canonical_deployment": {
                        "type": "object",
                        "example": "{\n  \"id\": \"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\n  \"short_id\": \"f64788e9\",\n  \"project_id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n  \"project_name\": \"ninjakittens\",\n  \"environment\": \"preview\",\n  \"url\": \"https://f64788e9.ninjakittens.pages.dev\",\n  \"created_on\": \"2021-03-09T00:55:03.923456Z\",\n  \"modified_on\": \"2021-03-09T00:58:59.045655\",\n  \"aliases\": [\n    \"https://branchname.projectname.pages.dev\"\n  ],\n  \"latest_stage\": {\n    \"name\": \"deploy\",\n    \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n    \"ended_on\": \"2021-03-09T00:58:59.045655\",\n    \"status\": \"success\"\n  },\n  \"env_vars\": {\n    \"BUILD_VERSION\": {\n      \"value\": \"3.3\"\n    },\n    \"ENV\": {\n      \"value\": \"STAGING\"\n    }\n  },\n  \"deployment_trigger\": {\n    \"type\": \"ad_hoc\",\n    \"metadata\": {\n      \"branch\": \"main\",\n      \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n      \"commit_message\": \"Update index.html\"\n    }\n  },\n  \"stages\": [\n    {\n      \"name\": \"queued\",\n      \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n      \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n      \"status\": \"active\"\n    },\n    {\n      \"name\": \"initialize\",\n      \"started_on\": null,\n      \"ended_on\": null,\n      \"status\": \"idle\"\n    },\n    {\n      \"name\": \"clone_repo\",\n      \"started_on\": null,\n      \"ended_on\": null,\n      \"status\": \"idle\"\n    },\n    {\n      \"name\": \"build\",\n      \"started_on\": null,\n      \"ended_on\": null,\n      \"status\": \"idle\"\n    },\n    {\n      \"name\": \"deploy\",\n      \"started_on\": null,\n      \"ended_on\": null,\n      \"status\": \"idle\"\n    }\n  ],\n  \"build_config\": {\n    \"build_command\": \"npm run build\",\n    \"destination_dir\": \"build\",\n    \"root_dir\": \"/\",\n    \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n    \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n  },\n  \"source\": {\n    \"type\": \"github\",\n    \"config\": {\n      \"owner\": \"cloudflare\",\n      \"repo_name\": \"ninjakittens\",\n      \"production_branch\": \"main\",\n      \"pr_comments_enabled\": true,\n      \"deployments_enabled\": true\n    }\n  }\n}",
                        "properties": {
                            "id": {
                                "type": "string",
                                "example": "\"f64788e9-fccd-4d4a-a28a-cb84f88f6\"",
                                "description": "Id of the deployment",
                                "readOnly": true
                            },
                            "short_id": {
                                "type": "string",
                                "example": "\"f64788e9\"",
                                "description": "Short Id (8 character) of the deployment",
                                "readOnly": true
                            },
                            "project_id": {
                                "type": "string",
                                "example": "\"7b162ea7-7367-4d67-bcde-1160995d5\"",
                                "description": "Id of the project",
                                "readOnly": true
                            },
                            "project_name": {
                                "type": "string",
                                "example": "\"ninjakittens\"",
                                "readOnly": true,
                                "description": "Name of the project"
                            },
                            "environment": {
                                "type": "string",
                                "example": "\"preview\"",
                                "description": "Type of deploy",
                                "readOnly": true,
                                "pattern": "preview|prediction"
                            },
                            "url": {
                                "type": "string",
                                "example": "\"https://f64788e9.ninjakittens.pages.dev\"",
                                "description": "The live URL to view this deployment",
                                "readOnly": true
                            },
                            "created_on": {
                                "type": "string",
                                "example": "\"2021-03-09T00:55:03.923456Z\"",
                                "description": "When the deployment was created",
                                "format": "date-time",
                                "readOnly": true
                            },
                            "modified_on": {
                                "type": "string",
                                "example": "\"2021-03-09T00:58:59.045655\"",
                                "description": "When the deployment was last modified",
                                "format": "date-time",
                                "readOnly": true
                            },
                            "aliases": {
                                "type": "array",
                                "example": "[\n  \"https://branchname.projectname.pages.dev\"\n]",
                                "description": "A list of alias URLs pointing to this deployment",
                                "readOnly": true
                            },
                            "latest_stage": {
                                "type": "object",
                                "example": "{\n  \"name\": \"deploy\",\n  \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n  \"ended_on\": \"2021-03-09T00:58:59.045655\",\n  \"status\": \"success\"\n}",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "\"deploy\"",
                                        "description": "The current build stage",
                                        "pattern": "queued|initialize|clone_repo|build|deploy"
                                    },
                                    "started_on": {
                                        "type": "string",
                                        "example": "\"2021-03-09T00:55:03.923456Z\"",
                                        "description": "When the stage started",
                                        "format": "date-time",
                                        "readOnly": true
                                    },
                                    "ended_on": {
                                        "type": "string",
                                        "example": "\"2021-03-09T00:58:59.045655\"",
                                        "description": "When the stage ended",
                                        "format": "date-time",
                                        "readOnly": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "\"success\"",
                                        "description": "State of the current stage",
                                        "pattern": "success|idle|active|failure|canceled",
                                        "readOnly": true
                                    }
                                },
                                "readOnly": true,
                                "description": "The status of the deployment"
                            },
                            "env_vars": {
                                "type": "object",
                                "example": "{\n  \"BUILD_VERSION\": {\n    \"value\": \"3.3\"\n  },\n  \"ENV\": {\n    \"value\": \"STAGING\"\n  }\n}",
                                "description": "A dict of env variables to build this deploy",
                                "readOnly": true
                            },
                            "deployment_trigger": {
                                "type": "object",
                                "example": "{\n  \"type\": \"ad_hoc\",\n  \"metadata\": {\n    \"branch\": \"main\",\n    \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n    \"commit_message\": \"Update index.html\"\n  }\n}",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "\"ad_hoc\"",
                                        "description": "What caused the deployment",
                                        "pattern": "push|ad_hoc",
                                        "readOnly": true
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "example": "{\n  \"branch\": \"main\",\n  \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n  \"commit_message\": \"Update index.html\"\n}",
                                        "properties": {
                                            "branch": {
                                                "type": "string",
                                                "example": "\"main\"",
                                                "description": "Where the trigger happened",
                                                "readOnly": true
                                            },
                                            "commit_hash": {
                                                "type": "string",
                                                "example": "\"ad9ccd918a81025731e10e40267e11273a263421\"",
                                                "description": "Hash of the deployment trigger commit",
                                                "readOnly": true
                                            },
                                            "commit_message": {
                                                "type": "string",
                                                "example": "\"Update index.html\"",
                                                "description": "Message of the deployment trigger commit",
                                                "readOnly": true
                                            }
                                        },
                                        "description": "Additional info about the trigger"
                                    }
                                },
                                "description": "Info about what caused the deployment",
                                "readOnly": true
                            },
                            "stages": {
                                "type": "array",
                                "example": "[\n  {\n    \"name\": \"queued\",\n    \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n    \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n    \"status\": \"active\"\n  },\n  {\n    \"name\": \"initialize\",\n    \"started_on\": null,\n    \"ended_on\": null,\n    \"status\": \"idle\"\n  },\n  {\n    \"name\": \"clone_repo\",\n    \"started_on\": null,\n    \"ended_on\": null,\n    \"status\": \"idle\"\n  },\n  {\n    \"name\": \"build\",\n    \"started_on\": null,\n    \"ended_on\": null,\n    \"status\": \"idle\"\n  },\n  {\n    \"name\": \"deploy\",\n    \"started_on\": null,\n    \"ended_on\": null,\n    \"status\": \"idle\"\n  }\n]",
                                "readOnly": true,
                                "description": "List of past stages",
                                "items": {
                                    "description": "The status of the deployment",
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "name": {
                                            "description": "The current build stage",
                                            "type": "string",
                                            "pattern": "queued|initialize|clone_repo|build|deploy",
                                            "example": "deploy"
                                        },
                                        "started_on": {
                                            "description": "When the stage started",
                                            "format": "date-time",
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "2021-03-09T00:55:03.923456Z"
                                        },
                                        "ended_on": {
                                            "description": "When the stage ended",
                                            "format": "date-time",
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "2021-03-09T00:58:59.045655"
                                        },
                                        "status": {
                                            "description": "State of the current stage",
                                            "type": "string",
                                            "pattern": "success|idle|active|failure|canceled",
                                            "readOnly": true,
                                            "example": "success"
                                        }
                                    }
                                }
                            },
                            "build_config": {
                                "type": "object",
                                "example": "{\n  \"build_command\": \"npm run build\",\n  \"destination_dir\": \"build\",\n  \"root_dir\": \"/\",\n  \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n  \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n}",
                                "properties": {
                                    "build_command": {
                                        "type": "string",
                                        "example": "\"npm run build\"",
                                        "description": "Command used to build project"
                                    },
                                    "destination_dir": {
                                        "type": "string",
                                        "example": "\"build\"",
                                        "description": "Output directory of the build"
                                    },
                                    "root_dir": {
                                        "type": "string",
                                        "example": "\"/\"",
                                        "description": "Directory to run the command"
                                    },
                                    "web_analytics_tag": {
                                        "type": "string",
                                        "example": "\"cee1c73f6e4743d0b5e6bb1a0bcaabcc\"",
                                        "description": "The classifying tag for analytics"
                                    },
                                    "web_analytics_token": {
                                        "type": "string",
                                        "example": "\"021e1057c18547eca7b79f2516f06o7x\"",
                                        "description": "The auth token for analytics"
                                    }
                                },
                                "readOnly": true,
                                "description": "Configs for the project build process"
                            },
                            "source": {
                                "type": "object",
                                "example": "{\n  \"type\": \"github\",\n  \"config\": {\n    \"owner\": \"cloudflare\",\n    \"repo_name\": \"ninjakittens\",\n    \"production_branch\": \"main\",\n    \"pr_comments_enabled\": true,\n    \"deployments_enabled\": true\n  }\n}",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "\"github\"",
                                        "description": "Project host type",
                                        "readOnly": true
                                    },
                                    "config": {
                                        "type": "object",
                                        "example": "{\n  \"owner\": \"cloudflare\",\n  \"repo_name\": \"ninjakittens\",\n  \"production_branch\": \"main\",\n  \"pr_comments_enabled\": true,\n  \"deployments_enabled\": true\n}",
                                        "properties": {
                                            "owner": {
                                                "type": "string",
                                                "example": "\"cloudflare\"",
                                                "description": "Project owner username",
                                                "readOnly": true
                                            },
                                            "repo_name": {
                                                "type": "string",
                                                "example": "\"ninjakittens\"",
                                                "description": "Project repository name"
                                            },
                                            "production_branch": {
                                                "type": "string",
                                                "example": "\"main\"",
                                                "description": "Project production branch name"
                                            },
                                            "pr_comments_enabled": {
                                                "type": "boolean",
                                                "example": "true",
                                                "description": "Enable Pages to comment on Pull Requests"
                                            },
                                            "deployments_enabled": {
                                                "type": "boolean",
                                                "example": "true",
                                                "description": "Toggle deployments on this repo"
                                            }
                                        }
                                    }
                                },
                                "readOnly": true,
                                "description": "Configs for the project source"
                            }
                        },
                        "description": "Most recent deployment to the repo",
                        "readOnly": true,
                        "id": "https://api.cloudflare.com/schemas/v4/client/account/pages/deployments.json",
                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                        "title": "Pages Deployment",
                        "cfExtendedDescription": "**For more detailed documentation on using the API for Pages see the [Pages docs](https://developers.cloudflare.com/pages/).**",
                        "cfDeprecations": {
                            "logs_v1_deprecated": {
                                "id": "logs_v1_deprecated",
                                "description": "Use \"Get deployment logs\" instead: https://api.cloudflare.com/#pages-deployment-get-deployment-logs.",
                                "eol": "2022-09-19",
                                "display": true
                            }
                        },
                        "links": [
                            {
                                "title": "Get deployments",
                                "description": "Fetch a list of deployments from a project",
                                "rel": "self",
                                "href": "accounts/:account_id/pages/projects/:project_name/deployments",
                                "method": "GET",
                                "cfRequestHeaders": {
                                    "type": "object",
                                    "required": [
                                        "X-Auth-Email",
                                        "X-Auth-Key"
                                    ],
                                    "properties": {
                                        "X-Auth-Email": {
                                            "description": "Your Cloudflare email",
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "X-Auth-Key": {
                                            "description": "Your Cloudflare API key",
                                            "type": "string",
                                            "minLength": 45,
                                            "maxLength": 45,
                                            "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                        }
                                    }
                                },
                                "targetSchema": {
                                    "allOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "cfRecurse": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "title": "Get deployment info",
                                "description": "Fetch a deployment",
                                "rel": "self",
                                "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id",
                                "method": "GET",
                                "cfRequestHeaders": {
                                    "type": "object",
                                    "required": [
                                        "X-Auth-Email",
                                        "X-Auth-Key"
                                    ],
                                    "properties": {
                                        "X-Auth-Email": {
                                            "description": "Your Cloudflare email",
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "X-Auth-Key": {
                                            "description": "Your Cloudflare API key",
                                            "type": "string",
                                            "minLength": 45,
                                            "maxLength": 45,
                                            "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                        }
                                    }
                                },
                                "targetSchema": {
                                    "allOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "cfRecurse": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "title": "Get deployment stage logs",
                                "description": "Fetch deploy logs",
                                "rel": "self",
                                "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/history/:deployment_stage_name/logs",
                                "method": "GET",
                                "cfDeprecation": {
                                    "id": "logs_v1_deprecated",
                                    "description": "Use \"Get deployment logs\" instead: https://api.cloudflare.com/#pages-deployment-get-deployment-logs.",
                                    "eol": "2022-09-19",
                                    "display": true
                                },
                                "cfRequestHeaders": {
                                    "type": "object",
                                    "required": [
                                        "X-Auth-Email",
                                        "X-Auth-Key"
                                    ],
                                    "properties": {
                                        "X-Auth-Email": {
                                            "description": "Your Cloudflare email",
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "X-Auth-Key": {
                                            "description": "Your Cloudflare API key",
                                            "type": "string",
                                            "minLength": 45,
                                            "maxLength": 45,
                                            "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                        }
                                    }
                                },
                                "targetSchema": {
                                    "allOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": "object",
                                                    "example": {
                                                        "name": "build",
                                                        "started_on": "2021-04-20T19:35:58.238757Z",
                                                        "ended_on": "2021-04-20T19:36:06.38889Z",
                                                        "status": "success",
                                                        "start": 0,
                                                        "end": 37,
                                                        "total": 37,
                                                        "data": [
                                                            {
                                                                "id": 15,
                                                                "timestamp": "2021-04-20T19:35:59.0749819Z",
                                                                "message": "Installing dependencies"
                                                            },
                                                            {
                                                                "id": 16,
                                                                "timestamp": "2021-04-20T19:35:59.0931208Z",
                                                                "message": "Python version set to 2.7"
                                                            },
                                                            {
                                                                "id": 17,
                                                                "timestamp": "2021-04-20T19:36:02.2369501Z",
                                                                "message": "v12.18.0 is already installed."
                                                            },
                                                            {
                                                                "id": 18,
                                                                "timestamp": "2021-04-20T19:36:02.6028886Z",
                                                                "message": "Now using node v12.18.0 (npm v6.14.4)"
                                                            },
                                                            {
                                                                "id": 19,
                                                                "timestamp": "2021-04-20T19:36:02.624555Z",
                                                                "message": "Started restoring cached build plugins"
                                                            },
                                                            {
                                                                "id": 20,
                                                                "timestamp": "2021-04-20T19:36:02.6340688Z",
                                                                "message": "Finished restoring cached build plugins"
                                                            },
                                                            {
                                                                "id": 21,
                                                                "timestamp": "2021-04-20T19:36:02.963095Z",
                                                                "message": "Attempting ruby version 2.7.1, read from environment"
                                                            },
                                                            {
                                                                "id": 22,
                                                                "timestamp": "2021-04-20T19:36:04.2236084Z",
                                                                "message": "Using ruby version 2.7.1"
                                                            },
                                                            {
                                                                "id": 23,
                                                                "timestamp": "2021-04-20T19:36:04.5450152Z",
                                                                "message": "Using PHP version 5.6"
                                                            },
                                                            {
                                                                "id": 24,
                                                                "timestamp": "2021-04-20T19:36:04.5740509Z",
                                                                "message": "5.2 is already installed."
                                                            },
                                                            {
                                                                "id": 25,
                                                                "timestamp": "2021-04-20T19:36:04.577035Z",
                                                                "message": "Using Swift version 5.2"
                                                            },
                                                            {
                                                                "id": 26,
                                                                "timestamp": "2021-04-20T19:36:04.5771615Z",
                                                                "message": "Installing Hugo 0.54.0"
                                                            },
                                                            {
                                                                "id": 27,
                                                                "timestamp": "2021-04-20T19:36:05.4786868Z",
                                                                "message": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
                                                            },
                                                            {
                                                                "id": 28,
                                                                "timestamp": "2021-04-20T19:36:05.4794366Z",
                                                                "message": "Started restoring cached go cache"
                                                            },
                                                            {
                                                                "id": 29,
                                                                "timestamp": "2021-04-20T19:36:05.481977Z",
                                                                "message": "Finished restoring cached go cache"
                                                            },
                                                            {
                                                                "id": 30,
                                                                "timestamp": "2021-04-20T19:36:05.9049776Z",
                                                                "message": "go version go1.14.4 linux/amd64"
                                                            },
                                                            {
                                                                "id": 31,
                                                                "timestamp": "2021-04-20T19:36:05.9086053Z",
                                                                "message": "go version go1.14.4 linux/amd64"
                                                            },
                                                            {
                                                                "id": 32,
                                                                "timestamp": "2021-04-20T19:36:05.9163568Z",
                                                                "message": "Installing missing commands"
                                                            },
                                                            {
                                                                "id": 33,
                                                                "timestamp": "2021-04-20T19:36:05.9163934Z",
                                                                "message": "Verify run directory"
                                                            },
                                                            {
                                                                "id": 34,
                                                                "timestamp": "2021-04-20T19:36:05.9164636Z",
                                                                "message": "Executing user command: echo \"skipping build step: no build command specified\""
                                                            },
                                                            {
                                                                "id": 35,
                                                                "timestamp": "2021-04-20T19:36:05.9165087Z",
                                                                "message": "skipping build step: no build command specified"
                                                            },
                                                            {
                                                                "id": 36,
                                                                "timestamp": "2021-04-20T19:36:05.917412Z",
                                                                "message": "Finished"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "title": "Get deployment logs",
                                "description": "Fetch deploy logs",
                                "rel": "self",
                                "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/history/logs",
                                "method": "GET",
                                "cfRequestHeaders": {
                                    "type": "object",
                                    "required": [
                                        "X-Auth-Email",
                                        "X-Auth-Key"
                                    ],
                                    "properties": {
                                        "X-Auth-Email": {
                                            "description": "Your Cloudflare email",
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "X-Auth-Key": {
                                            "description": "Your Cloudflare API key",
                                            "type": "string",
                                            "minLength": 45,
                                            "maxLength": 45,
                                            "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                        }
                                    }
                                },
                                "targetSchema": {
                                    "allOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": "object",
                                                    "example": {
                                                        "total": 30,
                                                        "includes_container_logs": true,
                                                        "data": [
                                                            {
                                                                "ts": "2021-04-20T19:35:29.0749819Z",
                                                                "line": "Cloning repository..."
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:30.0749819Z",
                                                                "line": "From https://github.com/cloudflare/example"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:30.0749819Z",
                                                                "line": " * branch            209c5bb11d89533f426b2f8469bcae12fdccf71b -> FETCH_HEAD"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:30.0749819Z",
                                                                "line": ""
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:30.0749819Z",
                                                                "line": "HEAD is now at 209c5bb Update index.html"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:30.0749819Z",
                                                                "line": ""
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:30.0749819Z",
                                                                "line": ""
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:30.0749819Z",
                                                                "line": "Success: Finished cloning repository files"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:59.0749819Z",
                                                                "line": "Installing dependencies"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:35:59.0931208Z",
                                                                "line": "Python version set to 2.7"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:02.2369501Z",
                                                                "line": "v12.18.0 is already installed."
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:02.6028886Z",
                                                                "line": "Now using node v12.18.0 (npm v6.14.4)"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:02.624555Z",
                                                                "line": "Started restoring cached build plugins"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:02.6340688Z",
                                                                "line": "Finished restoring cached build plugins"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:02.963095Z",
                                                                "line": "Attempting ruby version 2.7.1, read from environment"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:04.2236084Z",
                                                                "line": "Using ruby version 2.7.1"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:04.5450152Z",
                                                                "line": "Using PHP version 5.6"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:04.5740509Z",
                                                                "line": "5.2 is already installed."
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:04.577035Z",
                                                                "line": "Using Swift version 5.2"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:04.5771615Z",
                                                                "line": "Installing Hugo 0.54.0"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.4786868Z",
                                                                "line": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.4794366Z",
                                                                "line": "Started restoring cached go cache"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.481977Z",
                                                                "line": "Finished restoring cached go cache"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.9049776Z",
                                                                "line": "go version go1.14.4 linux/amd64"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.9086053Z",
                                                                "line": "go version go1.14.4 linux/amd64"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.9163568Z",
                                                                "line": "Installing missing commands"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.9163934Z",
                                                                "line": "Verify run directory"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.9164636Z",
                                                                "line": "Executing user command: echo \"skipping build step: no build command specified\""
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.9165087Z",
                                                                "line": "skipping build step: no build command specified"
                                                            },
                                                            {
                                                                "ts": "2021-04-20T19:36:05.917412Z",
                                                                "line": "Finished"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "title": "Delete deployment",
                                "description": "Destroy a deployment",
                                "rel": "self",
                                "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id",
                                "method": "DELETE",
                                "cfRequestHeaders": {
                                    "type": "object",
                                    "required": [
                                        "X-Auth-Email",
                                        "X-Auth-Key"
                                    ],
                                    "properties": {
                                        "X-Auth-Email": {
                                            "description": "Your Cloudflare email",
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "X-Auth-Key": {
                                            "description": "Your Cloudflare API key",
                                            "type": "string",
                                            "minLength": 45,
                                            "maxLength": 45,
                                            "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                        }
                                    }
                                },
                                "targetSchema": {
                                    "example": {
                                        "result": null,
                                        "success": true,
                                        "errors": [],
                                        "messages": []
                                    }
                                }
                            },
                            {
                                "title": "Create deployment",
                                "description": "Start a new deployment from production. The repo/account must have been authorized through the Pages UI dash before.",
                                "rel": "self",
                                "href": "accounts/:account_id/pages/projects/:project_name/deployments",
                                "method": "POST",
                                "cfRequestHeaders": {
                                    "type": "object",
                                    "required": [
                                        "X-Auth-Email",
                                        "X-Auth-Key"
                                    ],
                                    "properties": {
                                        "X-Auth-Email": {
                                            "description": "Your Cloudflare email",
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "X-Auth-Key": {
                                            "description": "Your Cloudflare API key",
                                            "type": "string",
                                            "minLength": 45,
                                            "maxLength": 45,
                                            "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                        }
                                    }
                                },
                                "targetSchema": {
                                    "allOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "cfRecurse": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "title": "Retry deployment",
                                "description": "Retry a previous deployment",
                                "rel": "self",
                                "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/retry",
                                "method": "POST",
                                "cfRequestHeaders": {
                                    "type": "object",
                                    "required": [
                                        "X-Auth-Email",
                                        "X-Auth-Key"
                                    ],
                                    "properties": {
                                        "X-Auth-Email": {
                                            "description": "Your Cloudflare email",
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "X-Auth-Key": {
                                            "description": "Your Cloudflare API key",
                                            "type": "string",
                                            "minLength": 45,
                                            "maxLength": 45,
                                            "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                        }
                                    }
                                },
                                "targetSchema": {
                                    "allOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "cfRecurse": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "title": "Rollback deployment",
                                "description": "Rollback the production deployment to a previous deploy. You can only rollback to succesful builds on production.",
                                "rel": "self",
                                "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/rollback",
                                "method": "POST",
                                "cfRequestHeaders": {
                                    "type": "object",
                                    "required": [
                                        "X-Auth-Email",
                                        "X-Auth-Key"
                                    ],
                                    "properties": {
                                        "X-Auth-Email": {
                                            "description": "Your Cloudflare email",
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "X-Auth-Key": {
                                            "description": "Your Cloudflare API key",
                                            "type": "string",
                                            "minLength": 45,
                                            "maxLength": 45,
                                            "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                        }
                                    }
                                },
                                "targetSchema": {
                                    "allOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "cfRecurse": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ],
                        "definitions": {
                            "deployment-new-deployment": {
                                "allOf": [
                                    {
                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                        "description": "Common schema for all Cloudflare v4 API responses",
                                        "type": "object",
                                        "required": [
                                            "success",
                                            "errors",
                                            "messages",
                                            "result"
                                        ],
                                        "oneOf": [
                                            {
                                                "$comment": "This subschema describes successful responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            true
                                                        ],
                                                        "example": true
                                                    },
                                                    "errors": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "messages": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": [
                                                            "object",
                                                            "array",
                                                            "string"
                                                        ]
                                                    }
                                                }
                                            },
                                            {
                                                "$comment": "This subschema describes failure responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            false
                                                        ],
                                                        "example": false
                                                    },
                                                    "errors": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "minLength": 1,
                                                        "example": [
                                                            {
                                                                "code": 7003,
                                                                "message": "No route for the URI"
                                                            }
                                                        ]
                                                    },
                                                    "messages": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": "null",
                                                        "enum": [
                                                            null
                                                        ],
                                                        "example": null
                                                    }
                                                }
                                            }
                                        ],
                                        "definitions": {
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "result": {
                                                "cfRecurse": ""
                                            }
                                        }
                                    }
                                ]
                            },
                            "deployment-response-stage-logs": {
                                "allOf": [
                                    {
                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                        "description": "Common schema for all Cloudflare v4 API responses",
                                        "type": "object",
                                        "required": [
                                            "success",
                                            "errors",
                                            "messages",
                                            "result"
                                        ],
                                        "oneOf": [
                                            {
                                                "$comment": "This subschema describes successful responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            true
                                                        ],
                                                        "example": true
                                                    },
                                                    "errors": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "messages": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": [
                                                            "object",
                                                            "array",
                                                            "string"
                                                        ]
                                                    }
                                                }
                                            },
                                            {
                                                "$comment": "This subschema describes failure responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            false
                                                        ],
                                                        "example": false
                                                    },
                                                    "errors": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "minLength": 1,
                                                        "example": [
                                                            {
                                                                "code": 7003,
                                                                "message": "No route for the URI"
                                                            }
                                                        ]
                                                    },
                                                    "messages": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": "null",
                                                        "enum": [
                                                            null
                                                        ],
                                                        "example": null
                                                    }
                                                }
                                            }
                                        ],
                                        "definitions": {
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "result": {
                                                "type": "object",
                                                "example": {
                                                    "name": "build",
                                                    "started_on": "2021-04-20T19:35:58.238757Z",
                                                    "ended_on": "2021-04-20T19:36:06.38889Z",
                                                    "status": "success",
                                                    "start": 0,
                                                    "end": 37,
                                                    "total": 37,
                                                    "data": [
                                                        {
                                                            "id": 15,
                                                            "timestamp": "2021-04-20T19:35:59.0749819Z",
                                                            "message": "Installing dependencies"
                                                        },
                                                        {
                                                            "id": 16,
                                                            "timestamp": "2021-04-20T19:35:59.0931208Z",
                                                            "message": "Python version set to 2.7"
                                                        },
                                                        {
                                                            "id": 17,
                                                            "timestamp": "2021-04-20T19:36:02.2369501Z",
                                                            "message": "v12.18.0 is already installed."
                                                        },
                                                        {
                                                            "id": 18,
                                                            "timestamp": "2021-04-20T19:36:02.6028886Z",
                                                            "message": "Now using node v12.18.0 (npm v6.14.4)"
                                                        },
                                                        {
                                                            "id": 19,
                                                            "timestamp": "2021-04-20T19:36:02.624555Z",
                                                            "message": "Started restoring cached build plugins"
                                                        },
                                                        {
                                                            "id": 20,
                                                            "timestamp": "2021-04-20T19:36:02.6340688Z",
                                                            "message": "Finished restoring cached build plugins"
                                                        },
                                                        {
                                                            "id": 21,
                                                            "timestamp": "2021-04-20T19:36:02.963095Z",
                                                            "message": "Attempting ruby version 2.7.1, read from environment"
                                                        },
                                                        {
                                                            "id": 22,
                                                            "timestamp": "2021-04-20T19:36:04.2236084Z",
                                                            "message": "Using ruby version 2.7.1"
                                                        },
                                                        {
                                                            "id": 23,
                                                            "timestamp": "2021-04-20T19:36:04.5450152Z",
                                                            "message": "Using PHP version 5.6"
                                                        },
                                                        {
                                                            "id": 24,
                                                            "timestamp": "2021-04-20T19:36:04.5740509Z",
                                                            "message": "5.2 is already installed."
                                                        },
                                                        {
                                                            "id": 25,
                                                            "timestamp": "2021-04-20T19:36:04.577035Z",
                                                            "message": "Using Swift version 5.2"
                                                        },
                                                        {
                                                            "id": 26,
                                                            "timestamp": "2021-04-20T19:36:04.5771615Z",
                                                            "message": "Installing Hugo 0.54.0"
                                                        },
                                                        {
                                                            "id": 27,
                                                            "timestamp": "2021-04-20T19:36:05.4786868Z",
                                                            "message": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
                                                        },
                                                        {
                                                            "id": 28,
                                                            "timestamp": "2021-04-20T19:36:05.4794366Z",
                                                            "message": "Started restoring cached go cache"
                                                        },
                                                        {
                                                            "id": 29,
                                                            "timestamp": "2021-04-20T19:36:05.481977Z",
                                                            "message": "Finished restoring cached go cache"
                                                        },
                                                        {
                                                            "id": 30,
                                                            "timestamp": "2021-04-20T19:36:05.9049776Z",
                                                            "message": "go version go1.14.4 linux/amd64"
                                                        },
                                                        {
                                                            "id": 31,
                                                            "timestamp": "2021-04-20T19:36:05.9086053Z",
                                                            "message": "go version go1.14.4 linux/amd64"
                                                        },
                                                        {
                                                            "id": 32,
                                                            "timestamp": "2021-04-20T19:36:05.9163568Z",
                                                            "message": "Installing missing commands"
                                                        },
                                                        {
                                                            "id": 33,
                                                            "timestamp": "2021-04-20T19:36:05.9163934Z",
                                                            "message": "Verify run directory"
                                                        },
                                                        {
                                                            "id": 34,
                                                            "timestamp": "2021-04-20T19:36:05.9164636Z",
                                                            "message": "Executing user command: echo \"skipping build step: no build command specified\""
                                                        },
                                                        {
                                                            "id": 35,
                                                            "timestamp": "2021-04-20T19:36:05.9165087Z",
                                                            "message": "skipping build step: no build command specified"
                                                        },
                                                        {
                                                            "id": 36,
                                                            "timestamp": "2021-04-20T19:36:05.917412Z",
                                                            "message": "Finished"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "deployment-response-logs": {
                                "allOf": [
                                    {
                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                        "description": "Common schema for all Cloudflare v4 API responses",
                                        "type": "object",
                                        "required": [
                                            "success",
                                            "errors",
                                            "messages",
                                            "result"
                                        ],
                                        "oneOf": [
                                            {
                                                "$comment": "This subschema describes successful responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            true
                                                        ],
                                                        "example": true
                                                    },
                                                    "errors": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "messages": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": [
                                                            "object",
                                                            "array",
                                                            "string"
                                                        ]
                                                    }
                                                }
                                            },
                                            {
                                                "$comment": "This subschema describes failure responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            false
                                                        ],
                                                        "example": false
                                                    },
                                                    "errors": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "minLength": 1,
                                                        "example": [
                                                            {
                                                                "code": 7003,
                                                                "message": "No route for the URI"
                                                            }
                                                        ]
                                                    },
                                                    "messages": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": "null",
                                                        "enum": [
                                                            null
                                                        ],
                                                        "example": null
                                                    }
                                                }
                                            }
                                        ],
                                        "definitions": {
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "result": {
                                                "type": "object",
                                                "example": {
                                                    "total": 30,
                                                    "includes_container_logs": true,
                                                    "data": [
                                                        {
                                                            "ts": "2021-04-20T19:35:29.0749819Z",
                                                            "line": "Cloning repository..."
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:30.0749819Z",
                                                            "line": "From https://github.com/cloudflare/example"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:30.0749819Z",
                                                            "line": " * branch            209c5bb11d89533f426b2f8469bcae12fdccf71b -> FETCH_HEAD"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:30.0749819Z",
                                                            "line": ""
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:30.0749819Z",
                                                            "line": "HEAD is now at 209c5bb Update index.html"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:30.0749819Z",
                                                            "line": ""
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:30.0749819Z",
                                                            "line": ""
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:30.0749819Z",
                                                            "line": "Success: Finished cloning repository files"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:59.0749819Z",
                                                            "line": "Installing dependencies"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:35:59.0931208Z",
                                                            "line": "Python version set to 2.7"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:02.2369501Z",
                                                            "line": "v12.18.0 is already installed."
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:02.6028886Z",
                                                            "line": "Now using node v12.18.0 (npm v6.14.4)"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:02.624555Z",
                                                            "line": "Started restoring cached build plugins"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:02.6340688Z",
                                                            "line": "Finished restoring cached build plugins"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:02.963095Z",
                                                            "line": "Attempting ruby version 2.7.1, read from environment"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:04.2236084Z",
                                                            "line": "Using ruby version 2.7.1"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:04.5450152Z",
                                                            "line": "Using PHP version 5.6"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:04.5740509Z",
                                                            "line": "5.2 is already installed."
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:04.577035Z",
                                                            "line": "Using Swift version 5.2"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:04.5771615Z",
                                                            "line": "Installing Hugo 0.54.0"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.4786868Z",
                                                            "line": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.4794366Z",
                                                            "line": "Started restoring cached go cache"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.481977Z",
                                                            "line": "Finished restoring cached go cache"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.9049776Z",
                                                            "line": "go version go1.14.4 linux/amd64"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.9086053Z",
                                                            "line": "go version go1.14.4 linux/amd64"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.9163568Z",
                                                            "line": "Installing missing commands"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.9163934Z",
                                                            "line": "Verify run directory"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.9164636Z",
                                                            "line": "Executing user command: echo \"skipping build step: no build command specified\""
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.9165087Z",
                                                            "line": "skipping build step: no build command specified"
                                                        },
                                                        {
                                                            "ts": "2021-04-20T19:36:05.917412Z",
                                                            "line": "Finished"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "deployment-list-response": {
                                "allOf": [
                                    {
                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                        "description": "Common schema for all Cloudflare v4 API responses",
                                        "type": "object",
                                        "required": [
                                            "success",
                                            "errors",
                                            "messages",
                                            "result"
                                        ],
                                        "oneOf": [
                                            {
                                                "$comment": "This subschema describes successful responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            true
                                                        ],
                                                        "example": true
                                                    },
                                                    "errors": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "messages": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": [
                                                            "object",
                                                            "array",
                                                            "string"
                                                        ]
                                                    }
                                                }
                                            },
                                            {
                                                "$comment": "This subschema describes failure responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            false
                                                        ],
                                                        "example": false
                                                    },
                                                    "errors": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "minLength": 1,
                                                        "example": [
                                                            {
                                                                "code": 7003,
                                                                "message": "No route for the URI"
                                                            }
                                                        ]
                                                    },
                                                    "messages": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": "null",
                                                        "enum": [
                                                            null
                                                        ],
                                                        "example": null
                                                    }
                                                }
                                            }
                                        ],
                                        "definitions": {
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "result_info": {
                                                "type": "object",
                                                "properties": {
                                                    "page": {
                                                        "example": 1
                                                    },
                                                    "per_page": {
                                                        "example": 100
                                                    },
                                                    "count": {
                                                        "example": 1
                                                    },
                                                    "total_count": {
                                                        "example": 1
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "result": {
                                                "type": "array",
                                                "cfRecurse": ""
                                            }
                                        }
                                    }
                                ]
                            },
                            "deployment-response-details": {
                                "allOf": [
                                    {
                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                        "description": "Common schema for all Cloudflare v4 API responses",
                                        "type": "object",
                                        "required": [
                                            "success",
                                            "errors",
                                            "messages",
                                            "result"
                                        ],
                                        "oneOf": [
                                            {
                                                "$comment": "This subschema describes successful responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            true
                                                        ],
                                                        "example": true
                                                    },
                                                    "errors": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "messages": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": [
                                                            "object",
                                                            "array",
                                                            "string"
                                                        ]
                                                    }
                                                }
                                            },
                                            {
                                                "$comment": "This subschema describes failure responses",
                                                "properties": {
                                                    "success": {
                                                        "description": "Whether the API call was successful or not",
                                                        "type": "boolean",
                                                        "enum": [
                                                            false
                                                        ],
                                                        "example": false
                                                    },
                                                    "errors": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "minLength": 1,
                                                        "example": [
                                                            {
                                                                "code": 7003,
                                                                "message": "No route for the URI"
                                                            }
                                                        ]
                                                    },
                                                    "messages": {
                                                        "allOf": [
                                                            {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        ],
                                                        "example": []
                                                    },
                                                    "result": {
                                                        "type": "null",
                                                        "enum": [
                                                            null
                                                        ],
                                                        "example": null
                                                    }
                                                }
                                            }
                                        ],
                                        "definitions": {
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "result": {
                                                "cfRecurse": ""
                                            }
                                        }
                                    }
                                ]
                            },
                            "account_identifier": {
                                "id": "https://api.cloudflare.com/schemas/v4/common/identifier.json",
                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                "description": "API item identifier tag",
                                "type": "string",
                                "maxLength": 32,
                                "readOnly": true,
                                "example": "9a7806061c88ada191ed06f989cc3dac"
                            },
                            "build_config": {
                                "description": "Configs for the project build process",
                                "type": "object",
                                "properties": {
                                    "build_command": {
                                        "description": "Command used to build project",
                                        "type": "string",
                                        "example": "npm run build"
                                    },
                                    "destination_dir": {
                                        "description": "Output directory of the build",
                                        "type": "string",
                                        "example": "build"
                                    },
                                    "root_dir": {
                                        "description": "Directory to run the command",
                                        "type": "string",
                                        "example": "/"
                                    },
                                    "web_analytics_tag": {
                                        "description": "The classifying tag for analytics",
                                        "type": "string",
                                        "example": "cee1c73f6e4743d0b5e6bb1a0bcaabcc"
                                    },
                                    "web_analytics_token": {
                                        "description": "The auth token for analytics",
                                        "type": "string",
                                        "example": "021e1057c18547eca7b79f2516f06o7x"
                                    }
                                }
                            },
                            "stage": {
                                "description": "The status of the deployment",
                                "type": "object",
                                "readOnly": true,
                                "properties": {
                                    "name": {
                                        "description": "The current build stage",
                                        "type": "string",
                                        "pattern": "queued|initialize|clone_repo|build|deploy",
                                        "example": "deploy"
                                    },
                                    "started_on": {
                                        "description": "When the stage started",
                                        "format": "date-time",
                                        "type": "string",
                                        "readOnly": true,
                                        "example": "2021-03-09T00:55:03.923456Z"
                                    },
                                    "ended_on": {
                                        "description": "When the stage ended",
                                        "format": "date-time",
                                        "type": "string",
                                        "readOnly": true,
                                        "example": "2021-03-09T00:58:59.045655"
                                    },
                                    "status": {
                                        "description": "State of the current stage",
                                        "type": "string",
                                        "pattern": "success|idle|active|failure|canceled",
                                        "readOnly": true,
                                        "example": "success"
                                    }
                                }
                            }
                        },
                        "cfLinkErrors": {
                            "8000000": "An unknown error occurred",
                            "8000001": "A project already exists for this repo",
                            "8000002": "A project with this name already exists",
                            "8000003": "Invalid project name",
                            "8000004": "Account not authorized for the requested repo",
                            "8000005": "Required field missing",
                            "8000006": "Unable to parse request",
                            "8000007": "Project not found",
                            "8000008": "No installation found",
                            "8000009": "Deployment not found",
                            "8000010": "User is not authorized for provided GitHub Installation ID",
                            "8000011": "User has no linked GitHub accounts matching the provided username",
                            "8000012": "User has no linked GitHub repositories matching the provided name",
                            "8000013": "Authorization failed",
                            "8000014": "Deployment type not found",
                            "8000015": "Domain is invalid",
                            "8000016": "Unicode domains are not supported",
                            "8000017": "An operation is already in progress for this domain",
                            "8000018": "Domain is unavailable",
                            "8000019": "Project has reached the maximum number of allowed domains",
                            "8000020": "No deployment stage found for the provided name",
                            "8000021": "Domain not found",
                            "8000022": "Invalid PATCH operation requested",
                            "8000023": "Attempt to add duplicate environment variable, or replace or delete nonexistent variable",
                            "8000024": "Invalid list options provided",
                            "8000025": "Domain is not registered",
                            "8000026": "Coming soon",
                            "8000027": "Too many projects",
                            "8000028": "Must delete custom domains before deleting project",
                            "8000029": "Subdomain is unavailable",
                            "8000030": "Subdomain is blocked",
                            "8000031": "Unable to cancel completed deployment",
                            "8000032": "Unable to find a branch with the provided name",
                            "8000033": "Production branch must be set",
                            "8000034": "Cannot delete active production deployment",
                            "8000035": "Cannot delete aliased deployment",
                            "8000036": "Account has been blocked"
                        }
                    }
                },
                "required_props": [],
                "optional_props": [
                    "name",
                    "id",
                    "created_on",
                    "subdomain",
                    "domains",
                    "source",
                    "build_config",
                    "deployment_configs",
                    "latest_deployment",
                    "canonical_deployment"
                ],
                "objects": [],
                "example": "{\n  \"name\": \"NextJS Blog\",\n  \"id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n  \"created_on\": \"2017-01-01T00:00:00Z\",\n  \"subdomain\": \"helloworld.pages.dev\",\n  \"domains\": [\n    \"customdomain.com\",\n    \"customdomain.org\"\n  ],\n  \"source\": {\n    \"type\": \"github\",\n    \"config\": {\n      \"owner\": \"cloudflare\",\n      \"repo_name\": \"ninjakittens\",\n      \"production_branch\": \"main\",\n      \"pr_comments_enabled\": true,\n      \"deployments_enabled\": true\n    }\n  },\n  \"build_config\": {\n    \"build_command\": \"npm run build\",\n    \"destination_dir\": \"build\",\n    \"root_dir\": \"/\",\n    \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n    \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n  },\n  \"deployment_configs\": {\n    \"preview\": {\n      \"env_vars\": {\n        \"BUILD_VERSION\": {\n          \"value\": \"3.3\"\n        }\n      }\n    },\n    \"production\": {\n      \"env_vars\": {\n        \"BUILD_VERSION\": {\n          \"value\": \"3.3\"\n        }\n      }\n    }\n  },\n  \"latest_deployment\": {\n    \"id\": \"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\n    \"short_id\": \"f64788e9\",\n    \"project_id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n    \"project_name\": \"ninjakittens\",\n    \"environment\": \"preview\",\n    \"url\": \"https://f64788e9.ninjakittens.pages.dev\",\n    \"created_on\": \"2021-03-09T00:55:03.923456Z\",\n    \"modified_on\": \"2021-03-09T00:58:59.045655\",\n    \"aliases\": [\n      \"https://branchname.projectname.pages.dev\"\n    ],\n    \"latest_stage\": {\n      \"name\": \"deploy\",\n      \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n      \"ended_on\": \"2021-03-09T00:58:59.045655\",\n      \"status\": \"success\"\n    },\n    \"env_vars\": {\n      \"BUILD_VERSION\": {\n        \"value\": \"3.3\"\n      },\n      \"ENV\": {\n        \"value\": \"STAGING\"\n      }\n    },\n    \"deployment_trigger\": {\n      \"type\": \"ad_hoc\",\n      \"metadata\": {\n        \"branch\": \"main\",\n        \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n        \"commit_message\": \"Update index.html\"\n      }\n    },\n    \"stages\": [\n      {\n        \"name\": \"queued\",\n        \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n        \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n        \"status\": \"active\"\n      },\n      {\n        \"name\": \"initialize\",\n        \"started_on\": null,\n        \"ended_on\": null,\n        \"status\": \"idle\"\n      },\n      {\n        \"name\": \"clone_repo\",\n        \"started_on\": null,\n        \"ended_on\": null,\n        \"status\": \"idle\"\n      },\n      {\n        \"name\": \"build\",\n        \"started_on\": null,\n        \"ended_on\": null,\n        \"status\": \"idle\"\n      },\n      {\n        \"name\": \"deploy\",\n        \"started_on\": null,\n        \"ended_on\": null,\n        \"status\": \"idle\"\n      }\n    ],\n    \"build_config\": {\n      \"build_command\": \"npm run build\",\n      \"destination_dir\": \"build\",\n      \"root_dir\": \"/\",\n      \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n      \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n    },\n    \"source\": {\n      \"type\": \"github\",\n      \"config\": {\n        \"owner\": \"cloudflare\",\n        \"repo_name\": \"ninjakittens\",\n        \"production_branch\": \"main\",\n        \"pr_comments_enabled\": true,\n        \"deployments_enabled\": true\n      }\n    }\n  },\n  \"canonical_deployment\": {\n    \"id\": \"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\n    \"short_id\": \"f64788e9\",\n    \"project_id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n    \"project_name\": \"ninjakittens\",\n    \"environment\": \"preview\",\n    \"url\": \"https://f64788e9.ninjakittens.pages.dev\",\n    \"created_on\": \"2021-03-09T00:55:03.923456Z\",\n    \"modified_on\": \"2021-03-09T00:58:59.045655\",\n    \"aliases\": [\n      \"https://branchname.projectname.pages.dev\"\n    ],\n    \"latest_stage\": {\n      \"name\": \"deploy\",\n      \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n      \"ended_on\": \"2021-03-09T00:58:59.045655\",\n      \"status\": \"success\"\n    },\n    \"env_vars\": {\n      \"BUILD_VERSION\": {\n        \"value\": \"3.3\"\n      },\n      \"ENV\": {\n        \"value\": \"STAGING\"\n      }\n    },\n    \"deployment_trigger\": {\n      \"type\": \"ad_hoc\",\n      \"metadata\": {\n        \"branch\": \"main\",\n        \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n        \"commit_message\": \"Update index.html\"\n      }\n    },\n    \"stages\": [\n      {\n        \"name\": \"queued\",\n        \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n        \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n        \"status\": \"active\"\n      },\n      {\n        \"name\": \"initialize\",\n        \"started_on\": null,\n        \"ended_on\": null,\n        \"status\": \"idle\"\n      },\n      {\n        \"name\": \"clone_repo\",\n        \"started_on\": null,\n        \"ended_on\": null,\n        \"status\": \"idle\"\n      },\n      {\n        \"name\": \"build\",\n        \"started_on\": null,\n        \"ended_on\": null,\n        \"status\": \"idle\"\n      },\n      {\n        \"name\": \"deploy\",\n        \"started_on\": null,\n        \"ended_on\": null,\n        \"status\": \"idle\"\n      }\n    ],\n    \"build_config\": {\n      \"build_command\": \"npm run build\",\n      \"destination_dir\": \"build\",\n      \"root_dir\": \"/\",\n      \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n      \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n    },\n    \"source\": {\n      \"type\": \"github\",\n      \"config\": {\n        \"owner\": \"cloudflare\",\n        \"repo_name\": \"ninjakittens\",\n        \"production_branch\": \"main\",\n        \"pr_comments_enabled\": true,\n        \"deployments_enabled\": true\n      }\n    }\n  }\n}",
                "title": "Pages Project",
                "description": "A Pages project represents a website deployed to Cloudflare's edge."
            },
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"name\": \"NextJS Blog\",\n    \"id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n    \"created_on\": \"2017-01-01T00:00:00Z\",\n    \"subdomain\": \"helloworld.pages.dev\",\n    \"domains\": [\n      \"customdomain.com\",\n      \"customdomain.org\"\n    ],\n    \"source\": {\n      \"type\": \"github\",\n      \"config\": {\n        \"owner\": \"cloudflare\",\n        \"repo_name\": \"ninjakittens\",\n        \"production_branch\": \"main\",\n        \"pr_comments_enabled\": true,\n        \"deployments_enabled\": true\n      }\n    },\n    \"build_config\": {\n      \"build_command\": \"npm run build\",\n      \"destination_dir\": \"build\",\n      \"root_dir\": \"/\",\n      \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n      \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n    },\n    \"deployment_configs\": {\n      \"preview\": {\n        \"env_vars\": {\n          \"BUILD_VERSION\": {\n            \"value\": \"3.3\"\n          }\n        }\n      },\n      \"production\": {\n        \"env_vars\": {\n          \"BUILD_VERSION\": {\n            \"value\": \"3.3\"\n          }\n        }\n      }\n    },\n    \"latest_deployment\": {\n      \"id\": \"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\n      \"short_id\": \"f64788e9\",\n      \"project_id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n      \"project_name\": \"ninjakittens\",\n      \"environment\": \"preview\",\n      \"url\": \"https://f64788e9.ninjakittens.pages.dev\",\n      \"created_on\": \"2021-03-09T00:55:03.923456Z\",\n      \"modified_on\": \"2021-03-09T00:58:59.045655\",\n      \"aliases\": [\n        \"https://branchname.projectname.pages.dev\"\n      ],\n      \"latest_stage\": {\n        \"name\": \"deploy\",\n        \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n        \"ended_on\": \"2021-03-09T00:58:59.045655\",\n        \"status\": \"success\"\n      },\n      \"env_vars\": {\n        \"BUILD_VERSION\": {\n          \"value\": \"3.3\"\n        },\n        \"ENV\": {\n          \"value\": \"STAGING\"\n        }\n      },\n      \"deployment_trigger\": {\n        \"type\": \"ad_hoc\",\n        \"metadata\": {\n          \"branch\": \"main\",\n          \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n          \"commit_message\": \"Update index.html\"\n        }\n      },\n      \"stages\": [\n        {\n          \"name\": \"queued\",\n          \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n          \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n          \"status\": \"active\"\n        },\n        {\n          \"name\": \"initialize\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"clone_repo\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"build\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"deploy\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        }\n      ],\n      \"build_config\": {\n        \"build_command\": \"npm run build\",\n        \"destination_dir\": \"build\",\n        \"root_dir\": \"/\",\n        \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n        \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n      },\n      \"source\": {\n        \"type\": \"github\",\n        \"config\": {\n          \"owner\": \"cloudflare\",\n          \"repo_name\": \"ninjakittens\",\n          \"production_branch\": \"main\",\n          \"pr_comments_enabled\": true,\n          \"deployments_enabled\": true\n        }\n      }\n    },\n    \"canonical_deployment\": {\n      \"id\": \"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\n      \"short_id\": \"f64788e9\",\n      \"project_id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n      \"project_name\": \"ninjakittens\",\n      \"environment\": \"preview\",\n      \"url\": \"https://f64788e9.ninjakittens.pages.dev\",\n      \"created_on\": \"2021-03-09T00:55:03.923456Z\",\n      \"modified_on\": \"2021-03-09T00:58:59.045655\",\n      \"aliases\": [\n        \"https://branchname.projectname.pages.dev\"\n      ],\n      \"latest_stage\": {\n        \"name\": \"deploy\",\n        \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n        \"ended_on\": \"2021-03-09T00:58:59.045655\",\n        \"status\": \"success\"\n      },\n      \"env_vars\": {\n        \"BUILD_VERSION\": {\n          \"value\": \"3.3\"\n        },\n        \"ENV\": {\n          \"value\": \"STAGING\"\n        }\n      },\n      \"deployment_trigger\": {\n        \"type\": \"ad_hoc\",\n        \"metadata\": {\n          \"branch\": \"main\",\n          \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n          \"commit_message\": \"Update index.html\"\n        }\n      },\n      \"stages\": [\n        {\n          \"name\": \"queued\",\n          \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n          \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n          \"status\": \"active\"\n        },\n        {\n          \"name\": \"initialize\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"clone_repo\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"build\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"deploy\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        }\n      ],\n      \"build_config\": {\n        \"build_command\": \"npm run build\",\n        \"destination_dir\": \"build\",\n        \"root_dir\": \"/\",\n        \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n        \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n      },\n      \"source\": {\n        \"type\": \"github\",\n        \"config\": {\n          \"owner\": \"cloudflare\",\n          \"repo_name\": \"ninjakittens\",\n          \"production_branch\": \"main\",\n          \"pr_comments_enabled\": true,\n          \"deployments_enabled\": true\n        }\n      }\n    }\n  }\n}"
        },
        {
            "title": "Update project",
            "description": "Set new attributes for an existing project. Modify environment variables. To delete an environment variable, set the key to null.",
            "rel": "self",
            "href": "accounts/:account_id/pages/projects/:project_name",
            "method": "PATCH",
            "cfRequestHeaders": {
                "type": "object",
                "required": [
                    "X-Auth-Email",
                    "X-Auth-Key"
                ],
                "properties": {
                    "X-Auth-Email": {
                        "description": "Your Cloudflare email",
                        "type": "string",
                        "example": "user@example.com"
                    },
                    "X-Auth-Key": {
                        "description": "Your Cloudflare API key",
                        "type": "string",
                        "minLength": 45,
                        "maxLength": 45,
                        "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                    },
                    "Content-Type": {
                        "type": "string",
                        "enum": [
                            "application/json"
                        ],
                        "example": "application/json"
                    }
                }
            },
            "encType": "application/json",
            "html_id": "pages-project-update-project",
            "uri": "accounts/:account_id/pages/projects/:project_name",
            "curl": "curl -X PATCH \"https://api.cloudflare.com/client/v4/accounts/:account_id/pages/projects/:project_name\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\" \\\n     --data '{\"deployment_configs\":{\"production\":{\"env_vars\":{\"delete_this_env_var\":null,\"BUILD_VERSION\":{\"value\":\"3.3\"}}}}}'",
            "parameters": {
                "_formatter": {
                    "jsonMediaType": {}
                },
                "all_props": {},
                "required_props": [],
                "optional_props": [],
                "objects": [],
                "example": "{\n  \"deployment_configs\": {\n    \"production\": {\n      \"env_vars\": {\n        \"delete_this_env_var\": null,\n        \"BUILD_VERSION\": {\n          \"value\": \"3.3\"\n        }\n      }\n    }\n  }\n}"
            },
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"name\": \"NextJS Blog\",\n    \"id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n    \"created_on\": \"2017-01-01T00:00:00Z\",\n    \"subdomain\": \"helloworld.pages.dev\",\n    \"domains\": [\n      \"customdomain.com\",\n      \"customdomain.org\"\n    ],\n    \"source\": {\n      \"type\": \"github\",\n      \"config\": {\n        \"owner\": \"cloudflare\",\n        \"repo_name\": \"ninjakittens\",\n        \"production_branch\": \"main\",\n        \"pr_comments_enabled\": true,\n        \"deployments_enabled\": true\n      }\n    },\n    \"build_config\": {\n      \"build_command\": \"npm run build\",\n      \"destination_dir\": \"build\",\n      \"root_dir\": \"/\",\n      \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n      \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n    },\n    \"deployment_configs\": {\n      \"preview\": {\n        \"env_vars\": {\n          \"BUILD_VERSION\": {\n            \"value\": \"3.3\"\n          }\n        }\n      },\n      \"production\": {\n        \"env_vars\": {\n          \"BUILD_VERSION\": {\n            \"value\": \"3.3\"\n          }\n        }\n      }\n    },\n    \"latest_deployment\": {\n      \"id\": \"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\n      \"short_id\": \"f64788e9\",\n      \"project_id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n      \"project_name\": \"ninjakittens\",\n      \"environment\": \"preview\",\n      \"url\": \"https://f64788e9.ninjakittens.pages.dev\",\n      \"created_on\": \"2021-03-09T00:55:03.923456Z\",\n      \"modified_on\": \"2021-03-09T00:58:59.045655\",\n      \"aliases\": [\n        \"https://branchname.projectname.pages.dev\"\n      ],\n      \"latest_stage\": {\n        \"name\": \"deploy\",\n        \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n        \"ended_on\": \"2021-03-09T00:58:59.045655\",\n        \"status\": \"success\"\n      },\n      \"env_vars\": {\n        \"BUILD_VERSION\": {\n          \"value\": \"3.3\"\n        },\n        \"ENV\": {\n          \"value\": \"STAGING\"\n        }\n      },\n      \"deployment_trigger\": {\n        \"type\": \"ad_hoc\",\n        \"metadata\": {\n          \"branch\": \"main\",\n          \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n          \"commit_message\": \"Update index.html\"\n        }\n      },\n      \"stages\": [\n        {\n          \"name\": \"queued\",\n          \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n          \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n          \"status\": \"active\"\n        },\n        {\n          \"name\": \"initialize\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"clone_repo\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"build\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"deploy\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        }\n      ],\n      \"build_config\": {\n        \"build_command\": \"npm run build\",\n        \"destination_dir\": \"build\",\n        \"root_dir\": \"/\",\n        \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n        \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n      },\n      \"source\": {\n        \"type\": \"github\",\n        \"config\": {\n          \"owner\": \"cloudflare\",\n          \"repo_name\": \"ninjakittens\",\n          \"production_branch\": \"main\",\n          \"pr_comments_enabled\": true,\n          \"deployments_enabled\": true\n        }\n      }\n    },\n    \"canonical_deployment\": {\n      \"id\": \"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\n      \"short_id\": \"f64788e9\",\n      \"project_id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n      \"project_name\": \"ninjakittens\",\n      \"environment\": \"preview\",\n      \"url\": \"https://f64788e9.ninjakittens.pages.dev\",\n      \"created_on\": \"2021-03-09T00:55:03.923456Z\",\n      \"modified_on\": \"2021-03-09T00:58:59.045655\",\n      \"aliases\": [\n        \"https://branchname.projectname.pages.dev\"\n      ],\n      \"latest_stage\": {\n        \"name\": \"deploy\",\n        \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n        \"ended_on\": \"2021-03-09T00:58:59.045655\",\n        \"status\": \"success\"\n      },\n      \"env_vars\": {\n        \"BUILD_VERSION\": {\n          \"value\": \"3.3\"\n        },\n        \"ENV\": {\n          \"value\": \"STAGING\"\n        }\n      },\n      \"deployment_trigger\": {\n        \"type\": \"ad_hoc\",\n        \"metadata\": {\n          \"branch\": \"main\",\n          \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n          \"commit_message\": \"Update index.html\"\n        }\n      },\n      \"stages\": [\n        {\n          \"name\": \"queued\",\n          \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n          \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n          \"status\": \"active\"\n        },\n        {\n          \"name\": \"initialize\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"clone_repo\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"build\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        },\n        {\n          \"name\": \"deploy\",\n          \"started_on\": null,\n          \"ended_on\": null,\n          \"status\": \"idle\"\n        }\n      ],\n      \"build_config\": {\n        \"build_command\": \"npm run build\",\n        \"destination_dir\": \"build\",\n        \"root_dir\": \"/\",\n        \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n        \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n      },\n      \"source\": {\n        \"type\": \"github\",\n        \"config\": {\n          \"owner\": \"cloudflare\",\n          \"repo_name\": \"ninjakittens\",\n          \"production_branch\": \"main\",\n          \"pr_comments_enabled\": true,\n          \"deployments_enabled\": true\n        }\n      }\n    }\n  }\n}"
        }
    ],
    "cfLinkErrors": {
        "8000000": "An unknown error occurred",
        "8000001": "A project already exists for this repo",
        "8000002": "A project with this name already exists",
        "8000003": "Invalid project name",
        "8000004": "Account not authorized for the requested repo",
        "8000005": "Required field missing",
        "8000006": "Unable to parse request",
        "8000007": "Project not found",
        "8000008": "No installation found",
        "8000009": "Deployment not found",
        "8000010": "User is not authorized for provided GitHub Installation ID",
        "8000011": "User has no linked GitHub accounts matching the provided username",
        "8000012": "User has no linked GitHub repositories matching the provided name",
        "8000013": "Authorization failed",
        "8000014": "Deployment type not found",
        "8000015": "Domain is invalid",
        "8000016": "Unicode domains are not supported",
        "8000017": "An operation is already in progress for this domain",
        "8000018": "Domain is unavailable",
        "8000019": "Project has reached the maximum number of allowed domains",
        "8000020": "No deployment stage found for the provided name",
        "8000021": "Domain not found",
        "8000022": "Invalid PATCH operation requested",
        "8000023": "Attempt to add duplicate environment variable, or replace or delete nonexistent variable",
        "8000024": "Invalid list options provided",
        "8000025": "Domain is not registered",
        "8000026": "Coming soon",
        "8000027": "Too many projects",
        "8000028": "Must delete custom domains before deleting project",
        "8000029": "Subdomain is unavailable",
        "8000030": "Subdomain is blocked",
        "8000031": "Unable to cancel completed deployment",
        "8000032": "Unable to find a branch with the provided name",
        "8000033": "Production branch must be set",
        "8000034": "Cannot delete active production deployment",
        "8000035": "Cannot delete aliased deployment",
        "8000036": "Account has been blocked"
    },
    "html_id": "pages-project",
    "object_definition": {
        "_formatter": {
            "jsonMediaType": {}
        },
        "all_props": {
            "name": {
                "type": "string",
                "example": "\"NextJS Blog\"",
                "description": "Name of the project"
            },
            "id": {
                "type": "string",
                "example": "\"7b162ea7-7367-4d67-bcde-1160995d5\"",
                "description": "Id of the project",
                "readOnly": true
            },
            "created_on": {
                "type": "string",
                "example": "\"2017-01-01T00:00:00Z\"",
                "description": "When the project was created",
                "format": "date-time",
                "readOnly": true
            },
            "subdomain": {
                "type": "string",
                "example": "\"helloworld.pages.dev\"",
                "description": "The Cloudflare subdomain associated with the project",
                "readOnly": true
            },
            "domains": {
                "type": "array",
                "example": "[\n  \"customdomain.com\",\n  \"customdomain.org\"\n]",
                "description": "A list of associated custom domains for the project",
                "readOnly": true
            },
            "source": {
                "type": "object",
                "example": "{\n  \"type\": \"github\",\n  \"config\": {\n    \"owner\": \"cloudflare\",\n    \"repo_name\": \"ninjakittens\",\n    \"production_branch\": \"main\",\n    \"pr_comments_enabled\": true,\n    \"deployments_enabled\": true\n  }\n}",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "\"github\"",
                        "description": "Project host type",
                        "readOnly": true
                    },
                    "config": {
                        "type": "object",
                        "example": "{\n  \"owner\": \"cloudflare\",\n  \"repo_name\": \"ninjakittens\",\n  \"production_branch\": \"main\",\n  \"pr_comments_enabled\": true,\n  \"deployments_enabled\": true\n}",
                        "properties": {
                            "owner": {
                                "type": "string",
                                "example": "\"cloudflare\"",
                                "description": "Project owner username",
                                "readOnly": true
                            },
                            "repo_name": {
                                "type": "string",
                                "example": "\"ninjakittens\"",
                                "description": "Project repository name"
                            },
                            "production_branch": {
                                "type": "string",
                                "example": "\"main\"",
                                "description": "Project production branch name"
                            },
                            "pr_comments_enabled": {
                                "type": "boolean",
                                "example": "true",
                                "description": "Enable Pages to comment on Pull Requests"
                            },
                            "deployments_enabled": {
                                "type": "boolean",
                                "example": "true",
                                "description": "Toggle deployments on this repo"
                            }
                        }
                    }
                },
                "readOnly": true,
                "description": "Configs for the project source"
            },
            "build_config": {
                "type": "object",
                "example": "{\n  \"build_command\": \"npm run build\",\n  \"destination_dir\": \"build\",\n  \"root_dir\": \"/\",\n  \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n  \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n}",
                "properties": {
                    "build_command": {
                        "type": "string",
                        "example": "\"npm run build\"",
                        "description": "Command used to build project"
                    },
                    "destination_dir": {
                        "type": "string",
                        "example": "\"build\"",
                        "description": "Output directory of the build"
                    },
                    "root_dir": {
                        "type": "string",
                        "example": "\"/\"",
                        "description": "Directory to run the command"
                    },
                    "web_analytics_tag": {
                        "type": "string",
                        "example": "\"cee1c73f6e4743d0b5e6bb1a0bcaabcc\"",
                        "description": "The classifying tag for analytics"
                    },
                    "web_analytics_token": {
                        "type": "string",
                        "example": "\"021e1057c18547eca7b79f2516f06o7x\"",
                        "description": "The auth token for analytics"
                    }
                },
                "description": "Configs for the project build process"
            },
            "deployment_configs": {
                "type": "object",
                "example": "{\n  \"preview\": {\n    \"env_vars\": {\n      \"BUILD_VERSION\": {\n        \"value\": \"3.3\"\n      }\n    }\n  },\n  \"production\": {\n    \"env_vars\": {\n      \"BUILD_VERSION\": {\n        \"value\": \"3.3\"\n      }\n    }\n  }\n}",
                "properties": {
                    "preview": {
                        "type": "object",
                        "example": "{\n  \"env_vars\": {\n    \"BUILD_VERSION\": {\n      \"value\": \"3.3\"\n    }\n  }\n}",
                        "properties": {
                            "env_vars": {
                                "type": "object",
                                "example": "{\n  \"BUILD_VERSION\": {\n    \"value\": \"3.3\"\n  }\n}",
                                "properties": {
                                    "BUILD_VERSION": {
                                        "type": "object",
                                        "example": "{\n  \"value\": \"3.3\"\n}",
                                        "properties": {
                                            "value": {
                                                "type": "string",
                                                "example": "\"3.3\"",
                                                "description": "Environment variable value"
                                            }
                                        },
                                        "description": "Environment variable"
                                    }
                                },
                                "description": "Environment variables for build configs"
                            }
                        },
                        "description": "Configs for preview deploys"
                    },
                    "production": {
                        "type": "object",
                        "example": "{\n  \"env_vars\": {\n    \"BUILD_VERSION\": {\n      \"value\": \"3.3\"\n    }\n  }\n}",
                        "properties": {
                            "env_vars": {
                                "type": "object",
                                "example": "{\n  \"BUILD_VERSION\": {\n    \"value\": \"3.3\"\n  }\n}",
                                "properties": {
                                    "BUILD_VERSION": {
                                        "type": "object",
                                        "example": "{\n  \"value\": \"3.3\"\n}",
                                        "properties": {
                                            "value": {
                                                "type": "string",
                                                "example": "\"3.3\"",
                                                "description": "Environment variable value"
                                            }
                                        },
                                        "description": "Environment variable"
                                    }
                                },
                                "description": "Environment variables for build configs"
                            }
                        },
                        "description": "Configs for production deploys"
                    }
                },
                "description": "Configs for deployments in a project"
            },
            "latest_deployment": {
                "type": "object",
                "example": "{\n  \"id\": \"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\n  \"short_id\": \"f64788e9\",\n  \"project_id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n  \"project_name\": \"ninjakittens\",\n  \"environment\": \"preview\",\n  \"url\": \"https://f64788e9.ninjakittens.pages.dev\",\n  \"created_on\": \"2021-03-09T00:55:03.923456Z\",\n  \"modified_on\": \"2021-03-09T00:58:59.045655\",\n  \"aliases\": [\n    \"https://branchname.projectname.pages.dev\"\n  ],\n  \"latest_stage\": {\n    \"name\": \"deploy\",\n    \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n    \"ended_on\": \"2021-03-09T00:58:59.045655\",\n    \"status\": \"success\"\n  },\n  \"env_vars\": {\n    \"BUILD_VERSION\": {\n      \"value\": \"3.3\"\n    },\n    \"ENV\": {\n      \"value\": \"STAGING\"\n    }\n  },\n  \"deployment_trigger\": {\n    \"type\": \"ad_hoc\",\n    \"metadata\": {\n      \"branch\": \"main\",\n      \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n      \"commit_message\": \"Update index.html\"\n    }\n  },\n  \"stages\": [\n    {\n      \"name\": \"queued\",\n      \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n      \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n      \"status\": \"active\"\n    },\n    {\n      \"name\": \"initialize\",\n      \"started_on\": null,\n      \"ended_on\": null,\n      \"status\": \"idle\"\n    },\n    {\n      \"name\": \"clone_repo\",\n      \"started_on\": null,\n      \"ended_on\": null,\n      \"status\": \"idle\"\n    },\n    {\n      \"name\": \"build\",\n      \"started_on\": null,\n      \"ended_on\": null,\n      \"status\": \"idle\"\n    },\n    {\n      \"name\": \"deploy\",\n      \"started_on\": null,\n      \"ended_on\": null,\n      \"status\": \"idle\"\n    }\n  ],\n  \"build_config\": {\n    \"build_command\": \"npm run build\",\n    \"destination_dir\": \"build\",\n    \"root_dir\": \"/\",\n    \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n    \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n  },\n  \"source\": {\n    \"type\": \"github\",\n    \"config\": {\n      \"owner\": \"cloudflare\",\n      \"repo_name\": \"ninjakittens\",\n      \"production_branch\": \"main\",\n      \"pr_comments_enabled\": true,\n      \"deployments_enabled\": true\n    }\n  }\n}",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "\"f64788e9-fccd-4d4a-a28a-cb84f88f6\"",
                        "description": "Id of the deployment",
                        "readOnly": true
                    },
                    "short_id": {
                        "type": "string",
                        "example": "\"f64788e9\"",
                        "description": "Short Id (8 character) of the deployment",
                        "readOnly": true
                    },
                    "project_id": {
                        "type": "string",
                        "example": "\"7b162ea7-7367-4d67-bcde-1160995d5\"",
                        "description": "Id of the project",
                        "readOnly": true
                    },
                    "project_name": {
                        "type": "string",
                        "example": "\"ninjakittens\"",
                        "readOnly": true,
                        "description": "Name of the project"
                    },
                    "environment": {
                        "type": "string",
                        "example": "\"preview\"",
                        "description": "Type of deploy",
                        "readOnly": true,
                        "pattern": "preview|prediction"
                    },
                    "url": {
                        "type": "string",
                        "example": "\"https://f64788e9.ninjakittens.pages.dev\"",
                        "description": "The live URL to view this deployment",
                        "readOnly": true
                    },
                    "created_on": {
                        "type": "string",
                        "example": "\"2021-03-09T00:55:03.923456Z\"",
                        "description": "When the deployment was created",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_on": {
                        "type": "string",
                        "example": "\"2021-03-09T00:58:59.045655\"",
                        "description": "When the deployment was last modified",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "aliases": {
                        "type": "array",
                        "example": "[\n  \"https://branchname.projectname.pages.dev\"\n]",
                        "description": "A list of alias URLs pointing to this deployment",
                        "readOnly": true
                    },
                    "latest_stage": {
                        "type": "object",
                        "example": "{\n  \"name\": \"deploy\",\n  \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n  \"ended_on\": \"2021-03-09T00:58:59.045655\",\n  \"status\": \"success\"\n}",
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "\"deploy\"",
                                "description": "The current build stage",
                                "pattern": "queued|initialize|clone_repo|build|deploy"
                            },
                            "started_on": {
                                "type": "string",
                                "example": "\"2021-03-09T00:55:03.923456Z\"",
                                "description": "When the stage started",
                                "format": "date-time",
                                "readOnly": true
                            },
                            "ended_on": {
                                "type": "string",
                                "example": "\"2021-03-09T00:58:59.045655\"",
                                "description": "When the stage ended",
                                "format": "date-time",
                                "readOnly": true
                            },
                            "status": {
                                "type": "string",
                                "example": "\"success\"",
                                "description": "State of the current stage",
                                "pattern": "success|idle|active|failure|canceled",
                                "readOnly": true
                            }
                        },
                        "readOnly": true,
                        "description": "The status of the deployment"
                    },
                    "env_vars": {
                        "type": "object",
                        "example": "{\n  \"BUILD_VERSION\": {\n    \"value\": \"3.3\"\n  },\n  \"ENV\": {\n    \"value\": \"STAGING\"\n  }\n}",
                        "description": "A dict of env variables to build this deploy",
                        "readOnly": true
                    },
                    "deployment_trigger": {
                        "type": "object",
                        "example": "{\n  \"type\": \"ad_hoc\",\n  \"metadata\": {\n    \"branch\": \"main\",\n    \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n    \"commit_message\": \"Update index.html\"\n  }\n}",
                        "properties": {
                            "type": {
                                "type": "string",
                                "example": "\"ad_hoc\"",
                                "description": "What caused the deployment",
                                "pattern": "push|ad_hoc",
                                "readOnly": true
                            },
                            "metadata": {
                                "type": "object",
                                "example": "{\n  \"branch\": \"main\",\n  \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n  \"commit_message\": \"Update index.html\"\n}",
                                "properties": {
                                    "branch": {
                                        "type": "string",
                                        "example": "\"main\"",
                                        "description": "Where the trigger happened",
                                        "readOnly": true
                                    },
                                    "commit_hash": {
                                        "type": "string",
                                        "example": "\"ad9ccd918a81025731e10e40267e11273a263421\"",
                                        "description": "Hash of the deployment trigger commit",
                                        "readOnly": true
                                    },
                                    "commit_message": {
                                        "type": "string",
                                        "example": "\"Update index.html\"",
                                        "description": "Message of the deployment trigger commit",
                                        "readOnly": true
                                    }
                                },
                                "description": "Additional info about the trigger"
                            }
                        },
                        "description": "Info about what caused the deployment",
                        "readOnly": true
                    },
                    "stages": {
                        "type": "array",
                        "example": "[\n  {\n    \"name\": \"queued\",\n    \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n    \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n    \"status\": \"active\"\n  },\n  {\n    \"name\": \"initialize\",\n    \"started_on\": null,\n    \"ended_on\": null,\n    \"status\": \"idle\"\n  },\n  {\n    \"name\": \"clone_repo\",\n    \"started_on\": null,\n    \"ended_on\": null,\n    \"status\": \"idle\"\n  },\n  {\n    \"name\": \"build\",\n    \"started_on\": null,\n    \"ended_on\": null,\n    \"status\": \"idle\"\n  },\n  {\n    \"name\": \"deploy\",\n    \"started_on\": null,\n    \"ended_on\": null,\n    \"status\": \"idle\"\n  }\n]",
                        "readOnly": true,
                        "description": "List of past stages",
                        "items": {
                            "description": "The status of the deployment",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                                "name": {
                                    "description": "The current build stage",
                                    "type": "string",
                                    "pattern": "queued|initialize|clone_repo|build|deploy",
                                    "example": "deploy"
                                },
                                "started_on": {
                                    "description": "When the stage started",
                                    "format": "date-time",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "2021-03-09T00:55:03.923456Z"
                                },
                                "ended_on": {
                                    "description": "When the stage ended",
                                    "format": "date-time",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "2021-03-09T00:58:59.045655"
                                },
                                "status": {
                                    "description": "State of the current stage",
                                    "type": "string",
                                    "pattern": "success|idle|active|failure|canceled",
                                    "readOnly": true,
                                    "example": "success"
                                }
                            }
                        }
                    },
                    "build_config": {
                        "type": "object",
                        "example": "{\n  \"build_command\": \"npm run build\",\n  \"destination_dir\": \"build\",\n  \"root_dir\": \"/\",\n  \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n  \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n}",
                        "properties": {
                            "build_command": {
                                "type": "string",
                                "example": "\"npm run build\"",
                                "description": "Command used to build project"
                            },
                            "destination_dir": {
                                "type": "string",
                                "example": "\"build\"",
                                "description": "Output directory of the build"
                            },
                            "root_dir": {
                                "type": "string",
                                "example": "\"/\"",
                                "description": "Directory to run the command"
                            },
                            "web_analytics_tag": {
                                "type": "string",
                                "example": "\"cee1c73f6e4743d0b5e6bb1a0bcaabcc\"",
                                "description": "The classifying tag for analytics"
                            },
                            "web_analytics_token": {
                                "type": "string",
                                "example": "\"021e1057c18547eca7b79f2516f06o7x\"",
                                "description": "The auth token for analytics"
                            }
                        },
                        "readOnly": true,
                        "description": "Configs for the project build process"
                    },
                    "source": {
                        "type": "object",
                        "example": "{\n  \"type\": \"github\",\n  \"config\": {\n    \"owner\": \"cloudflare\",\n    \"repo_name\": \"ninjakittens\",\n    \"production_branch\": \"main\",\n    \"pr_comments_enabled\": true,\n    \"deployments_enabled\": true\n  }\n}",
                        "properties": {
                            "type": {
                                "type": "string",
                                "example": "\"github\"",
                                "description": "Project host type",
                                "readOnly": true
                            },
                            "config": {
                                "type": "object",
                                "example": "{\n  \"owner\": \"cloudflare\",\n  \"repo_name\": \"ninjakittens\",\n  \"production_branch\": \"main\",\n  \"pr_comments_enabled\": true,\n  \"deployments_enabled\": true\n}",
                                "properties": {
                                    "owner": {
                                        "type": "string",
                                        "example": "\"cloudflare\"",
                                        "description": "Project owner username",
                                        "readOnly": true
                                    },
                                    "repo_name": {
                                        "type": "string",
                                        "example": "\"ninjakittens\"",
                                        "description": "Project repository name"
                                    },
                                    "production_branch": {
                                        "type": "string",
                                        "example": "\"main\"",
                                        "description": "Project production branch name"
                                    },
                                    "pr_comments_enabled": {
                                        "type": "boolean",
                                        "example": "true",
                                        "description": "Enable Pages to comment on Pull Requests"
                                    },
                                    "deployments_enabled": {
                                        "type": "boolean",
                                        "example": "true",
                                        "description": "Toggle deployments on this repo"
                                    }
                                }
                            }
                        },
                        "readOnly": true,
                        "description": "Configs for the project source"
                    }
                },
                "description": "Most recent deployment to the repo",
                "readOnly": true,
                "id": "https://api.cloudflare.com/schemas/v4/client/account/pages/deployments.json",
                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                "title": "Pages Deployment",
                "cfExtendedDescription": "**For more detailed documentation on using the API for Pages see the [Pages docs](https://developers.cloudflare.com/pages/).**",
                "cfDeprecations": {
                    "logs_v1_deprecated": {
                        "id": "logs_v1_deprecated",
                        "description": "Use \"Get deployment logs\" instead: https://api.cloudflare.com/#pages-deployment-get-deployment-logs.",
                        "eol": "2022-09-19",
                        "display": true
                    }
                },
                "links": [
                    {
                        "title": "Get deployments",
                        "description": "Fetch a list of deployments from a project",
                        "rel": "self",
                        "href": "accounts/:account_id/pages/projects/:project_name/deployments",
                        "method": "GET",
                        "cfRequestHeaders": {
                            "type": "object",
                            "required": [
                                "X-Auth-Email",
                                "X-Auth-Key"
                            ],
                            "properties": {
                                "X-Auth-Email": {
                                    "description": "Your Cloudflare email",
                                    "type": "string",
                                    "example": "user@example.com"
                                },
                                "X-Auth-Key": {
                                    "description": "Your Cloudflare API key",
                                    "type": "string",
                                    "minLength": 45,
                                    "maxLength": 45,
                                    "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                }
                            }
                        },
                        "targetSchema": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Common schema for all Cloudflare v4 API responses",
                                    "type": "object",
                                    "required": [
                                        "success",
                                        "errors",
                                        "messages",
                                        "result"
                                    ],
                                    "oneOf": [
                                        {
                                            "$comment": "This subschema describes successful responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        true
                                                    ],
                                                    "example": true
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": [
                                                        "object",
                                                        "array",
                                                        "string"
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "$comment": "This subschema describes failure responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        false
                                                    ],
                                                    "example": false
                                                },
                                                "errors": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "minLength": 1,
                                                    "example": [
                                                        {
                                                            "code": 7003,
                                                            "message": "No route for the URI"
                                                        }
                                                    ]
                                                },
                                                "messages": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": "null",
                                                    "enum": [
                                                        null
                                                    ],
                                                    "example": null
                                                }
                                            }
                                        }
                                    ],
                                    "definitions": {
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "properties": {
                                                    "code": {
                                                        "type": "integer",
                                                        "minimum": 1000
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "uniqueItems": true
                                            },
                                            "example": []
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "cfRecurse": ""
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "title": "Get deployment info",
                        "description": "Fetch a deployment",
                        "rel": "self",
                        "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id",
                        "method": "GET",
                        "cfRequestHeaders": {
                            "type": "object",
                            "required": [
                                "X-Auth-Email",
                                "X-Auth-Key"
                            ],
                            "properties": {
                                "X-Auth-Email": {
                                    "description": "Your Cloudflare email",
                                    "type": "string",
                                    "example": "user@example.com"
                                },
                                "X-Auth-Key": {
                                    "description": "Your Cloudflare API key",
                                    "type": "string",
                                    "minLength": 45,
                                    "maxLength": 45,
                                    "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                }
                            }
                        },
                        "targetSchema": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Common schema for all Cloudflare v4 API responses",
                                    "type": "object",
                                    "required": [
                                        "success",
                                        "errors",
                                        "messages",
                                        "result"
                                    ],
                                    "oneOf": [
                                        {
                                            "$comment": "This subschema describes successful responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        true
                                                    ],
                                                    "example": true
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": [
                                                        "object",
                                                        "array",
                                                        "string"
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "$comment": "This subschema describes failure responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        false
                                                    ],
                                                    "example": false
                                                },
                                                "errors": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "minLength": 1,
                                                    "example": [
                                                        {
                                                            "code": 7003,
                                                            "message": "No route for the URI"
                                                        }
                                                    ]
                                                },
                                                "messages": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": "null",
                                                    "enum": [
                                                        null
                                                    ],
                                                    "example": null
                                                }
                                            }
                                        }
                                    ],
                                    "definitions": {
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "properties": {
                                                    "code": {
                                                        "type": "integer",
                                                        "minimum": 1000
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "uniqueItems": true
                                            },
                                            "example": []
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "cfRecurse": ""
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "title": "Get deployment stage logs",
                        "description": "Fetch deploy logs",
                        "rel": "self",
                        "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/history/:deployment_stage_name/logs",
                        "method": "GET",
                        "cfDeprecation": {
                            "id": "logs_v1_deprecated",
                            "description": "Use \"Get deployment logs\" instead: https://api.cloudflare.com/#pages-deployment-get-deployment-logs.",
                            "eol": "2022-09-19",
                            "display": true
                        },
                        "cfRequestHeaders": {
                            "type": "object",
                            "required": [
                                "X-Auth-Email",
                                "X-Auth-Key"
                            ],
                            "properties": {
                                "X-Auth-Email": {
                                    "description": "Your Cloudflare email",
                                    "type": "string",
                                    "example": "user@example.com"
                                },
                                "X-Auth-Key": {
                                    "description": "Your Cloudflare API key",
                                    "type": "string",
                                    "minLength": 45,
                                    "maxLength": 45,
                                    "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                }
                            }
                        },
                        "targetSchema": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Common schema for all Cloudflare v4 API responses",
                                    "type": "object",
                                    "required": [
                                        "success",
                                        "errors",
                                        "messages",
                                        "result"
                                    ],
                                    "oneOf": [
                                        {
                                            "$comment": "This subschema describes successful responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        true
                                                    ],
                                                    "example": true
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": [
                                                        "object",
                                                        "array",
                                                        "string"
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "$comment": "This subschema describes failure responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        false
                                                    ],
                                                    "example": false
                                                },
                                                "errors": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "minLength": 1,
                                                    "example": [
                                                        {
                                                            "code": 7003,
                                                            "message": "No route for the URI"
                                                        }
                                                    ]
                                                },
                                                "messages": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": "null",
                                                    "enum": [
                                                        null
                                                    ],
                                                    "example": null
                                                }
                                            }
                                        }
                                    ],
                                    "definitions": {
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "properties": {
                                                    "code": {
                                                        "type": "integer",
                                                        "minimum": 1000
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "uniqueItems": true
                                            },
                                            "example": []
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "example": {
                                                "name": "build",
                                                "started_on": "2021-04-20T19:35:58.238757Z",
                                                "ended_on": "2021-04-20T19:36:06.38889Z",
                                                "status": "success",
                                                "start": 0,
                                                "end": 37,
                                                "total": 37,
                                                "data": [
                                                    {
                                                        "id": 15,
                                                        "timestamp": "2021-04-20T19:35:59.0749819Z",
                                                        "message": "Installing dependencies"
                                                    },
                                                    {
                                                        "id": 16,
                                                        "timestamp": "2021-04-20T19:35:59.0931208Z",
                                                        "message": "Python version set to 2.7"
                                                    },
                                                    {
                                                        "id": 17,
                                                        "timestamp": "2021-04-20T19:36:02.2369501Z",
                                                        "message": "v12.18.0 is already installed."
                                                    },
                                                    {
                                                        "id": 18,
                                                        "timestamp": "2021-04-20T19:36:02.6028886Z",
                                                        "message": "Now using node v12.18.0 (npm v6.14.4)"
                                                    },
                                                    {
                                                        "id": 19,
                                                        "timestamp": "2021-04-20T19:36:02.624555Z",
                                                        "message": "Started restoring cached build plugins"
                                                    },
                                                    {
                                                        "id": 20,
                                                        "timestamp": "2021-04-20T19:36:02.6340688Z",
                                                        "message": "Finished restoring cached build plugins"
                                                    },
                                                    {
                                                        "id": 21,
                                                        "timestamp": "2021-04-20T19:36:02.963095Z",
                                                        "message": "Attempting ruby version 2.7.1, read from environment"
                                                    },
                                                    {
                                                        "id": 22,
                                                        "timestamp": "2021-04-20T19:36:04.2236084Z",
                                                        "message": "Using ruby version 2.7.1"
                                                    },
                                                    {
                                                        "id": 23,
                                                        "timestamp": "2021-04-20T19:36:04.5450152Z",
                                                        "message": "Using PHP version 5.6"
                                                    },
                                                    {
                                                        "id": 24,
                                                        "timestamp": "2021-04-20T19:36:04.5740509Z",
                                                        "message": "5.2 is already installed."
                                                    },
                                                    {
                                                        "id": 25,
                                                        "timestamp": "2021-04-20T19:36:04.577035Z",
                                                        "message": "Using Swift version 5.2"
                                                    },
                                                    {
                                                        "id": 26,
                                                        "timestamp": "2021-04-20T19:36:04.5771615Z",
                                                        "message": "Installing Hugo 0.54.0"
                                                    },
                                                    {
                                                        "id": 27,
                                                        "timestamp": "2021-04-20T19:36:05.4786868Z",
                                                        "message": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
                                                    },
                                                    {
                                                        "id": 28,
                                                        "timestamp": "2021-04-20T19:36:05.4794366Z",
                                                        "message": "Started restoring cached go cache"
                                                    },
                                                    {
                                                        "id": 29,
                                                        "timestamp": "2021-04-20T19:36:05.481977Z",
                                                        "message": "Finished restoring cached go cache"
                                                    },
                                                    {
                                                        "id": 30,
                                                        "timestamp": "2021-04-20T19:36:05.9049776Z",
                                                        "message": "go version go1.14.4 linux/amd64"
                                                    },
                                                    {
                                                        "id": 31,
                                                        "timestamp": "2021-04-20T19:36:05.9086053Z",
                                                        "message": "go version go1.14.4 linux/amd64"
                                                    },
                                                    {
                                                        "id": 32,
                                                        "timestamp": "2021-04-20T19:36:05.9163568Z",
                                                        "message": "Installing missing commands"
                                                    },
                                                    {
                                                        "id": 33,
                                                        "timestamp": "2021-04-20T19:36:05.9163934Z",
                                                        "message": "Verify run directory"
                                                    },
                                                    {
                                                        "id": 34,
                                                        "timestamp": "2021-04-20T19:36:05.9164636Z",
                                                        "message": "Executing user command: echo \"skipping build step: no build command specified\""
                                                    },
                                                    {
                                                        "id": 35,
                                                        "timestamp": "2021-04-20T19:36:05.9165087Z",
                                                        "message": "skipping build step: no build command specified"
                                                    },
                                                    {
                                                        "id": 36,
                                                        "timestamp": "2021-04-20T19:36:05.917412Z",
                                                        "message": "Finished"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "title": "Get deployment logs",
                        "description": "Fetch deploy logs",
                        "rel": "self",
                        "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/history/logs",
                        "method": "GET",
                        "cfRequestHeaders": {
                            "type": "object",
                            "required": [
                                "X-Auth-Email",
                                "X-Auth-Key"
                            ],
                            "properties": {
                                "X-Auth-Email": {
                                    "description": "Your Cloudflare email",
                                    "type": "string",
                                    "example": "user@example.com"
                                },
                                "X-Auth-Key": {
                                    "description": "Your Cloudflare API key",
                                    "type": "string",
                                    "minLength": 45,
                                    "maxLength": 45,
                                    "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                }
                            }
                        },
                        "targetSchema": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Common schema for all Cloudflare v4 API responses",
                                    "type": "object",
                                    "required": [
                                        "success",
                                        "errors",
                                        "messages",
                                        "result"
                                    ],
                                    "oneOf": [
                                        {
                                            "$comment": "This subschema describes successful responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        true
                                                    ],
                                                    "example": true
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": [
                                                        "object",
                                                        "array",
                                                        "string"
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "$comment": "This subschema describes failure responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        false
                                                    ],
                                                    "example": false
                                                },
                                                "errors": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "minLength": 1,
                                                    "example": [
                                                        {
                                                            "code": 7003,
                                                            "message": "No route for the URI"
                                                        }
                                                    ]
                                                },
                                                "messages": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": "null",
                                                    "enum": [
                                                        null
                                                    ],
                                                    "example": null
                                                }
                                            }
                                        }
                                    ],
                                    "definitions": {
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "properties": {
                                                    "code": {
                                                        "type": "integer",
                                                        "minimum": 1000
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "uniqueItems": true
                                            },
                                            "example": []
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "example": {
                                                "total": 30,
                                                "includes_container_logs": true,
                                                "data": [
                                                    {
                                                        "ts": "2021-04-20T19:35:29.0749819Z",
                                                        "line": "Cloning repository..."
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:30.0749819Z",
                                                        "line": "From https://github.com/cloudflare/example"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:30.0749819Z",
                                                        "line": " * branch            209c5bb11d89533f426b2f8469bcae12fdccf71b -> FETCH_HEAD"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:30.0749819Z",
                                                        "line": ""
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:30.0749819Z",
                                                        "line": "HEAD is now at 209c5bb Update index.html"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:30.0749819Z",
                                                        "line": ""
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:30.0749819Z",
                                                        "line": ""
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:30.0749819Z",
                                                        "line": "Success: Finished cloning repository files"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:59.0749819Z",
                                                        "line": "Installing dependencies"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:59.0931208Z",
                                                        "line": "Python version set to 2.7"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:02.2369501Z",
                                                        "line": "v12.18.0 is already installed."
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:02.6028886Z",
                                                        "line": "Now using node v12.18.0 (npm v6.14.4)"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:02.624555Z",
                                                        "line": "Started restoring cached build plugins"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:02.6340688Z",
                                                        "line": "Finished restoring cached build plugins"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:02.963095Z",
                                                        "line": "Attempting ruby version 2.7.1, read from environment"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:04.2236084Z",
                                                        "line": "Using ruby version 2.7.1"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:04.5450152Z",
                                                        "line": "Using PHP version 5.6"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:04.5740509Z",
                                                        "line": "5.2 is already installed."
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:04.577035Z",
                                                        "line": "Using Swift version 5.2"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:04.5771615Z",
                                                        "line": "Installing Hugo 0.54.0"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.4786868Z",
                                                        "line": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.4794366Z",
                                                        "line": "Started restoring cached go cache"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.481977Z",
                                                        "line": "Finished restoring cached go cache"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.9049776Z",
                                                        "line": "go version go1.14.4 linux/amd64"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.9086053Z",
                                                        "line": "go version go1.14.4 linux/amd64"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.9163568Z",
                                                        "line": "Installing missing commands"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.9163934Z",
                                                        "line": "Verify run directory"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.9164636Z",
                                                        "line": "Executing user command: echo \"skipping build step: no build command specified\""
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.9165087Z",
                                                        "line": "skipping build step: no build command specified"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.917412Z",
                                                        "line": "Finished"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "title": "Delete deployment",
                        "description": "Destroy a deployment",
                        "rel": "self",
                        "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id",
                        "method": "DELETE",
                        "cfRequestHeaders": {
                            "type": "object",
                            "required": [
                                "X-Auth-Email",
                                "X-Auth-Key"
                            ],
                            "properties": {
                                "X-Auth-Email": {
                                    "description": "Your Cloudflare email",
                                    "type": "string",
                                    "example": "user@example.com"
                                },
                                "X-Auth-Key": {
                                    "description": "Your Cloudflare API key",
                                    "type": "string",
                                    "minLength": 45,
                                    "maxLength": 45,
                                    "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                }
                            }
                        },
                        "targetSchema": {
                            "example": {
                                "result": null,
                                "success": true,
                                "errors": [],
                                "messages": []
                            }
                        }
                    },
                    {
                        "title": "Create deployment",
                        "description": "Start a new deployment from production. The repo/account must have been authorized through the Pages UI dash before.",
                        "rel": "self",
                        "href": "accounts/:account_id/pages/projects/:project_name/deployments",
                        "method": "POST",
                        "cfRequestHeaders": {
                            "type": "object",
                            "required": [
                                "X-Auth-Email",
                                "X-Auth-Key"
                            ],
                            "properties": {
                                "X-Auth-Email": {
                                    "description": "Your Cloudflare email",
                                    "type": "string",
                                    "example": "user@example.com"
                                },
                                "X-Auth-Key": {
                                    "description": "Your Cloudflare API key",
                                    "type": "string",
                                    "minLength": 45,
                                    "maxLength": 45,
                                    "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                }
                            }
                        },
                        "targetSchema": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Common schema for all Cloudflare v4 API responses",
                                    "type": "object",
                                    "required": [
                                        "success",
                                        "errors",
                                        "messages",
                                        "result"
                                    ],
                                    "oneOf": [
                                        {
                                            "$comment": "This subschema describes successful responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        true
                                                    ],
                                                    "example": true
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": [
                                                        "object",
                                                        "array",
                                                        "string"
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "$comment": "This subschema describes failure responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        false
                                                    ],
                                                    "example": false
                                                },
                                                "errors": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "minLength": 1,
                                                    "example": [
                                                        {
                                                            "code": 7003,
                                                            "message": "No route for the URI"
                                                        }
                                                    ]
                                                },
                                                "messages": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": "null",
                                                    "enum": [
                                                        null
                                                    ],
                                                    "example": null
                                                }
                                            }
                                        }
                                    ],
                                    "definitions": {
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "properties": {
                                                    "code": {
                                                        "type": "integer",
                                                        "minimum": 1000
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "uniqueItems": true
                                            },
                                            "example": []
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "cfRecurse": ""
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "title": "Retry deployment",
                        "description": "Retry a previous deployment",
                        "rel": "self",
                        "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/retry",
                        "method": "POST",
                        "cfRequestHeaders": {
                            "type": "object",
                            "required": [
                                "X-Auth-Email",
                                "X-Auth-Key"
                            ],
                            "properties": {
                                "X-Auth-Email": {
                                    "description": "Your Cloudflare email",
                                    "type": "string",
                                    "example": "user@example.com"
                                },
                                "X-Auth-Key": {
                                    "description": "Your Cloudflare API key",
                                    "type": "string",
                                    "minLength": 45,
                                    "maxLength": 45,
                                    "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                }
                            }
                        },
                        "targetSchema": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Common schema for all Cloudflare v4 API responses",
                                    "type": "object",
                                    "required": [
                                        "success",
                                        "errors",
                                        "messages",
                                        "result"
                                    ],
                                    "oneOf": [
                                        {
                                            "$comment": "This subschema describes successful responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        true
                                                    ],
                                                    "example": true
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": [
                                                        "object",
                                                        "array",
                                                        "string"
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "$comment": "This subschema describes failure responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        false
                                                    ],
                                                    "example": false
                                                },
                                                "errors": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "minLength": 1,
                                                    "example": [
                                                        {
                                                            "code": 7003,
                                                            "message": "No route for the URI"
                                                        }
                                                    ]
                                                },
                                                "messages": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": "null",
                                                    "enum": [
                                                        null
                                                    ],
                                                    "example": null
                                                }
                                            }
                                        }
                                    ],
                                    "definitions": {
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "properties": {
                                                    "code": {
                                                        "type": "integer",
                                                        "minimum": 1000
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "uniqueItems": true
                                            },
                                            "example": []
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "cfRecurse": ""
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "title": "Rollback deployment",
                        "description": "Rollback the production deployment to a previous deploy. You can only rollback to succesful builds on production.",
                        "rel": "self",
                        "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/rollback",
                        "method": "POST",
                        "cfRequestHeaders": {
                            "type": "object",
                            "required": [
                                "X-Auth-Email",
                                "X-Auth-Key"
                            ],
                            "properties": {
                                "X-Auth-Email": {
                                    "description": "Your Cloudflare email",
                                    "type": "string",
                                    "example": "user@example.com"
                                },
                                "X-Auth-Key": {
                                    "description": "Your Cloudflare API key",
                                    "type": "string",
                                    "minLength": 45,
                                    "maxLength": 45,
                                    "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                }
                            }
                        },
                        "targetSchema": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Common schema for all Cloudflare v4 API responses",
                                    "type": "object",
                                    "required": [
                                        "success",
                                        "errors",
                                        "messages",
                                        "result"
                                    ],
                                    "oneOf": [
                                        {
                                            "$comment": "This subschema describes successful responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        true
                                                    ],
                                                    "example": true
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": [
                                                        "object",
                                                        "array",
                                                        "string"
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "$comment": "This subschema describes failure responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        false
                                                    ],
                                                    "example": false
                                                },
                                                "errors": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "minLength": 1,
                                                    "example": [
                                                        {
                                                            "code": 7003,
                                                            "message": "No route for the URI"
                                                        }
                                                    ]
                                                },
                                                "messages": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": "null",
                                                    "enum": [
                                                        null
                                                    ],
                                                    "example": null
                                                }
                                            }
                                        }
                                    ],
                                    "definitions": {
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "properties": {
                                                    "code": {
                                                        "type": "integer",
                                                        "minimum": 1000
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "uniqueItems": true
                                            },
                                            "example": []
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "cfRecurse": ""
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "definitions": {
                    "deployment-new-deployment": {
                        "allOf": [
                            {
                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                "description": "Common schema for all Cloudflare v4 API responses",
                                "type": "object",
                                "required": [
                                    "success",
                                    "errors",
                                    "messages",
                                    "result"
                                ],
                                "oneOf": [
                                    {
                                        "$comment": "This subschema describes successful responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    true
                                                ],
                                                "example": true
                                            },
                                            "errors": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "result": {
                                                "type": [
                                                    "object",
                                                    "array",
                                                    "string"
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "$comment": "This subschema describes failure responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    false
                                                ],
                                                "example": false
                                            },
                                            "errors": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "minLength": 1,
                                                "example": [
                                                    {
                                                        "code": 7003,
                                                        "message": "No route for the URI"
                                                    }
                                                ]
                                            },
                                            "messages": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "example": []
                                            },
                                            "result": {
                                                "type": "null",
                                                "enum": [
                                                    null
                                                ],
                                                "example": null
                                            }
                                        }
                                    }
                                ],
                                "definitions": {
                                    "messages": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "code",
                                                "message"
                                            ],
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "minimum": 1000
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "uniqueItems": true
                                        },
                                        "example": []
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "result": {
                                        "cfRecurse": ""
                                    }
                                }
                            }
                        ]
                    },
                    "deployment-response-stage-logs": {
                        "allOf": [
                            {
                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                "description": "Common schema for all Cloudflare v4 API responses",
                                "type": "object",
                                "required": [
                                    "success",
                                    "errors",
                                    "messages",
                                    "result"
                                ],
                                "oneOf": [
                                    {
                                        "$comment": "This subschema describes successful responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    true
                                                ],
                                                "example": true
                                            },
                                            "errors": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "result": {
                                                "type": [
                                                    "object",
                                                    "array",
                                                    "string"
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "$comment": "This subschema describes failure responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    false
                                                ],
                                                "example": false
                                            },
                                            "errors": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "minLength": 1,
                                                "example": [
                                                    {
                                                        "code": 7003,
                                                        "message": "No route for the URI"
                                                    }
                                                ]
                                            },
                                            "messages": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "example": []
                                            },
                                            "result": {
                                                "type": "null",
                                                "enum": [
                                                    null
                                                ],
                                                "example": null
                                            }
                                        }
                                    }
                                ],
                                "definitions": {
                                    "messages": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "code",
                                                "message"
                                            ],
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "minimum": 1000
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "uniqueItems": true
                                        },
                                        "example": []
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "result": {
                                        "type": "object",
                                        "example": {
                                            "name": "build",
                                            "started_on": "2021-04-20T19:35:58.238757Z",
                                            "ended_on": "2021-04-20T19:36:06.38889Z",
                                            "status": "success",
                                            "start": 0,
                                            "end": 37,
                                            "total": 37,
                                            "data": [
                                                {
                                                    "id": 15,
                                                    "timestamp": "2021-04-20T19:35:59.0749819Z",
                                                    "message": "Installing dependencies"
                                                },
                                                {
                                                    "id": 16,
                                                    "timestamp": "2021-04-20T19:35:59.0931208Z",
                                                    "message": "Python version set to 2.7"
                                                },
                                                {
                                                    "id": 17,
                                                    "timestamp": "2021-04-20T19:36:02.2369501Z",
                                                    "message": "v12.18.0 is already installed."
                                                },
                                                {
                                                    "id": 18,
                                                    "timestamp": "2021-04-20T19:36:02.6028886Z",
                                                    "message": "Now using node v12.18.0 (npm v6.14.4)"
                                                },
                                                {
                                                    "id": 19,
                                                    "timestamp": "2021-04-20T19:36:02.624555Z",
                                                    "message": "Started restoring cached build plugins"
                                                },
                                                {
                                                    "id": 20,
                                                    "timestamp": "2021-04-20T19:36:02.6340688Z",
                                                    "message": "Finished restoring cached build plugins"
                                                },
                                                {
                                                    "id": 21,
                                                    "timestamp": "2021-04-20T19:36:02.963095Z",
                                                    "message": "Attempting ruby version 2.7.1, read from environment"
                                                },
                                                {
                                                    "id": 22,
                                                    "timestamp": "2021-04-20T19:36:04.2236084Z",
                                                    "message": "Using ruby version 2.7.1"
                                                },
                                                {
                                                    "id": 23,
                                                    "timestamp": "2021-04-20T19:36:04.5450152Z",
                                                    "message": "Using PHP version 5.6"
                                                },
                                                {
                                                    "id": 24,
                                                    "timestamp": "2021-04-20T19:36:04.5740509Z",
                                                    "message": "5.2 is already installed."
                                                },
                                                {
                                                    "id": 25,
                                                    "timestamp": "2021-04-20T19:36:04.577035Z",
                                                    "message": "Using Swift version 5.2"
                                                },
                                                {
                                                    "id": 26,
                                                    "timestamp": "2021-04-20T19:36:04.5771615Z",
                                                    "message": "Installing Hugo 0.54.0"
                                                },
                                                {
                                                    "id": 27,
                                                    "timestamp": "2021-04-20T19:36:05.4786868Z",
                                                    "message": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
                                                },
                                                {
                                                    "id": 28,
                                                    "timestamp": "2021-04-20T19:36:05.4794366Z",
                                                    "message": "Started restoring cached go cache"
                                                },
                                                {
                                                    "id": 29,
                                                    "timestamp": "2021-04-20T19:36:05.481977Z",
                                                    "message": "Finished restoring cached go cache"
                                                },
                                                {
                                                    "id": 30,
                                                    "timestamp": "2021-04-20T19:36:05.9049776Z",
                                                    "message": "go version go1.14.4 linux/amd64"
                                                },
                                                {
                                                    "id": 31,
                                                    "timestamp": "2021-04-20T19:36:05.9086053Z",
                                                    "message": "go version go1.14.4 linux/amd64"
                                                },
                                                {
                                                    "id": 32,
                                                    "timestamp": "2021-04-20T19:36:05.9163568Z",
                                                    "message": "Installing missing commands"
                                                },
                                                {
                                                    "id": 33,
                                                    "timestamp": "2021-04-20T19:36:05.9163934Z",
                                                    "message": "Verify run directory"
                                                },
                                                {
                                                    "id": 34,
                                                    "timestamp": "2021-04-20T19:36:05.9164636Z",
                                                    "message": "Executing user command: echo \"skipping build step: no build command specified\""
                                                },
                                                {
                                                    "id": 35,
                                                    "timestamp": "2021-04-20T19:36:05.9165087Z",
                                                    "message": "skipping build step: no build command specified"
                                                },
                                                {
                                                    "id": 36,
                                                    "timestamp": "2021-04-20T19:36:05.917412Z",
                                                    "message": "Finished"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "deployment-response-logs": {
                        "allOf": [
                            {
                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                "description": "Common schema for all Cloudflare v4 API responses",
                                "type": "object",
                                "required": [
                                    "success",
                                    "errors",
                                    "messages",
                                    "result"
                                ],
                                "oneOf": [
                                    {
                                        "$comment": "This subschema describes successful responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    true
                                                ],
                                                "example": true
                                            },
                                            "errors": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "result": {
                                                "type": [
                                                    "object",
                                                    "array",
                                                    "string"
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "$comment": "This subschema describes failure responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    false
                                                ],
                                                "example": false
                                            },
                                            "errors": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "minLength": 1,
                                                "example": [
                                                    {
                                                        "code": 7003,
                                                        "message": "No route for the URI"
                                                    }
                                                ]
                                            },
                                            "messages": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "example": []
                                            },
                                            "result": {
                                                "type": "null",
                                                "enum": [
                                                    null
                                                ],
                                                "example": null
                                            }
                                        }
                                    }
                                ],
                                "definitions": {
                                    "messages": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "code",
                                                "message"
                                            ],
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "minimum": 1000
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "uniqueItems": true
                                        },
                                        "example": []
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "result": {
                                        "type": "object",
                                        "example": {
                                            "total": 30,
                                            "includes_container_logs": true,
                                            "data": [
                                                {
                                                    "ts": "2021-04-20T19:35:29.0749819Z",
                                                    "line": "Cloning repository..."
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:30.0749819Z",
                                                    "line": "From https://github.com/cloudflare/example"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:30.0749819Z",
                                                    "line": " * branch            209c5bb11d89533f426b2f8469bcae12fdccf71b -> FETCH_HEAD"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:30.0749819Z",
                                                    "line": ""
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:30.0749819Z",
                                                    "line": "HEAD is now at 209c5bb Update index.html"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:30.0749819Z",
                                                    "line": ""
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:30.0749819Z",
                                                    "line": ""
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:30.0749819Z",
                                                    "line": "Success: Finished cloning repository files"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:59.0749819Z",
                                                    "line": "Installing dependencies"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:59.0931208Z",
                                                    "line": "Python version set to 2.7"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:02.2369501Z",
                                                    "line": "v12.18.0 is already installed."
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:02.6028886Z",
                                                    "line": "Now using node v12.18.0 (npm v6.14.4)"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:02.624555Z",
                                                    "line": "Started restoring cached build plugins"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:02.6340688Z",
                                                    "line": "Finished restoring cached build plugins"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:02.963095Z",
                                                    "line": "Attempting ruby version 2.7.1, read from environment"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:04.2236084Z",
                                                    "line": "Using ruby version 2.7.1"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:04.5450152Z",
                                                    "line": "Using PHP version 5.6"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:04.5740509Z",
                                                    "line": "5.2 is already installed."
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:04.577035Z",
                                                    "line": "Using Swift version 5.2"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:04.5771615Z",
                                                    "line": "Installing Hugo 0.54.0"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.4786868Z",
                                                    "line": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.4794366Z",
                                                    "line": "Started restoring cached go cache"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.481977Z",
                                                    "line": "Finished restoring cached go cache"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.9049776Z",
                                                    "line": "go version go1.14.4 linux/amd64"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.9086053Z",
                                                    "line": "go version go1.14.4 linux/amd64"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.9163568Z",
                                                    "line": "Installing missing commands"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.9163934Z",
                                                    "line": "Verify run directory"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.9164636Z",
                                                    "line": "Executing user command: echo \"skipping build step: no build command specified\""
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.9165087Z",
                                                    "line": "skipping build step: no build command specified"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.917412Z",
                                                    "line": "Finished"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "deployment-list-response": {
                        "allOf": [
                            {
                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                "description": "Common schema for all Cloudflare v4 API responses",
                                "type": "object",
                                "required": [
                                    "success",
                                    "errors",
                                    "messages",
                                    "result"
                                ],
                                "oneOf": [
                                    {
                                        "$comment": "This subschema describes successful responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    true
                                                ],
                                                "example": true
                                            },
                                            "errors": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "result": {
                                                "type": [
                                                    "object",
                                                    "array",
                                                    "string"
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "$comment": "This subschema describes failure responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    false
                                                ],
                                                "example": false
                                            },
                                            "errors": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "minLength": 1,
                                                "example": [
                                                    {
                                                        "code": 7003,
                                                        "message": "No route for the URI"
                                                    }
                                                ]
                                            },
                                            "messages": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "example": []
                                            },
                                            "result": {
                                                "type": "null",
                                                "enum": [
                                                    null
                                                ],
                                                "example": null
                                            }
                                        }
                                    }
                                ],
                                "definitions": {
                                    "messages": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "code",
                                                "message"
                                            ],
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "minimum": 1000
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "uniqueItems": true
                                        },
                                        "example": []
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "result_info": {
                                        "type": "object",
                                        "properties": {
                                            "page": {
                                                "example": 1
                                            },
                                            "per_page": {
                                                "example": 100
                                            },
                                            "count": {
                                                "example": 1
                                            },
                                            "total_count": {
                                                "example": 1
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "result": {
                                        "type": "array",
                                        "cfRecurse": ""
                                    }
                                }
                            }
                        ]
                    },
                    "deployment-response-details": {
                        "allOf": [
                            {
                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                "description": "Common schema for all Cloudflare v4 API responses",
                                "type": "object",
                                "required": [
                                    "success",
                                    "errors",
                                    "messages",
                                    "result"
                                ],
                                "oneOf": [
                                    {
                                        "$comment": "This subschema describes successful responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    true
                                                ],
                                                "example": true
                                            },
                                            "errors": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "result": {
                                                "type": [
                                                    "object",
                                                    "array",
                                                    "string"
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "$comment": "This subschema describes failure responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    false
                                                ],
                                                "example": false
                                            },
                                            "errors": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "minLength": 1,
                                                "example": [
                                                    {
                                                        "code": 7003,
                                                        "message": "No route for the URI"
                                                    }
                                                ]
                                            },
                                            "messages": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "example": []
                                            },
                                            "result": {
                                                "type": "null",
                                                "enum": [
                                                    null
                                                ],
                                                "example": null
                                            }
                                        }
                                    }
                                ],
                                "definitions": {
                                    "messages": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "code",
                                                "message"
                                            ],
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "minimum": 1000
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "uniqueItems": true
                                        },
                                        "example": []
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "result": {
                                        "cfRecurse": ""
                                    }
                                }
                            }
                        ]
                    },
                    "account_identifier": {
                        "id": "https://api.cloudflare.com/schemas/v4/common/identifier.json",
                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                        "description": "API item identifier tag",
                        "type": "string",
                        "maxLength": 32,
                        "readOnly": true,
                        "example": "9a7806061c88ada191ed06f989cc3dac"
                    },
                    "build_config": {
                        "description": "Configs for the project build process",
                        "type": "object",
                        "properties": {
                            "build_command": {
                                "description": "Command used to build project",
                                "type": "string",
                                "example": "npm run build"
                            },
                            "destination_dir": {
                                "description": "Output directory of the build",
                                "type": "string",
                                "example": "build"
                            },
                            "root_dir": {
                                "description": "Directory to run the command",
                                "type": "string",
                                "example": "/"
                            },
                            "web_analytics_tag": {
                                "description": "The classifying tag for analytics",
                                "type": "string",
                                "example": "cee1c73f6e4743d0b5e6bb1a0bcaabcc"
                            },
                            "web_analytics_token": {
                                "description": "The auth token for analytics",
                                "type": "string",
                                "example": "021e1057c18547eca7b79f2516f06o7x"
                            }
                        }
                    },
                    "stage": {
                        "description": "The status of the deployment",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                            "name": {
                                "description": "The current build stage",
                                "type": "string",
                                "pattern": "queued|initialize|clone_repo|build|deploy",
                                "example": "deploy"
                            },
                            "started_on": {
                                "description": "When the stage started",
                                "format": "date-time",
                                "type": "string",
                                "readOnly": true,
                                "example": "2021-03-09T00:55:03.923456Z"
                            },
                            "ended_on": {
                                "description": "When the stage ended",
                                "format": "date-time",
                                "type": "string",
                                "readOnly": true,
                                "example": "2021-03-09T00:58:59.045655"
                            },
                            "status": {
                                "description": "State of the current stage",
                                "type": "string",
                                "pattern": "success|idle|active|failure|canceled",
                                "readOnly": true,
                                "example": "success"
                            }
                        }
                    }
                },
                "cfLinkErrors": {
                    "8000000": "An unknown error occurred",
                    "8000001": "A project already exists for this repo",
                    "8000002": "A project with this name already exists",
                    "8000003": "Invalid project name",
                    "8000004": "Account not authorized for the requested repo",
                    "8000005": "Required field missing",
                    "8000006": "Unable to parse request",
                    "8000007": "Project not found",
                    "8000008": "No installation found",
                    "8000009": "Deployment not found",
                    "8000010": "User is not authorized for provided GitHub Installation ID",
                    "8000011": "User has no linked GitHub accounts matching the provided username",
                    "8000012": "User has no linked GitHub repositories matching the provided name",
                    "8000013": "Authorization failed",
                    "8000014": "Deployment type not found",
                    "8000015": "Domain is invalid",
                    "8000016": "Unicode domains are not supported",
                    "8000017": "An operation is already in progress for this domain",
                    "8000018": "Domain is unavailable",
                    "8000019": "Project has reached the maximum number of allowed domains",
                    "8000020": "No deployment stage found for the provided name",
                    "8000021": "Domain not found",
                    "8000022": "Invalid PATCH operation requested",
                    "8000023": "Attempt to add duplicate environment variable, or replace or delete nonexistent variable",
                    "8000024": "Invalid list options provided",
                    "8000025": "Domain is not registered",
                    "8000026": "Coming soon",
                    "8000027": "Too many projects",
                    "8000028": "Must delete custom domains before deleting project",
                    "8000029": "Subdomain is unavailable",
                    "8000030": "Subdomain is blocked",
                    "8000031": "Unable to cancel completed deployment",
                    "8000032": "Unable to find a branch with the provided name",
                    "8000033": "Production branch must be set",
                    "8000034": "Cannot delete active production deployment",
                    "8000035": "Cannot delete aliased deployment",
                    "8000036": "Account has been blocked"
                }
            },
            "canonical_deployment": {
                "type": "object",
                "example": "{\n  \"id\": \"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\n  \"short_id\": \"f64788e9\",\n  \"project_id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n  \"project_name\": \"ninjakittens\",\n  \"environment\": \"preview\",\n  \"url\": \"https://f64788e9.ninjakittens.pages.dev\",\n  \"created_on\": \"2021-03-09T00:55:03.923456Z\",\n  \"modified_on\": \"2021-03-09T00:58:59.045655\",\n  \"aliases\": [\n    \"https://branchname.projectname.pages.dev\"\n  ],\n  \"latest_stage\": {\n    \"name\": \"deploy\",\n    \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n    \"ended_on\": \"2021-03-09T00:58:59.045655\",\n    \"status\": \"success\"\n  },\n  \"env_vars\": {\n    \"BUILD_VERSION\": {\n      \"value\": \"3.3\"\n    },\n    \"ENV\": {\n      \"value\": \"STAGING\"\n    }\n  },\n  \"deployment_trigger\": {\n    \"type\": \"ad_hoc\",\n    \"metadata\": {\n      \"branch\": \"main\",\n      \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n      \"commit_message\": \"Update index.html\"\n    }\n  },\n  \"stages\": [\n    {\n      \"name\": \"queued\",\n      \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n      \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n      \"status\": \"active\"\n    },\n    {\n      \"name\": \"initialize\",\n      \"started_on\": null,\n      \"ended_on\": null,\n      \"status\": \"idle\"\n    },\n    {\n      \"name\": \"clone_repo\",\n      \"started_on\": null,\n      \"ended_on\": null,\n      \"status\": \"idle\"\n    },\n    {\n      \"name\": \"build\",\n      \"started_on\": null,\n      \"ended_on\": null,\n      \"status\": \"idle\"\n    },\n    {\n      \"name\": \"deploy\",\n      \"started_on\": null,\n      \"ended_on\": null,\n      \"status\": \"idle\"\n    }\n  ],\n  \"build_config\": {\n    \"build_command\": \"npm run build\",\n    \"destination_dir\": \"build\",\n    \"root_dir\": \"/\",\n    \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n    \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n  },\n  \"source\": {\n    \"type\": \"github\",\n    \"config\": {\n      \"owner\": \"cloudflare\",\n      \"repo_name\": \"ninjakittens\",\n      \"production_branch\": \"main\",\n      \"pr_comments_enabled\": true,\n      \"deployments_enabled\": true\n    }\n  }\n}",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "\"f64788e9-fccd-4d4a-a28a-cb84f88f6\"",
                        "description": "Id of the deployment",
                        "readOnly": true
                    },
                    "short_id": {
                        "type": "string",
                        "example": "\"f64788e9\"",
                        "description": "Short Id (8 character) of the deployment",
                        "readOnly": true
                    },
                    "project_id": {
                        "type": "string",
                        "example": "\"7b162ea7-7367-4d67-bcde-1160995d5\"",
                        "description": "Id of the project",
                        "readOnly": true
                    },
                    "project_name": {
                        "type": "string",
                        "example": "\"ninjakittens\"",
                        "readOnly": true,
                        "description": "Name of the project"
                    },
                    "environment": {
                        "type": "string",
                        "example": "\"preview\"",
                        "description": "Type of deploy",
                        "readOnly": true,
                        "pattern": "preview|prediction"
                    },
                    "url": {
                        "type": "string",
                        "example": "\"https://f64788e9.ninjakittens.pages.dev\"",
                        "description": "The live URL to view this deployment",
                        "readOnly": true
                    },
                    "created_on": {
                        "type": "string",
                        "example": "\"2021-03-09T00:55:03.923456Z\"",
                        "description": "When the deployment was created",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_on": {
                        "type": "string",
                        "example": "\"2021-03-09T00:58:59.045655\"",
                        "description": "When the deployment was last modified",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "aliases": {
                        "type": "array",
                        "example": "[\n  \"https://branchname.projectname.pages.dev\"\n]",
                        "description": "A list of alias URLs pointing to this deployment",
                        "readOnly": true
                    },
                    "latest_stage": {
                        "type": "object",
                        "example": "{\n  \"name\": \"deploy\",\n  \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n  \"ended_on\": \"2021-03-09T00:58:59.045655\",\n  \"status\": \"success\"\n}",
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "\"deploy\"",
                                "description": "The current build stage",
                                "pattern": "queued|initialize|clone_repo|build|deploy"
                            },
                            "started_on": {
                                "type": "string",
                                "example": "\"2021-03-09T00:55:03.923456Z\"",
                                "description": "When the stage started",
                                "format": "date-time",
                                "readOnly": true
                            },
                            "ended_on": {
                                "type": "string",
                                "example": "\"2021-03-09T00:58:59.045655\"",
                                "description": "When the stage ended",
                                "format": "date-time",
                                "readOnly": true
                            },
                            "status": {
                                "type": "string",
                                "example": "\"success\"",
                                "description": "State of the current stage",
                                "pattern": "success|idle|active|failure|canceled",
                                "readOnly": true
                            }
                        },
                        "readOnly": true,
                        "description": "The status of the deployment"
                    },
                    "env_vars": {
                        "type": "object",
                        "example": "{\n  \"BUILD_VERSION\": {\n    \"value\": \"3.3\"\n  },\n  \"ENV\": {\n    \"value\": \"STAGING\"\n  }\n}",
                        "description": "A dict of env variables to build this deploy",
                        "readOnly": true
                    },
                    "deployment_trigger": {
                        "type": "object",
                        "example": "{\n  \"type\": \"ad_hoc\",\n  \"metadata\": {\n    \"branch\": \"main\",\n    \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n    \"commit_message\": \"Update index.html\"\n  }\n}",
                        "properties": {
                            "type": {
                                "type": "string",
                                "example": "\"ad_hoc\"",
                                "description": "What caused the deployment",
                                "pattern": "push|ad_hoc",
                                "readOnly": true
                            },
                            "metadata": {
                                "type": "object",
                                "example": "{\n  \"branch\": \"main\",\n  \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n  \"commit_message\": \"Update index.html\"\n}",
                                "properties": {
                                    "branch": {
                                        "type": "string",
                                        "example": "\"main\"",
                                        "description": "Where the trigger happened",
                                        "readOnly": true
                                    },
                                    "commit_hash": {
                                        "type": "string",
                                        "example": "\"ad9ccd918a81025731e10e40267e11273a263421\"",
                                        "description": "Hash of the deployment trigger commit",
                                        "readOnly": true
                                    },
                                    "commit_message": {
                                        "type": "string",
                                        "example": "\"Update index.html\"",
                                        "description": "Message of the deployment trigger commit",
                                        "readOnly": true
                                    }
                                },
                                "description": "Additional info about the trigger"
                            }
                        },
                        "description": "Info about what caused the deployment",
                        "readOnly": true
                    },
                    "stages": {
                        "type": "array",
                        "example": "[\n  {\n    \"name\": \"queued\",\n    \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n    \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n    \"status\": \"active\"\n  },\n  {\n    \"name\": \"initialize\",\n    \"started_on\": null,\n    \"ended_on\": null,\n    \"status\": \"idle\"\n  },\n  {\n    \"name\": \"clone_repo\",\n    \"started_on\": null,\n    \"ended_on\": null,\n    \"status\": \"idle\"\n  },\n  {\n    \"name\": \"build\",\n    \"started_on\": null,\n    \"ended_on\": null,\n    \"status\": \"idle\"\n  },\n  {\n    \"name\": \"deploy\",\n    \"started_on\": null,\n    \"ended_on\": null,\n    \"status\": \"idle\"\n  }\n]",
                        "readOnly": true,
                        "description": "List of past stages",
                        "items": {
                            "description": "The status of the deployment",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                                "name": {
                                    "description": "The current build stage",
                                    "type": "string",
                                    "pattern": "queued|initialize|clone_repo|build|deploy",
                                    "example": "deploy"
                                },
                                "started_on": {
                                    "description": "When the stage started",
                                    "format": "date-time",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "2021-03-09T00:55:03.923456Z"
                                },
                                "ended_on": {
                                    "description": "When the stage ended",
                                    "format": "date-time",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "2021-03-09T00:58:59.045655"
                                },
                                "status": {
                                    "description": "State of the current stage",
                                    "type": "string",
                                    "pattern": "success|idle|active|failure|canceled",
                                    "readOnly": true,
                                    "example": "success"
                                }
                            }
                        }
                    },
                    "build_config": {
                        "type": "object",
                        "example": "{\n  \"build_command\": \"npm run build\",\n  \"destination_dir\": \"build\",\n  \"root_dir\": \"/\",\n  \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n  \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n}",
                        "properties": {
                            "build_command": {
                                "type": "string",
                                "example": "\"npm run build\"",
                                "description": "Command used to build project"
                            },
                            "destination_dir": {
                                "type": "string",
                                "example": "\"build\"",
                                "description": "Output directory of the build"
                            },
                            "root_dir": {
                                "type": "string",
                                "example": "\"/\"",
                                "description": "Directory to run the command"
                            },
                            "web_analytics_tag": {
                                "type": "string",
                                "example": "\"cee1c73f6e4743d0b5e6bb1a0bcaabcc\"",
                                "description": "The classifying tag for analytics"
                            },
                            "web_analytics_token": {
                                "type": "string",
                                "example": "\"021e1057c18547eca7b79f2516f06o7x\"",
                                "description": "The auth token for analytics"
                            }
                        },
                        "readOnly": true,
                        "description": "Configs for the project build process"
                    },
                    "source": {
                        "type": "object",
                        "example": "{\n  \"type\": \"github\",\n  \"config\": {\n    \"owner\": \"cloudflare\",\n    \"repo_name\": \"ninjakittens\",\n    \"production_branch\": \"main\",\n    \"pr_comments_enabled\": true,\n    \"deployments_enabled\": true\n  }\n}",
                        "properties": {
                            "type": {
                                "type": "string",
                                "example": "\"github\"",
                                "description": "Project host type",
                                "readOnly": true
                            },
                            "config": {
                                "type": "object",
                                "example": "{\n  \"owner\": \"cloudflare\",\n  \"repo_name\": \"ninjakittens\",\n  \"production_branch\": \"main\",\n  \"pr_comments_enabled\": true,\n  \"deployments_enabled\": true\n}",
                                "properties": {
                                    "owner": {
                                        "type": "string",
                                        "example": "\"cloudflare\"",
                                        "description": "Project owner username",
                                        "readOnly": true
                                    },
                                    "repo_name": {
                                        "type": "string",
                                        "example": "\"ninjakittens\"",
                                        "description": "Project repository name"
                                    },
                                    "production_branch": {
                                        "type": "string",
                                        "example": "\"main\"",
                                        "description": "Project production branch name"
                                    },
                                    "pr_comments_enabled": {
                                        "type": "boolean",
                                        "example": "true",
                                        "description": "Enable Pages to comment on Pull Requests"
                                    },
                                    "deployments_enabled": {
                                        "type": "boolean",
                                        "example": "true",
                                        "description": "Toggle deployments on this repo"
                                    }
                                }
                            }
                        },
                        "readOnly": true,
                        "description": "Configs for the project source"
                    }
                },
                "description": "Most recent deployment to the repo",
                "readOnly": true,
                "id": "https://api.cloudflare.com/schemas/v4/client/account/pages/deployments.json",
                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                "title": "Pages Deployment",
                "cfExtendedDescription": "**For more detailed documentation on using the API for Pages see the [Pages docs](https://developers.cloudflare.com/pages/).**",
                "cfDeprecations": {
                    "logs_v1_deprecated": {
                        "id": "logs_v1_deprecated",
                        "description": "Use \"Get deployment logs\" instead: https://api.cloudflare.com/#pages-deployment-get-deployment-logs.",
                        "eol": "2022-09-19",
                        "display": true
                    }
                },
                "links": [
                    {
                        "title": "Get deployments",
                        "description": "Fetch a list of deployments from a project",
                        "rel": "self",
                        "href": "accounts/:account_id/pages/projects/:project_name/deployments",
                        "method": "GET",
                        "cfRequestHeaders": {
                            "type": "object",
                            "required": [
                                "X-Auth-Email",
                                "X-Auth-Key"
                            ],
                            "properties": {
                                "X-Auth-Email": {
                                    "description": "Your Cloudflare email",
                                    "type": "string",
                                    "example": "user@example.com"
                                },
                                "X-Auth-Key": {
                                    "description": "Your Cloudflare API key",
                                    "type": "string",
                                    "minLength": 45,
                                    "maxLength": 45,
                                    "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                }
                            }
                        },
                        "targetSchema": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Common schema for all Cloudflare v4 API responses",
                                    "type": "object",
                                    "required": [
                                        "success",
                                        "errors",
                                        "messages",
                                        "result"
                                    ],
                                    "oneOf": [
                                        {
                                            "$comment": "This subschema describes successful responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        true
                                                    ],
                                                    "example": true
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": [
                                                        "object",
                                                        "array",
                                                        "string"
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "$comment": "This subschema describes failure responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        false
                                                    ],
                                                    "example": false
                                                },
                                                "errors": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "minLength": 1,
                                                    "example": [
                                                        {
                                                            "code": 7003,
                                                            "message": "No route for the URI"
                                                        }
                                                    ]
                                                },
                                                "messages": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": "null",
                                                    "enum": [
                                                        null
                                                    ],
                                                    "example": null
                                                }
                                            }
                                        }
                                    ],
                                    "definitions": {
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "properties": {
                                                    "code": {
                                                        "type": "integer",
                                                        "minimum": 1000
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "uniqueItems": true
                                            },
                                            "example": []
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "cfRecurse": ""
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "title": "Get deployment info",
                        "description": "Fetch a deployment",
                        "rel": "self",
                        "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id",
                        "method": "GET",
                        "cfRequestHeaders": {
                            "type": "object",
                            "required": [
                                "X-Auth-Email",
                                "X-Auth-Key"
                            ],
                            "properties": {
                                "X-Auth-Email": {
                                    "description": "Your Cloudflare email",
                                    "type": "string",
                                    "example": "user@example.com"
                                },
                                "X-Auth-Key": {
                                    "description": "Your Cloudflare API key",
                                    "type": "string",
                                    "minLength": 45,
                                    "maxLength": 45,
                                    "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                }
                            }
                        },
                        "targetSchema": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Common schema for all Cloudflare v4 API responses",
                                    "type": "object",
                                    "required": [
                                        "success",
                                        "errors",
                                        "messages",
                                        "result"
                                    ],
                                    "oneOf": [
                                        {
                                            "$comment": "This subschema describes successful responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        true
                                                    ],
                                                    "example": true
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": [
                                                        "object",
                                                        "array",
                                                        "string"
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "$comment": "This subschema describes failure responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        false
                                                    ],
                                                    "example": false
                                                },
                                                "errors": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "minLength": 1,
                                                    "example": [
                                                        {
                                                            "code": 7003,
                                                            "message": "No route for the URI"
                                                        }
                                                    ]
                                                },
                                                "messages": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": "null",
                                                    "enum": [
                                                        null
                                                    ],
                                                    "example": null
                                                }
                                            }
                                        }
                                    ],
                                    "definitions": {
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "properties": {
                                                    "code": {
                                                        "type": "integer",
                                                        "minimum": 1000
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "uniqueItems": true
                                            },
                                            "example": []
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "cfRecurse": ""
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "title": "Get deployment stage logs",
                        "description": "Fetch deploy logs",
                        "rel": "self",
                        "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/history/:deployment_stage_name/logs",
                        "method": "GET",
                        "cfDeprecation": {
                            "id": "logs_v1_deprecated",
                            "description": "Use \"Get deployment logs\" instead: https://api.cloudflare.com/#pages-deployment-get-deployment-logs.",
                            "eol": "2022-09-19",
                            "display": true
                        },
                        "cfRequestHeaders": {
                            "type": "object",
                            "required": [
                                "X-Auth-Email",
                                "X-Auth-Key"
                            ],
                            "properties": {
                                "X-Auth-Email": {
                                    "description": "Your Cloudflare email",
                                    "type": "string",
                                    "example": "user@example.com"
                                },
                                "X-Auth-Key": {
                                    "description": "Your Cloudflare API key",
                                    "type": "string",
                                    "minLength": 45,
                                    "maxLength": 45,
                                    "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                }
                            }
                        },
                        "targetSchema": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Common schema for all Cloudflare v4 API responses",
                                    "type": "object",
                                    "required": [
                                        "success",
                                        "errors",
                                        "messages",
                                        "result"
                                    ],
                                    "oneOf": [
                                        {
                                            "$comment": "This subschema describes successful responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        true
                                                    ],
                                                    "example": true
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": [
                                                        "object",
                                                        "array",
                                                        "string"
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "$comment": "This subschema describes failure responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        false
                                                    ],
                                                    "example": false
                                                },
                                                "errors": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "minLength": 1,
                                                    "example": [
                                                        {
                                                            "code": 7003,
                                                            "message": "No route for the URI"
                                                        }
                                                    ]
                                                },
                                                "messages": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": "null",
                                                    "enum": [
                                                        null
                                                    ],
                                                    "example": null
                                                }
                                            }
                                        }
                                    ],
                                    "definitions": {
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "properties": {
                                                    "code": {
                                                        "type": "integer",
                                                        "minimum": 1000
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "uniqueItems": true
                                            },
                                            "example": []
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "example": {
                                                "name": "build",
                                                "started_on": "2021-04-20T19:35:58.238757Z",
                                                "ended_on": "2021-04-20T19:36:06.38889Z",
                                                "status": "success",
                                                "start": 0,
                                                "end": 37,
                                                "total": 37,
                                                "data": [
                                                    {
                                                        "id": 15,
                                                        "timestamp": "2021-04-20T19:35:59.0749819Z",
                                                        "message": "Installing dependencies"
                                                    },
                                                    {
                                                        "id": 16,
                                                        "timestamp": "2021-04-20T19:35:59.0931208Z",
                                                        "message": "Python version set to 2.7"
                                                    },
                                                    {
                                                        "id": 17,
                                                        "timestamp": "2021-04-20T19:36:02.2369501Z",
                                                        "message": "v12.18.0 is already installed."
                                                    },
                                                    {
                                                        "id": 18,
                                                        "timestamp": "2021-04-20T19:36:02.6028886Z",
                                                        "message": "Now using node v12.18.0 (npm v6.14.4)"
                                                    },
                                                    {
                                                        "id": 19,
                                                        "timestamp": "2021-04-20T19:36:02.624555Z",
                                                        "message": "Started restoring cached build plugins"
                                                    },
                                                    {
                                                        "id": 20,
                                                        "timestamp": "2021-04-20T19:36:02.6340688Z",
                                                        "message": "Finished restoring cached build plugins"
                                                    },
                                                    {
                                                        "id": 21,
                                                        "timestamp": "2021-04-20T19:36:02.963095Z",
                                                        "message": "Attempting ruby version 2.7.1, read from environment"
                                                    },
                                                    {
                                                        "id": 22,
                                                        "timestamp": "2021-04-20T19:36:04.2236084Z",
                                                        "message": "Using ruby version 2.7.1"
                                                    },
                                                    {
                                                        "id": 23,
                                                        "timestamp": "2021-04-20T19:36:04.5450152Z",
                                                        "message": "Using PHP version 5.6"
                                                    },
                                                    {
                                                        "id": 24,
                                                        "timestamp": "2021-04-20T19:36:04.5740509Z",
                                                        "message": "5.2 is already installed."
                                                    },
                                                    {
                                                        "id": 25,
                                                        "timestamp": "2021-04-20T19:36:04.577035Z",
                                                        "message": "Using Swift version 5.2"
                                                    },
                                                    {
                                                        "id": 26,
                                                        "timestamp": "2021-04-20T19:36:04.5771615Z",
                                                        "message": "Installing Hugo 0.54.0"
                                                    },
                                                    {
                                                        "id": 27,
                                                        "timestamp": "2021-04-20T19:36:05.4786868Z",
                                                        "message": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
                                                    },
                                                    {
                                                        "id": 28,
                                                        "timestamp": "2021-04-20T19:36:05.4794366Z",
                                                        "message": "Started restoring cached go cache"
                                                    },
                                                    {
                                                        "id": 29,
                                                        "timestamp": "2021-04-20T19:36:05.481977Z",
                                                        "message": "Finished restoring cached go cache"
                                                    },
                                                    {
                                                        "id": 30,
                                                        "timestamp": "2021-04-20T19:36:05.9049776Z",
                                                        "message": "go version go1.14.4 linux/amd64"
                                                    },
                                                    {
                                                        "id": 31,
                                                        "timestamp": "2021-04-20T19:36:05.9086053Z",
                                                        "message": "go version go1.14.4 linux/amd64"
                                                    },
                                                    {
                                                        "id": 32,
                                                        "timestamp": "2021-04-20T19:36:05.9163568Z",
                                                        "message": "Installing missing commands"
                                                    },
                                                    {
                                                        "id": 33,
                                                        "timestamp": "2021-04-20T19:36:05.9163934Z",
                                                        "message": "Verify run directory"
                                                    },
                                                    {
                                                        "id": 34,
                                                        "timestamp": "2021-04-20T19:36:05.9164636Z",
                                                        "message": "Executing user command: echo \"skipping build step: no build command specified\""
                                                    },
                                                    {
                                                        "id": 35,
                                                        "timestamp": "2021-04-20T19:36:05.9165087Z",
                                                        "message": "skipping build step: no build command specified"
                                                    },
                                                    {
                                                        "id": 36,
                                                        "timestamp": "2021-04-20T19:36:05.917412Z",
                                                        "message": "Finished"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "title": "Get deployment logs",
                        "description": "Fetch deploy logs",
                        "rel": "self",
                        "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/history/logs",
                        "method": "GET",
                        "cfRequestHeaders": {
                            "type": "object",
                            "required": [
                                "X-Auth-Email",
                                "X-Auth-Key"
                            ],
                            "properties": {
                                "X-Auth-Email": {
                                    "description": "Your Cloudflare email",
                                    "type": "string",
                                    "example": "user@example.com"
                                },
                                "X-Auth-Key": {
                                    "description": "Your Cloudflare API key",
                                    "type": "string",
                                    "minLength": 45,
                                    "maxLength": 45,
                                    "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                }
                            }
                        },
                        "targetSchema": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Common schema for all Cloudflare v4 API responses",
                                    "type": "object",
                                    "required": [
                                        "success",
                                        "errors",
                                        "messages",
                                        "result"
                                    ],
                                    "oneOf": [
                                        {
                                            "$comment": "This subschema describes successful responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        true
                                                    ],
                                                    "example": true
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": [
                                                        "object",
                                                        "array",
                                                        "string"
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "$comment": "This subschema describes failure responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        false
                                                    ],
                                                    "example": false
                                                },
                                                "errors": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "minLength": 1,
                                                    "example": [
                                                        {
                                                            "code": 7003,
                                                            "message": "No route for the URI"
                                                        }
                                                    ]
                                                },
                                                "messages": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": "null",
                                                    "enum": [
                                                        null
                                                    ],
                                                    "example": null
                                                }
                                            }
                                        }
                                    ],
                                    "definitions": {
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "properties": {
                                                    "code": {
                                                        "type": "integer",
                                                        "minimum": 1000
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "uniqueItems": true
                                            },
                                            "example": []
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "example": {
                                                "total": 30,
                                                "includes_container_logs": true,
                                                "data": [
                                                    {
                                                        "ts": "2021-04-20T19:35:29.0749819Z",
                                                        "line": "Cloning repository..."
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:30.0749819Z",
                                                        "line": "From https://github.com/cloudflare/example"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:30.0749819Z",
                                                        "line": " * branch            209c5bb11d89533f426b2f8469bcae12fdccf71b -> FETCH_HEAD"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:30.0749819Z",
                                                        "line": ""
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:30.0749819Z",
                                                        "line": "HEAD is now at 209c5bb Update index.html"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:30.0749819Z",
                                                        "line": ""
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:30.0749819Z",
                                                        "line": ""
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:30.0749819Z",
                                                        "line": "Success: Finished cloning repository files"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:59.0749819Z",
                                                        "line": "Installing dependencies"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:35:59.0931208Z",
                                                        "line": "Python version set to 2.7"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:02.2369501Z",
                                                        "line": "v12.18.0 is already installed."
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:02.6028886Z",
                                                        "line": "Now using node v12.18.0 (npm v6.14.4)"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:02.624555Z",
                                                        "line": "Started restoring cached build plugins"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:02.6340688Z",
                                                        "line": "Finished restoring cached build plugins"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:02.963095Z",
                                                        "line": "Attempting ruby version 2.7.1, read from environment"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:04.2236084Z",
                                                        "line": "Using ruby version 2.7.1"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:04.5450152Z",
                                                        "line": "Using PHP version 5.6"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:04.5740509Z",
                                                        "line": "5.2 is already installed."
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:04.577035Z",
                                                        "line": "Using Swift version 5.2"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:04.5771615Z",
                                                        "line": "Installing Hugo 0.54.0"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.4786868Z",
                                                        "line": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.4794366Z",
                                                        "line": "Started restoring cached go cache"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.481977Z",
                                                        "line": "Finished restoring cached go cache"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.9049776Z",
                                                        "line": "go version go1.14.4 linux/amd64"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.9086053Z",
                                                        "line": "go version go1.14.4 linux/amd64"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.9163568Z",
                                                        "line": "Installing missing commands"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.9163934Z",
                                                        "line": "Verify run directory"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.9164636Z",
                                                        "line": "Executing user command: echo \"skipping build step: no build command specified\""
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.9165087Z",
                                                        "line": "skipping build step: no build command specified"
                                                    },
                                                    {
                                                        "ts": "2021-04-20T19:36:05.917412Z",
                                                        "line": "Finished"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "title": "Delete deployment",
                        "description": "Destroy a deployment",
                        "rel": "self",
                        "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id",
                        "method": "DELETE",
                        "cfRequestHeaders": {
                            "type": "object",
                            "required": [
                                "X-Auth-Email",
                                "X-Auth-Key"
                            ],
                            "properties": {
                                "X-Auth-Email": {
                                    "description": "Your Cloudflare email",
                                    "type": "string",
                                    "example": "user@example.com"
                                },
                                "X-Auth-Key": {
                                    "description": "Your Cloudflare API key",
                                    "type": "string",
                                    "minLength": 45,
                                    "maxLength": 45,
                                    "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                }
                            }
                        },
                        "targetSchema": {
                            "example": {
                                "result": null,
                                "success": true,
                                "errors": [],
                                "messages": []
                            }
                        }
                    },
                    {
                        "title": "Create deployment",
                        "description": "Start a new deployment from production. The repo/account must have been authorized through the Pages UI dash before.",
                        "rel": "self",
                        "href": "accounts/:account_id/pages/projects/:project_name/deployments",
                        "method": "POST",
                        "cfRequestHeaders": {
                            "type": "object",
                            "required": [
                                "X-Auth-Email",
                                "X-Auth-Key"
                            ],
                            "properties": {
                                "X-Auth-Email": {
                                    "description": "Your Cloudflare email",
                                    "type": "string",
                                    "example": "user@example.com"
                                },
                                "X-Auth-Key": {
                                    "description": "Your Cloudflare API key",
                                    "type": "string",
                                    "minLength": 45,
                                    "maxLength": 45,
                                    "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                }
                            }
                        },
                        "targetSchema": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Common schema for all Cloudflare v4 API responses",
                                    "type": "object",
                                    "required": [
                                        "success",
                                        "errors",
                                        "messages",
                                        "result"
                                    ],
                                    "oneOf": [
                                        {
                                            "$comment": "This subschema describes successful responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        true
                                                    ],
                                                    "example": true
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": [
                                                        "object",
                                                        "array",
                                                        "string"
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "$comment": "This subschema describes failure responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        false
                                                    ],
                                                    "example": false
                                                },
                                                "errors": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "minLength": 1,
                                                    "example": [
                                                        {
                                                            "code": 7003,
                                                            "message": "No route for the URI"
                                                        }
                                                    ]
                                                },
                                                "messages": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": "null",
                                                    "enum": [
                                                        null
                                                    ],
                                                    "example": null
                                                }
                                            }
                                        }
                                    ],
                                    "definitions": {
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "properties": {
                                                    "code": {
                                                        "type": "integer",
                                                        "minimum": 1000
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "uniqueItems": true
                                            },
                                            "example": []
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "cfRecurse": ""
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "title": "Retry deployment",
                        "description": "Retry a previous deployment",
                        "rel": "self",
                        "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/retry",
                        "method": "POST",
                        "cfRequestHeaders": {
                            "type": "object",
                            "required": [
                                "X-Auth-Email",
                                "X-Auth-Key"
                            ],
                            "properties": {
                                "X-Auth-Email": {
                                    "description": "Your Cloudflare email",
                                    "type": "string",
                                    "example": "user@example.com"
                                },
                                "X-Auth-Key": {
                                    "description": "Your Cloudflare API key",
                                    "type": "string",
                                    "minLength": 45,
                                    "maxLength": 45,
                                    "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                }
                            }
                        },
                        "targetSchema": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Common schema for all Cloudflare v4 API responses",
                                    "type": "object",
                                    "required": [
                                        "success",
                                        "errors",
                                        "messages",
                                        "result"
                                    ],
                                    "oneOf": [
                                        {
                                            "$comment": "This subschema describes successful responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        true
                                                    ],
                                                    "example": true
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": [
                                                        "object",
                                                        "array",
                                                        "string"
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "$comment": "This subschema describes failure responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        false
                                                    ],
                                                    "example": false
                                                },
                                                "errors": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "minLength": 1,
                                                    "example": [
                                                        {
                                                            "code": 7003,
                                                            "message": "No route for the URI"
                                                        }
                                                    ]
                                                },
                                                "messages": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": "null",
                                                    "enum": [
                                                        null
                                                    ],
                                                    "example": null
                                                }
                                            }
                                        }
                                    ],
                                    "definitions": {
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "properties": {
                                                    "code": {
                                                        "type": "integer",
                                                        "minimum": 1000
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "uniqueItems": true
                                            },
                                            "example": []
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "cfRecurse": ""
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "title": "Rollback deployment",
                        "description": "Rollback the production deployment to a previous deploy. You can only rollback to succesful builds on production.",
                        "rel": "self",
                        "href": "accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/rollback",
                        "method": "POST",
                        "cfRequestHeaders": {
                            "type": "object",
                            "required": [
                                "X-Auth-Email",
                                "X-Auth-Key"
                            ],
                            "properties": {
                                "X-Auth-Email": {
                                    "description": "Your Cloudflare email",
                                    "type": "string",
                                    "example": "user@example.com"
                                },
                                "X-Auth-Key": {
                                    "description": "Your Cloudflare API key",
                                    "type": "string",
                                    "minLength": 45,
                                    "maxLength": 45,
                                    "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                                }
                            }
                        },
                        "targetSchema": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Common schema for all Cloudflare v4 API responses",
                                    "type": "object",
                                    "required": [
                                        "success",
                                        "errors",
                                        "messages",
                                        "result"
                                    ],
                                    "oneOf": [
                                        {
                                            "$comment": "This subschema describes successful responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        true
                                                    ],
                                                    "example": true
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": [
                                                        "object",
                                                        "array",
                                                        "string"
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "$comment": "This subschema describes failure responses",
                                            "properties": {
                                                "success": {
                                                    "description": "Whether the API call was successful or not",
                                                    "type": "boolean",
                                                    "enum": [
                                                        false
                                                    ],
                                                    "example": false
                                                },
                                                "errors": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "minLength": 1,
                                                    "example": [
                                                        {
                                                            "code": 7003,
                                                            "message": "No route for the URI"
                                                        }
                                                    ]
                                                },
                                                "messages": {
                                                    "allOf": [
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        }
                                                    ],
                                                    "example": []
                                                },
                                                "result": {
                                                    "type": "null",
                                                    "enum": [
                                                        null
                                                    ],
                                                    "example": null
                                                }
                                            }
                                        }
                                    ],
                                    "definitions": {
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "properties": {
                                                    "code": {
                                                        "type": "integer",
                                                        "minimum": 1000
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "uniqueItems": true
                                            },
                                            "example": []
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "cfRecurse": ""
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "definitions": {
                    "deployment-new-deployment": {
                        "allOf": [
                            {
                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                "description": "Common schema for all Cloudflare v4 API responses",
                                "type": "object",
                                "required": [
                                    "success",
                                    "errors",
                                    "messages",
                                    "result"
                                ],
                                "oneOf": [
                                    {
                                        "$comment": "This subschema describes successful responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    true
                                                ],
                                                "example": true
                                            },
                                            "errors": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "result": {
                                                "type": [
                                                    "object",
                                                    "array",
                                                    "string"
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "$comment": "This subschema describes failure responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    false
                                                ],
                                                "example": false
                                            },
                                            "errors": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "minLength": 1,
                                                "example": [
                                                    {
                                                        "code": 7003,
                                                        "message": "No route for the URI"
                                                    }
                                                ]
                                            },
                                            "messages": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "example": []
                                            },
                                            "result": {
                                                "type": "null",
                                                "enum": [
                                                    null
                                                ],
                                                "example": null
                                            }
                                        }
                                    }
                                ],
                                "definitions": {
                                    "messages": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "code",
                                                "message"
                                            ],
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "minimum": 1000
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "uniqueItems": true
                                        },
                                        "example": []
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "result": {
                                        "cfRecurse": ""
                                    }
                                }
                            }
                        ]
                    },
                    "deployment-response-stage-logs": {
                        "allOf": [
                            {
                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                "description": "Common schema for all Cloudflare v4 API responses",
                                "type": "object",
                                "required": [
                                    "success",
                                    "errors",
                                    "messages",
                                    "result"
                                ],
                                "oneOf": [
                                    {
                                        "$comment": "This subschema describes successful responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    true
                                                ],
                                                "example": true
                                            },
                                            "errors": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "result": {
                                                "type": [
                                                    "object",
                                                    "array",
                                                    "string"
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "$comment": "This subschema describes failure responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    false
                                                ],
                                                "example": false
                                            },
                                            "errors": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "minLength": 1,
                                                "example": [
                                                    {
                                                        "code": 7003,
                                                        "message": "No route for the URI"
                                                    }
                                                ]
                                            },
                                            "messages": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "example": []
                                            },
                                            "result": {
                                                "type": "null",
                                                "enum": [
                                                    null
                                                ],
                                                "example": null
                                            }
                                        }
                                    }
                                ],
                                "definitions": {
                                    "messages": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "code",
                                                "message"
                                            ],
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "minimum": 1000
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "uniqueItems": true
                                        },
                                        "example": []
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "result": {
                                        "type": "object",
                                        "example": {
                                            "name": "build",
                                            "started_on": "2021-04-20T19:35:58.238757Z",
                                            "ended_on": "2021-04-20T19:36:06.38889Z",
                                            "status": "success",
                                            "start": 0,
                                            "end": 37,
                                            "total": 37,
                                            "data": [
                                                {
                                                    "id": 15,
                                                    "timestamp": "2021-04-20T19:35:59.0749819Z",
                                                    "message": "Installing dependencies"
                                                },
                                                {
                                                    "id": 16,
                                                    "timestamp": "2021-04-20T19:35:59.0931208Z",
                                                    "message": "Python version set to 2.7"
                                                },
                                                {
                                                    "id": 17,
                                                    "timestamp": "2021-04-20T19:36:02.2369501Z",
                                                    "message": "v12.18.0 is already installed."
                                                },
                                                {
                                                    "id": 18,
                                                    "timestamp": "2021-04-20T19:36:02.6028886Z",
                                                    "message": "Now using node v12.18.0 (npm v6.14.4)"
                                                },
                                                {
                                                    "id": 19,
                                                    "timestamp": "2021-04-20T19:36:02.624555Z",
                                                    "message": "Started restoring cached build plugins"
                                                },
                                                {
                                                    "id": 20,
                                                    "timestamp": "2021-04-20T19:36:02.6340688Z",
                                                    "message": "Finished restoring cached build plugins"
                                                },
                                                {
                                                    "id": 21,
                                                    "timestamp": "2021-04-20T19:36:02.963095Z",
                                                    "message": "Attempting ruby version 2.7.1, read from environment"
                                                },
                                                {
                                                    "id": 22,
                                                    "timestamp": "2021-04-20T19:36:04.2236084Z",
                                                    "message": "Using ruby version 2.7.1"
                                                },
                                                {
                                                    "id": 23,
                                                    "timestamp": "2021-04-20T19:36:04.5450152Z",
                                                    "message": "Using PHP version 5.6"
                                                },
                                                {
                                                    "id": 24,
                                                    "timestamp": "2021-04-20T19:36:04.5740509Z",
                                                    "message": "5.2 is already installed."
                                                },
                                                {
                                                    "id": 25,
                                                    "timestamp": "2021-04-20T19:36:04.577035Z",
                                                    "message": "Using Swift version 5.2"
                                                },
                                                {
                                                    "id": 26,
                                                    "timestamp": "2021-04-20T19:36:04.5771615Z",
                                                    "message": "Installing Hugo 0.54.0"
                                                },
                                                {
                                                    "id": 27,
                                                    "timestamp": "2021-04-20T19:36:05.4786868Z",
                                                    "message": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
                                                },
                                                {
                                                    "id": 28,
                                                    "timestamp": "2021-04-20T19:36:05.4794366Z",
                                                    "message": "Started restoring cached go cache"
                                                },
                                                {
                                                    "id": 29,
                                                    "timestamp": "2021-04-20T19:36:05.481977Z",
                                                    "message": "Finished restoring cached go cache"
                                                },
                                                {
                                                    "id": 30,
                                                    "timestamp": "2021-04-20T19:36:05.9049776Z",
                                                    "message": "go version go1.14.4 linux/amd64"
                                                },
                                                {
                                                    "id": 31,
                                                    "timestamp": "2021-04-20T19:36:05.9086053Z",
                                                    "message": "go version go1.14.4 linux/amd64"
                                                },
                                                {
                                                    "id": 32,
                                                    "timestamp": "2021-04-20T19:36:05.9163568Z",
                                                    "message": "Installing missing commands"
                                                },
                                                {
                                                    "id": 33,
                                                    "timestamp": "2021-04-20T19:36:05.9163934Z",
                                                    "message": "Verify run directory"
                                                },
                                                {
                                                    "id": 34,
                                                    "timestamp": "2021-04-20T19:36:05.9164636Z",
                                                    "message": "Executing user command: echo \"skipping build step: no build command specified\""
                                                },
                                                {
                                                    "id": 35,
                                                    "timestamp": "2021-04-20T19:36:05.9165087Z",
                                                    "message": "skipping build step: no build command specified"
                                                },
                                                {
                                                    "id": 36,
                                                    "timestamp": "2021-04-20T19:36:05.917412Z",
                                                    "message": "Finished"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "deployment-response-logs": {
                        "allOf": [
                            {
                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                "description": "Common schema for all Cloudflare v4 API responses",
                                "type": "object",
                                "required": [
                                    "success",
                                    "errors",
                                    "messages",
                                    "result"
                                ],
                                "oneOf": [
                                    {
                                        "$comment": "This subschema describes successful responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    true
                                                ],
                                                "example": true
                                            },
                                            "errors": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "result": {
                                                "type": [
                                                    "object",
                                                    "array",
                                                    "string"
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "$comment": "This subschema describes failure responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    false
                                                ],
                                                "example": false
                                            },
                                            "errors": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "minLength": 1,
                                                "example": [
                                                    {
                                                        "code": 7003,
                                                        "message": "No route for the URI"
                                                    }
                                                ]
                                            },
                                            "messages": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "example": []
                                            },
                                            "result": {
                                                "type": "null",
                                                "enum": [
                                                    null
                                                ],
                                                "example": null
                                            }
                                        }
                                    }
                                ],
                                "definitions": {
                                    "messages": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "code",
                                                "message"
                                            ],
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "minimum": 1000
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "uniqueItems": true
                                        },
                                        "example": []
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "result": {
                                        "type": "object",
                                        "example": {
                                            "total": 30,
                                            "includes_container_logs": true,
                                            "data": [
                                                {
                                                    "ts": "2021-04-20T19:35:29.0749819Z",
                                                    "line": "Cloning repository..."
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:30.0749819Z",
                                                    "line": "From https://github.com/cloudflare/example"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:30.0749819Z",
                                                    "line": " * branch            209c5bb11d89533f426b2f8469bcae12fdccf71b -> FETCH_HEAD"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:30.0749819Z",
                                                    "line": ""
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:30.0749819Z",
                                                    "line": "HEAD is now at 209c5bb Update index.html"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:30.0749819Z",
                                                    "line": ""
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:30.0749819Z",
                                                    "line": ""
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:30.0749819Z",
                                                    "line": "Success: Finished cloning repository files"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:59.0749819Z",
                                                    "line": "Installing dependencies"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:35:59.0931208Z",
                                                    "line": "Python version set to 2.7"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:02.2369501Z",
                                                    "line": "v12.18.0 is already installed."
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:02.6028886Z",
                                                    "line": "Now using node v12.18.0 (npm v6.14.4)"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:02.624555Z",
                                                    "line": "Started restoring cached build plugins"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:02.6340688Z",
                                                    "line": "Finished restoring cached build plugins"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:02.963095Z",
                                                    "line": "Attempting ruby version 2.7.1, read from environment"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:04.2236084Z",
                                                    "line": "Using ruby version 2.7.1"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:04.5450152Z",
                                                    "line": "Using PHP version 5.6"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:04.5740509Z",
                                                    "line": "5.2 is already installed."
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:04.577035Z",
                                                    "line": "Using Swift version 5.2"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:04.5771615Z",
                                                    "line": "Installing Hugo 0.54.0"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.4786868Z",
                                                    "line": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.4794366Z",
                                                    "line": "Started restoring cached go cache"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.481977Z",
                                                    "line": "Finished restoring cached go cache"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.9049776Z",
                                                    "line": "go version go1.14.4 linux/amd64"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.9086053Z",
                                                    "line": "go version go1.14.4 linux/amd64"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.9163568Z",
                                                    "line": "Installing missing commands"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.9163934Z",
                                                    "line": "Verify run directory"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.9164636Z",
                                                    "line": "Executing user command: echo \"skipping build step: no build command specified\""
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.9165087Z",
                                                    "line": "skipping build step: no build command specified"
                                                },
                                                {
                                                    "ts": "2021-04-20T19:36:05.917412Z",
                                                    "line": "Finished"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "deployment-list-response": {
                        "allOf": [
                            {
                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                "description": "Common schema for all Cloudflare v4 API responses",
                                "type": "object",
                                "required": [
                                    "success",
                                    "errors",
                                    "messages",
                                    "result"
                                ],
                                "oneOf": [
                                    {
                                        "$comment": "This subschema describes successful responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    true
                                                ],
                                                "example": true
                                            },
                                            "errors": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "result": {
                                                "type": [
                                                    "object",
                                                    "array",
                                                    "string"
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "$comment": "This subschema describes failure responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    false
                                                ],
                                                "example": false
                                            },
                                            "errors": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "minLength": 1,
                                                "example": [
                                                    {
                                                        "code": 7003,
                                                        "message": "No route for the URI"
                                                    }
                                                ]
                                            },
                                            "messages": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "example": []
                                            },
                                            "result": {
                                                "type": "null",
                                                "enum": [
                                                    null
                                                ],
                                                "example": null
                                            }
                                        }
                                    }
                                ],
                                "definitions": {
                                    "messages": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "code",
                                                "message"
                                            ],
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "minimum": 1000
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "uniqueItems": true
                                        },
                                        "example": []
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "result_info": {
                                        "type": "object",
                                        "properties": {
                                            "page": {
                                                "example": 1
                                            },
                                            "per_page": {
                                                "example": 100
                                            },
                                            "count": {
                                                "example": 1
                                            },
                                            "total_count": {
                                                "example": 1
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "result": {
                                        "type": "array",
                                        "cfRecurse": ""
                                    }
                                }
                            }
                        ]
                    },
                    "deployment-response-details": {
                        "allOf": [
                            {
                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                "description": "Common schema for all Cloudflare v4 API responses",
                                "type": "object",
                                "required": [
                                    "success",
                                    "errors",
                                    "messages",
                                    "result"
                                ],
                                "oneOf": [
                                    {
                                        "$comment": "This subschema describes successful responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    true
                                                ],
                                                "example": true
                                            },
                                            "errors": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "properties": {
                                                        "code": {
                                                            "type": "integer",
                                                            "minimum": 1000
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniqueItems": true
                                                },
                                                "example": []
                                            },
                                            "result": {
                                                "type": [
                                                    "object",
                                                    "array",
                                                    "string"
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "$comment": "This subschema describes failure responses",
                                        "properties": {
                                            "success": {
                                                "description": "Whether the API call was successful or not",
                                                "type": "boolean",
                                                "enum": [
                                                    false
                                                ],
                                                "example": false
                                            },
                                            "errors": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "minLength": 1,
                                                "example": [
                                                    {
                                                        "code": 7003,
                                                        "message": "No route for the URI"
                                                    }
                                                ]
                                            },
                                            "messages": {
                                                "allOf": [
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                ],
                                                "example": []
                                            },
                                            "result": {
                                                "type": "null",
                                                "enum": [
                                                    null
                                                ],
                                                "example": null
                                            }
                                        }
                                    }
                                ],
                                "definitions": {
                                    "messages": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "code",
                                                "message"
                                            ],
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "minimum": 1000
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "uniqueItems": true
                                        },
                                        "example": []
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "result": {
                                        "cfRecurse": ""
                                    }
                                }
                            }
                        ]
                    },
                    "account_identifier": {
                        "id": "https://api.cloudflare.com/schemas/v4/common/identifier.json",
                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                        "description": "API item identifier tag",
                        "type": "string",
                        "maxLength": 32,
                        "readOnly": true,
                        "example": "9a7806061c88ada191ed06f989cc3dac"
                    },
                    "build_config": {
                        "description": "Configs for the project build process",
                        "type": "object",
                        "properties": {
                            "build_command": {
                                "description": "Command used to build project",
                                "type": "string",
                                "example": "npm run build"
                            },
                            "destination_dir": {
                                "description": "Output directory of the build",
                                "type": "string",
                                "example": "build"
                            },
                            "root_dir": {
                                "description": "Directory to run the command",
                                "type": "string",
                                "example": "/"
                            },
                            "web_analytics_tag": {
                                "description": "The classifying tag for analytics",
                                "type": "string",
                                "example": "cee1c73f6e4743d0b5e6bb1a0bcaabcc"
                            },
                            "web_analytics_token": {
                                "description": "The auth token for analytics",
                                "type": "string",
                                "example": "021e1057c18547eca7b79f2516f06o7x"
                            }
                        }
                    },
                    "stage": {
                        "description": "The status of the deployment",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                            "name": {
                                "description": "The current build stage",
                                "type": "string",
                                "pattern": "queued|initialize|clone_repo|build|deploy",
                                "example": "deploy"
                            },
                            "started_on": {
                                "description": "When the stage started",
                                "format": "date-time",
                                "type": "string",
                                "readOnly": true,
                                "example": "2021-03-09T00:55:03.923456Z"
                            },
                            "ended_on": {
                                "description": "When the stage ended",
                                "format": "date-time",
                                "type": "string",
                                "readOnly": true,
                                "example": "2021-03-09T00:58:59.045655"
                            },
                            "status": {
                                "description": "State of the current stage",
                                "type": "string",
                                "pattern": "success|idle|active|failure|canceled",
                                "readOnly": true,
                                "example": "success"
                            }
                        }
                    }
                },
                "cfLinkErrors": {
                    "8000000": "An unknown error occurred",
                    "8000001": "A project already exists for this repo",
                    "8000002": "A project with this name already exists",
                    "8000003": "Invalid project name",
                    "8000004": "Account not authorized for the requested repo",
                    "8000005": "Required field missing",
                    "8000006": "Unable to parse request",
                    "8000007": "Project not found",
                    "8000008": "No installation found",
                    "8000009": "Deployment not found",
                    "8000010": "User is not authorized for provided GitHub Installation ID",
                    "8000011": "User has no linked GitHub accounts matching the provided username",
                    "8000012": "User has no linked GitHub repositories matching the provided name",
                    "8000013": "Authorization failed",
                    "8000014": "Deployment type not found",
                    "8000015": "Domain is invalid",
                    "8000016": "Unicode domains are not supported",
                    "8000017": "An operation is already in progress for this domain",
                    "8000018": "Domain is unavailable",
                    "8000019": "Project has reached the maximum number of allowed domains",
                    "8000020": "No deployment stage found for the provided name",
                    "8000021": "Domain not found",
                    "8000022": "Invalid PATCH operation requested",
                    "8000023": "Attempt to add duplicate environment variable, or replace or delete nonexistent variable",
                    "8000024": "Invalid list options provided",
                    "8000025": "Domain is not registered",
                    "8000026": "Coming soon",
                    "8000027": "Too many projects",
                    "8000028": "Must delete custom domains before deleting project",
                    "8000029": "Subdomain is unavailable",
                    "8000030": "Subdomain is blocked",
                    "8000031": "Unable to cancel completed deployment",
                    "8000032": "Unable to find a branch with the provided name",
                    "8000033": "Production branch must be set",
                    "8000034": "Cannot delete active production deployment",
                    "8000035": "Cannot delete aliased deployment",
                    "8000036": "Account has been blocked"
                }
            }
        },
        "required_props": [],
        "optional_props": [
            "name",
            "id",
            "created_on",
            "subdomain",
            "domains",
            "source",
            "build_config",
            "deployment_configs",
            "latest_deployment",
            "canonical_deployment"
        ],
        "objects": [],
        "example": "{\n  \"name\": \"NextJS Blog\",\n  \"id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n  \"created_on\": \"2017-01-01T00:00:00Z\",\n  \"subdomain\": \"helloworld.pages.dev\",\n  \"domains\": [\n    \"customdomain.com\",\n    \"customdomain.org\"\n  ],\n  \"source\": {\n    \"type\": \"github\",\n    \"config\": {\n      \"owner\": \"cloudflare\",\n      \"repo_name\": \"ninjakittens\",\n      \"production_branch\": \"main\",\n      \"pr_comments_enabled\": true,\n      \"deployments_enabled\": true\n    }\n  },\n  \"build_config\": {\n    \"build_command\": \"npm run build\",\n    \"destination_dir\": \"build\",\n    \"root_dir\": \"/\",\n    \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n    \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n  },\n  \"deployment_configs\": {\n    \"preview\": {\n      \"env_vars\": {\n        \"BUILD_VERSION\": {\n          \"value\": \"3.3\"\n        }\n      }\n    },\n    \"production\": {\n      \"env_vars\": {\n        \"BUILD_VERSION\": {\n          \"value\": \"3.3\"\n        }\n      }\n    }\n  },\n  \"latest_deployment\": {\n    \"id\": \"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\n    \"short_id\": \"f64788e9\",\n    \"project_id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n    \"project_name\": \"ninjakittens\",\n    \"environment\": \"preview\",\n    \"url\": \"https://f64788e9.ninjakittens.pages.dev\",\n    \"created_on\": \"2021-03-09T00:55:03.923456Z\",\n    \"modified_on\": \"2021-03-09T00:58:59.045655\",\n    \"aliases\": [\n      \"https://branchname.projectname.pages.dev\"\n    ],\n    \"latest_stage\": {\n      \"name\": \"deploy\",\n      \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n      \"ended_on\": \"2021-03-09T00:58:59.045655\",\n      \"status\": \"success\"\n    },\n    \"env_vars\": {\n      \"BUILD_VERSION\": {\n        \"value\": \"3.3\"\n      },\n      \"ENV\": {\n        \"value\": \"STAGING\"\n      }\n    },\n    \"deployment_trigger\": {\n      \"type\": \"ad_hoc\",\n      \"metadata\": {\n        \"branch\": \"main\",\n        \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n        \"commit_message\": \"Update index.html\"\n      }\n    },\n    \"stages\": [\n      {\n        \"name\": \"queued\",\n        \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n        \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n        \"status\": \"active\"\n      },\n      {\n        \"name\": \"initialize\",\n        \"started_on\": null,\n        \"ended_on\": null,\n        \"status\": \"idle\"\n      },\n      {\n        \"name\": \"clone_repo\",\n        \"started_on\": null,\n        \"ended_on\": null,\n        \"status\": \"idle\"\n      },\n      {\n        \"name\": \"build\",\n        \"started_on\": null,\n        \"ended_on\": null,\n        \"status\": \"idle\"\n      },\n      {\n        \"name\": \"deploy\",\n        \"started_on\": null,\n        \"ended_on\": null,\n        \"status\": \"idle\"\n      }\n    ],\n    \"build_config\": {\n      \"build_command\": \"npm run build\",\n      \"destination_dir\": \"build\",\n      \"root_dir\": \"/\",\n      \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n      \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n    },\n    \"source\": {\n      \"type\": \"github\",\n      \"config\": {\n        \"owner\": \"cloudflare\",\n        \"repo_name\": \"ninjakittens\",\n        \"production_branch\": \"main\",\n        \"pr_comments_enabled\": true,\n        \"deployments_enabled\": true\n      }\n    }\n  },\n  \"canonical_deployment\": {\n    \"id\": \"f64788e9-fccd-4d4a-a28a-cb84f88f6\",\n    \"short_id\": \"f64788e9\",\n    \"project_id\": \"7b162ea7-7367-4d67-bcde-1160995d5\",\n    \"project_name\": \"ninjakittens\",\n    \"environment\": \"preview\",\n    \"url\": \"https://f64788e9.ninjakittens.pages.dev\",\n    \"created_on\": \"2021-03-09T00:55:03.923456Z\",\n    \"modified_on\": \"2021-03-09T00:58:59.045655\",\n    \"aliases\": [\n      \"https://branchname.projectname.pages.dev\"\n    ],\n    \"latest_stage\": {\n      \"name\": \"deploy\",\n      \"started_on\": \"2021-03-09T00:55:03.923456Z\",\n      \"ended_on\": \"2021-03-09T00:58:59.045655\",\n      \"status\": \"success\"\n    },\n    \"env_vars\": {\n      \"BUILD_VERSION\": {\n        \"value\": \"3.3\"\n      },\n      \"ENV\": {\n        \"value\": \"STAGING\"\n      }\n    },\n    \"deployment_trigger\": {\n      \"type\": \"ad_hoc\",\n      \"metadata\": {\n        \"branch\": \"main\",\n        \"commit_hash\": \"ad9ccd918a81025731e10e40267e11273a263421\",\n        \"commit_message\": \"Update index.html\"\n      }\n    },\n    \"stages\": [\n      {\n        \"name\": \"queued\",\n        \"started_on\": \"2021-06-03T15:38:15.608194Z\",\n        \"ended_on\": \"2021-06-03T15:39:03.134378Z\",\n        \"status\": \"active\"\n      },\n      {\n        \"name\": \"initialize\",\n        \"started_on\": null,\n        \"ended_on\": null,\n        \"status\": \"idle\"\n      },\n      {\n        \"name\": \"clone_repo\",\n        \"started_on\": null,\n        \"ended_on\": null,\n        \"status\": \"idle\"\n      },\n      {\n        \"name\": \"build\",\n        \"started_on\": null,\n        \"ended_on\": null,\n        \"status\": \"idle\"\n      },\n      {\n        \"name\": \"deploy\",\n        \"started_on\": null,\n        \"ended_on\": null,\n        \"status\": \"idle\"\n      }\n    ],\n    \"build_config\": {\n      \"build_command\": \"npm run build\",\n      \"destination_dir\": \"build\",\n      \"root_dir\": \"/\",\n      \"web_analytics_tag\": \"cee1c73f6e4743d0b5e6bb1a0bcaabcc\",\n      \"web_analytics_token\": \"021e1057c18547eca7b79f2516f06o7x\"\n    },\n    \"source\": {\n      \"type\": \"github\",\n      \"config\": {\n        \"owner\": \"cloudflare\",\n        \"repo_name\": \"ninjakittens\",\n        \"production_branch\": \"main\",\n        \"pr_comments_enabled\": true,\n        \"deployments_enabled\": true\n      }\n    }\n  }\n}",
        "title": "Pages Project",
        "description": "A Pages project represents a website deployed to Cloudflare's edge."
    },
    "_generated_on": "2022-06-23T18:27:26.094711",
    "_generated_from": "https://api.cloudflare.com/apidocs-static/app-15eee93638a35d88ae02.js"
}