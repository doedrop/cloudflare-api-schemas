{
    "id": "https://api.cloudflare.com/schemas/v4/client/account/pcaps/pcaps.json",
    "title": "Magic PCAP collection",
    "description": "APIs for collecting account PCAPs inside Magic Transit",
    "type": "object",
    "links": [
        {
            "title": "List PCAP requests",
            "description": "List all PCAP requests for an account.",
            "rel": "self",
            "href": "accounts/{#/definitions/account_identifier}/pcaps",
            "method": "GET",
            "cfOwnership": "magic-firewall",
            "cfPlanAvailability": {
                "free": false,
                "pro": false,
                "business": false,
                "enterprise": true
            },
            "html_id": "magic-pcap-collection-list-pcap-requests",
            "uri": "accounts/:account_identifier/pcaps",
            "curl": "curl -X GET \"https://api.cloudflare.com/client/v4/accounts/01a7362d577a6c3019a474fd6f485823/pcaps\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": [\n    {\n      \"id\": \"66802ca5668e47a2b82c2e6746e45037\",\n      \"submitted\": \"2020-01-01T08:00:00Z\",\n      \"filter_v1\": {\n        \"destination_address\": \"1.2.3.4\",\n        \"source_address\": \"1.2.3.4\",\n        \"source_port\": 123,\n        \"destination_port\": 80,\n        \"protocol\": 6\n      },\n      \"time_limit\": 300,\n      \"status\": \"success\",\n      \"type\": \"simple\",\n      \"system\": \"magic-transit\"\n    }\n  ]\n}"
        },
        {
            "title": "Create Simple PCAP request",
            "description": "Create new PCAP request for account.",
            "rel": "self",
            "href": "accounts/{#/definitions/account_identifier}/pcaps",
            "method": "POST",
            "cfOwnership": "magic-firewall",
            "cfPlanAvailability": {
                "free": false,
                "pro": false,
                "business": false,
                "enterprise": true
            },
            "html_id": "magic-pcap-collection-create-simple-pcap-request",
            "uri": "accounts/:account_identifier/pcaps",
            "curl": "curl -X POST \"https://api.cloudflare.com/client/v4/accounts/01a7362d577a6c3019a474fd6f485823/pcaps\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\" \\\n     --data '{\"filter_v1\":{\"destination_address\":\"1.2.3.4\",\"source_address\":\"1.2.3.4\",\"source_port\":123,\"destination_port\":80,\"protocol\":6},\"time_limit\":300,\"packet_limit\":10000,\"type\":\"simple\",\"system\":\"magic-transit\"}'",
            "parameters": {
                "_formatter": {
                    "jsonMediaType": {}
                },
                "all_props": {
                    "filter_v1": {
                        "type": "object",
                        "example": "{\n  \"destination_address\": \"1.2.3.4\",\n  \"source_address\": \"1.2.3.4\",\n  \"source_port\": 123,\n  \"destination_port\": 80,\n  \"protocol\": 6\n}",
                        "properties": {
                            "destination_address": {
                                "type": "string",
                                "example": "\"1.2.3.4\"",
                                "description": "Destination IP address to filter on."
                            },
                            "source_address": {
                                "type": "string",
                                "example": "\"1.2.3.4\"",
                                "description": "Source IP address to filter on."
                            },
                            "source_port": {
                                "type": "number",
                                "example": "123",
                                "description": "Source port to filter on."
                            },
                            "destination_port": {
                                "type": "number",
                                "example": "80",
                                "description": "Destination port to filter on."
                            },
                            "protocol": {
                                "type": "number",
                                "example": "6",
                                "description": "Protocol number to filter on."
                            }
                        },
                        "description": "PCAP filter. Leave fields blank or empty to specify any."
                    },
                    "time_limit": {
                        "type": "number",
                        "example": "300",
                        "description": "Duration of PCAP in number of seconds.",
                        "minimum": 1,
                        "maximum": 300
                    },
                    "packet_limit": {
                        "type": "number",
                        "example": "10000",
                        "description": "Limit of number of packets contained in a PCAP.",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "type": {
                        "type": "string",
                        "example": "\"simple\"",
                        "description": "The type of pcap to collect. Simple will captured sampled packets, while full will capture entire payloads and non-sampled packets.",
                        "enum": [
                            "simple",
                            "full"
                        ]
                    },
                    "system": {
                        "type": "string",
                        "example": "\"magic-transit\"",
                        "description": "The system used to collect pcaps.",
                        "enum": [
                            "magic-transit"
                        ]
                    }
                },
                "required_props": [
                    "time_limit",
                    "packet_limit",
                    "type",
                    "system"
                ],
                "optional_props": [
                    "filter_v1"
                ],
                "objects": [],
                "example": "{\n  \"filter_v1\": {\n    \"destination_address\": \"1.2.3.4\",\n    \"source_address\": \"1.2.3.4\",\n    \"source_port\": 123,\n    \"destination_port\": 80,\n    \"protocol\": 6\n  },\n  \"time_limit\": 300,\n  \"packet_limit\": 10000,\n  \"type\": \"simple\",\n  \"system\": \"magic-transit\"\n}"
            },
            "response": "{\n  \"id\": \"66802ca5668e47a2b82c2e6746e45037\",\n  \"submitted\": \"2020-01-01T08:00:00Z\",\n  \"filter_v1\": {\n    \"destination_address\": \"1.2.3.4\",\n    \"source_address\": \"1.2.3.4\",\n    \"source_port\": 123,\n    \"destination_port\": 80,\n    \"protocol\": 6\n  },\n  \"time_limit\": 300,\n  \"status\": \"success\",\n  \"type\": \"simple\",\n  \"system\": \"magic-transit\"\n}"
        },
        {
            "title": "Create Full PCAP request",
            "description": "Create new PCAP request for account.",
            "rel": "self",
            "href": "accounts/{#/definitions/account_identifier}/pcaps",
            "method": "POST",
            "cfOwnership": "magic-firewall",
            "cfPlanAvailability": {
                "free": false,
                "pro": false,
                "business": false,
                "enterprise": true
            },
            "html_id": "magic-pcap-collection-create-full-pcap-request",
            "uri": "accounts/:account_identifier/pcaps",
            "curl": "curl -X POST \"https://api.cloudflare.com/client/v4/accounts/01a7362d577a6c3019a474fd6f485823/pcaps\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\" \\\n     --data '{\"filter_v1\":{\"destination_address\":\"1.2.3.4\",\"source_address\":\"1.2.3.4\",\"source_port\":123,\"destination_port\":80,\"protocol\":6},\"time_limit\":300,\"packet_limit\":10000,\"type\":\"simple\",\"system\":\"magic-transit\",\"byte_limit\":500000,\"colo_name\":\"ord02\",\"destination_conf\":\"s3://pcaps-bucket?region=us-east-1\"}'",
            "parameters": {
                "_formatter": {
                    "jsonMediaType": {}
                },
                "all_props": {
                    "filter_v1": {
                        "type": "object",
                        "example": "{\n  \"destination_address\": \"1.2.3.4\",\n  \"source_address\": \"1.2.3.4\",\n  \"source_port\": 123,\n  \"destination_port\": 80,\n  \"protocol\": 6\n}",
                        "properties": {
                            "destination_address": {
                                "type": "string",
                                "example": "\"1.2.3.4\"",
                                "description": "Destination IP address to filter on."
                            },
                            "source_address": {
                                "type": "string",
                                "example": "\"1.2.3.4\"",
                                "description": "Source IP address to filter on."
                            },
                            "source_port": {
                                "type": "number",
                                "example": "123",
                                "description": "Source port to filter on."
                            },
                            "destination_port": {
                                "type": "number",
                                "example": "80",
                                "description": "Destination port to filter on."
                            },
                            "protocol": {
                                "type": "number",
                                "example": "6",
                                "description": "Protocol number to filter on."
                            }
                        },
                        "description": "PCAP filter. Leave fields blank or empty to specify any."
                    },
                    "time_limit": {
                        "type": "number",
                        "example": "300",
                        "description": "Duration of PCAP in number of seconds.",
                        "minimum": 1,
                        "maximum": 300
                    },
                    "packet_limit": {
                        "type": "number",
                        "example": "10000",
                        "description": "Limit of number of packets contained in a PCAP.",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "type": {
                        "type": "string",
                        "example": "\"simple\"",
                        "description": "The type of pcap to collect. Simple will captured sampled packets, while full will capture entire payloads and non-sampled packets.",
                        "enum": [
                            "simple",
                            "full"
                        ]
                    },
                    "system": {
                        "type": "string",
                        "example": "\"magic-transit\"",
                        "description": "The system used to collect pcaps.",
                        "enum": [
                            "magic-transit"
                        ]
                    },
                    "byte_limit": {
                        "type": "number",
                        "example": "500000",
                        "description": "Maximum number of bytes to capture. Optional. Full PCAP type only.",
                        "minimum": 1,
                        "maximum": 1000000000
                    },
                    "colo_name": {
                        "type": "string",
                        "example": "\"ord02\"",
                        "description": "Colo name to capture from. Full PCAP type only."
                    },
                    "destination_conf": {
                        "type": "string",
                        "example": "\"s3://pcaps-bucket?region=us-east-1\"",
                        "description": "Full URI of bucket. Full PCAP type only."
                    }
                },
                "required_props": [
                    "time_limit",
                    "type",
                    "system",
                    "colo_name",
                    "destination_conf"
                ],
                "optional_props": [
                    "filter_v1",
                    "packet_limit",
                    "byte_limit"
                ],
                "objects": [],
                "example": "{\n  \"filter_v1\": {\n    \"destination_address\": \"1.2.3.4\",\n    \"source_address\": \"1.2.3.4\",\n    \"source_port\": 123,\n    \"destination_port\": 80,\n    \"protocol\": 6\n  },\n  \"time_limit\": 300,\n  \"packet_limit\": 10000,\n  \"type\": \"simple\",\n  \"system\": \"magic-transit\",\n  \"byte_limit\": 500000,\n  \"colo_name\": \"ord02\",\n  \"destination_conf\": \"s3://pcaps-bucket?region=us-east-1\"\n}"
            },
            "response": "{\n  \"id\": \"66802ca5668e47a2b82c2e6746e45037\",\n  \"submitted\": \"2020-01-01T08:00:00Z\",\n  \"filter_v1\": {\n    \"destination_address\": \"1.2.3.4\",\n    \"source_address\": \"1.2.3.4\",\n    \"source_port\": 123,\n    \"destination_port\": 80,\n    \"protocol\": 6\n  },\n  \"time_limit\": 300,\n  \"status\": \"success\",\n  \"error_message\": \"No packets matched the filter in the time limit given. Please modify the filter or try again.\",\n  \"type\": \"simple\",\n  \"system\": \"magic-transit\",\n  \"byte_limit\": 500000,\n  \"colo_name\": \"ord02\",\n  \"destination_conf\": \"s3://pcaps-bucket?region=us-east-1\"\n}"
        },
        {
            "title": "Get PCAP request",
            "description": "Get information for a PCAP request by id.",
            "rel": "self",
            "href": "accounts/{#/definitions/account_identifier}/pcaps/{#/definitions/identifier}",
            "method": "GET",
            "cfOwnership": "magic-firewall",
            "cfPlanAvailability": {
                "free": false,
                "pro": false,
                "business": false,
                "enterprise": true
            },
            "html_id": "magic-pcap-collection-get-pcap-request",
            "uri": "accounts/:account_identifier/pcaps/:identifier",
            "curl": "curl -X GET \"https://api.cloudflare.com/client/v4/accounts/01a7362d577a6c3019a474fd6f485823/pcaps/69cd1e104af3e6ed3cb344f263fd0d5a\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"id\": \"66802ca5668e47a2b82c2e6746e45037\",\n    \"submitted\": \"2020-01-01T08:00:00Z\",\n    \"filter_v1\": {\n      \"destination_address\": \"1.2.3.4\",\n      \"source_address\": \"1.2.3.4\",\n      \"source_port\": 123,\n      \"destination_port\": 80,\n      \"protocol\": 6\n    },\n    \"time_limit\": 300,\n    \"status\": \"success\",\n    \"type\": \"simple\",\n    \"system\": \"magic-transit\"\n  }\n}"
        },
        {
            "title": "Download Simple PCAP",
            "description": "Download PCAP information into a file. Response is a binary PCAP file.",
            "rel": "self",
            "href": "accounts/{#/definitions/account_identifier}/pcaps/{#/definitions/identifier}/download",
            "method": "GET",
            "cfRequestHeaders": {
                "type": "object",
                "required": [
                    "X-Auth-Email",
                    "X-Auth-Key"
                ],
                "properties": {
                    "X-Auth-Email": {
                        "description": "Your Cloudflare email",
                        "type": "string",
                        "example": "user@example.com"
                    },
                    "X-Auth-Key": {
                        "description": "Your Cloudflare API key",
                        "type": "string",
                        "minLength": 45,
                        "maxLength": 45,
                        "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                    },
                    "Content-Type": {
                        "type": "string",
                        "enum": [
                            "application/vnd.tcpdump.pcap"
                        ],
                        "example": "application/vnd.tcpdump.pcap"
                    }
                }
            },
            "encType": "application/vnd.tcpdump.pcap",
            "cfOwnership": "magic-firewall",
            "cfPlanAvailability": {
                "free": false,
                "pro": false,
                "business": false,
                "enterprise": true
            },
            "html_id": "magic-pcap-collection-download-simple-pcap",
            "uri": "accounts/:account_identifier/pcaps/:identifier/download",
            "curl": "curl -X GET \"https://api.cloudflare.com/client/v4/accounts/01a7362d577a6c3019a474fd6f485823/pcaps/69cd1e104af3e6ed3cb344f263fd0d5a/download\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/vnd.tcpdump.pcap\""
        },
        {
            "title": "List PCAPs Bucket Ownership",
            "description": "List all buckets configured for use with PCAPs API.",
            "rel": "self",
            "href": "accounts/{#/definitions/account_identifier}/pcaps/ownership",
            "method": "GET",
            "cfOwnership": "magic-firewall",
            "cfPlanAvailability": {
                "free": false,
                "pro": false,
                "business": false,
                "enterprise": true
            },
            "html_id": "magic-pcap-collection-list-pcaps-bucket-ownership",
            "uri": "accounts/:account_identifier/pcaps/ownership",
            "curl": "curl -X GET \"https://api.cloudflare.com/client/v4/accounts/01a7362d577a6c3019a474fd6f485823/pcaps/ownership\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": []\n}"
        },
        {
            "title": "Add Bucket For Use with PCAPs",
            "description": "Add AWS or GCP bucket for use with PCAPs API.",
            "rel": "self",
            "href": "accounts/{#/definitions/account_identifier}/pcaps/ownership",
            "method": "POST",
            "cfOwnership": "magic-firewall",
            "cfPlanAvailability": {
                "free": false,
                "pro": false,
                "business": false,
                "enterprise": true
            },
            "html_id": "magic-pcap-collection-add-bucket-for-use-with-pcaps",
            "uri": "accounts/:account_identifier/pcaps/ownership",
            "curl": "curl -X POST \"https://api.cloudflare.com/client/v4/accounts/01a7362d577a6c3019a474fd6f485823/pcaps/ownership\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
            "response": "{\n  \"destination_conf\": \"s3://pcaps-bucket?region=us-east-1\"\n}"
        },
        {
            "title": "Validate Bucket For Use with PCAPs",
            "description": "Validate bucket that has been added to PCAPs API.",
            "rel": "self",
            "href": "accounts/{#/definitions/account_identifier}/pcaps/ownership/validate",
            "method": "POST",
            "cfOwnership": "magic-firewall",
            "cfPlanAvailability": {
                "free": false,
                "pro": false,
                "business": false,
                "enterprise": true
            },
            "html_id": "magic-pcap-collection-validate-bucket-for-use-with-pcaps",
            "uri": "accounts/:account_identifier/pcaps/ownership/validate",
            "curl": "curl -X POST \"https://api.cloudflare.com/client/v4/accounts/01a7362d577a6c3019a474fd6f485823/pcaps/ownership/validate\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
            "response": "{\n  \"destination_conf\": \"s3://pcaps-bucket?region=us-east-1\",\n  \"ownership_challenge\": \"ownership-challenge-9883874ecac311ec8475433579a6bf5f.txt\"\n}"
        }
    ],
    "html_id": "magic-pcap-collection",
    "object_definition": {
        "_formatter": {
            "jsonMediaType": {}
        },
        "all_props": {
            "identifier": {
                "type": "string",
                "example": "\"69cd1e104af3e6ed3cb344f263fd0d5a\"",
                "id": "https://api.cloudflare.com/schemas/v4/common/identifier.json",
                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                "description": "API item identifier tag",
                "maxLength": 32,
                "readOnly": true
            },
            "account_identifier": {
                "type": "string",
                "example": "\"01a7362d577a6c3019a474fd6f485823\"",
                "id": "https://api.cloudflare.com/schemas/v4/common/identifier.json",
                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                "description": "API item identifier tag",
                "maxLength": 32,
                "readOnly": true
            },
            "pcaps_request_simple": {
                "type": "object",
                "example": "{\n  \"filter_v1\": {\n    \"destination_address\": \"1.2.3.4\",\n    \"source_address\": \"1.2.3.4\",\n    \"source_port\": 123,\n    \"destination_port\": 80,\n    \"protocol\": 6\n  },\n  \"time_limit\": 300,\n  \"packet_limit\": 10000,\n  \"type\": \"simple\",\n  \"system\": \"magic-transit\"\n}",
                "properties": {
                    "filter_v1": {
                        "type": "object",
                        "example": "{\n  \"destination_address\": \"1.2.3.4\",\n  \"source_address\": \"1.2.3.4\",\n  \"source_port\": 123,\n  \"destination_port\": 80,\n  \"protocol\": 6\n}",
                        "properties": {
                            "destination_address": {
                                "type": "string",
                                "example": "\"1.2.3.4\"",
                                "description": "Destination IP address to filter on."
                            },
                            "source_address": {
                                "type": "string",
                                "example": "\"1.2.3.4\"",
                                "description": "Source IP address to filter on."
                            },
                            "source_port": {
                                "type": "number",
                                "example": "123",
                                "description": "Source port to filter on."
                            },
                            "destination_port": {
                                "type": "number",
                                "example": "80",
                                "description": "Destination port to filter on."
                            },
                            "protocol": {
                                "type": "number",
                                "example": "6",
                                "description": "Protocol number to filter on."
                            }
                        },
                        "description": "PCAP filter. Leave fields blank or empty to specify any."
                    },
                    "time_limit": {
                        "type": "number",
                        "example": "300",
                        "description": "Duration of PCAP in number of seconds.",
                        "minimum": 1,
                        "maximum": 300
                    },
                    "packet_limit": {
                        "type": "number",
                        "example": "10000",
                        "description": "Limit of number of packets contained in a PCAP.",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "type": {
                        "type": "string",
                        "example": "\"simple\"",
                        "description": "The type of pcap to collect. Simple will captured sampled packets, while full will capture entire payloads and non-sampled packets.",
                        "enum": [
                            "simple",
                            "full"
                        ]
                    },
                    "system": {
                        "type": "string",
                        "example": "\"magic-transit\"",
                        "description": "The system used to collect pcaps.",
                        "enum": [
                            "magic-transit"
                        ]
                    }
                },
                "required": [
                    "time_limit",
                    "packet_limit",
                    "type",
                    "system"
                ]
            },
            "pcaps_response_simple": {
                "type": "object",
                "example": "{\n  \"id\": \"66802ca5668e47a2b82c2e6746e45037\",\n  \"submitted\": \"2020-01-01T08:00:00Z\",\n  \"filter_v1\": {\n    \"destination_address\": \"1.2.3.4\",\n    \"source_address\": \"1.2.3.4\",\n    \"source_port\": 123,\n    \"destination_port\": 80,\n    \"protocol\": 6\n  },\n  \"time_limit\": 300,\n  \"status\": \"success\",\n  \"type\": \"simple\",\n  \"system\": \"magic-transit\"\n}",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "\"66802ca5668e47a2b82c2e6746e45037\"",
                        "description": "The ID of the PCAP",
                        "minLength": 32,
                        "maxLength": 32
                    },
                    "submitted": {
                        "type": "string",
                        "example": "\"2020-01-01T08:00:00Z\"",
                        "description": "The RFC 3339 timestamp the item was created."
                    },
                    "filter_v1": {
                        "type": "object",
                        "example": "{\n  \"destination_address\": \"1.2.3.4\",\n  \"source_address\": \"1.2.3.4\",\n  \"source_port\": 123,\n  \"destination_port\": 80,\n  \"protocol\": 6\n}",
                        "properties": {
                            "destination_address": {
                                "type": "string",
                                "example": "\"1.2.3.4\"",
                                "description": "Destination IP address to filter on."
                            },
                            "source_address": {
                                "type": "string",
                                "example": "\"1.2.3.4\"",
                                "description": "Source IP address to filter on."
                            },
                            "source_port": {
                                "type": "number",
                                "example": "123",
                                "description": "Source port to filter on."
                            },
                            "destination_port": {
                                "type": "number",
                                "example": "80",
                                "description": "Destination port to filter on."
                            },
                            "protocol": {
                                "type": "number",
                                "example": "6",
                                "description": "Protocol number to filter on."
                            }
                        },
                        "description": "PCAP filter. Leave fields blank or empty to specify any."
                    },
                    "time_limit": {
                        "type": "number",
                        "example": "300",
                        "description": "Duration of PCAP in number of seconds.",
                        "minimum": 1,
                        "maximum": 300
                    },
                    "status": {
                        "type": "string",
                        "example": "\"success\"",
                        "description": "The status of the pcap request.",
                        "enum": [
                            "unknown",
                            "success",
                            "pending",
                            "running",
                            "conversion_pending",
                            "conversion_running",
                            "complete",
                            "failed"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "example": "\"simple\"",
                        "description": "The type of pcap to collect. Simple will captured sampled packets, while full will capture entire payloads and non-sampled packets.",
                        "enum": [
                            "simple",
                            "full"
                        ]
                    },
                    "system": {
                        "type": "string",
                        "example": "\"magic-transit\"",
                        "description": "The system used to collect pcaps.",
                        "enum": [
                            "magic-transit"
                        ]
                    }
                }
            },
            "pcaps_request_full": {
                "type": "object",
                "example": "{\n  \"filter_v1\": {\n    \"destination_address\": \"1.2.3.4\",\n    \"source_address\": \"1.2.3.4\",\n    \"source_port\": 123,\n    \"destination_port\": 80,\n    \"protocol\": 6\n  },\n  \"time_limit\": 300,\n  \"packet_limit\": 10000,\n  \"type\": \"simple\",\n  \"system\": \"magic-transit\",\n  \"byte_limit\": 500000,\n  \"colo_name\": \"ord02\",\n  \"destination_conf\": \"s3://pcaps-bucket?region=us-east-1\"\n}",
                "properties": {
                    "filter_v1": {
                        "type": "object",
                        "example": "{\n  \"destination_address\": \"1.2.3.4\",\n  \"source_address\": \"1.2.3.4\",\n  \"source_port\": 123,\n  \"destination_port\": 80,\n  \"protocol\": 6\n}",
                        "properties": {
                            "destination_address": {
                                "type": "string",
                                "example": "\"1.2.3.4\"",
                                "description": "Destination IP address to filter on."
                            },
                            "source_address": {
                                "type": "string",
                                "example": "\"1.2.3.4\"",
                                "description": "Source IP address to filter on."
                            },
                            "source_port": {
                                "type": "number",
                                "example": "123",
                                "description": "Source port to filter on."
                            },
                            "destination_port": {
                                "type": "number",
                                "example": "80",
                                "description": "Destination port to filter on."
                            },
                            "protocol": {
                                "type": "number",
                                "example": "6",
                                "description": "Protocol number to filter on."
                            }
                        },
                        "description": "PCAP filter. Leave fields blank or empty to specify any."
                    },
                    "time_limit": {
                        "type": "number",
                        "example": "300",
                        "description": "Duration of PCAP in number of seconds.",
                        "minimum": 1,
                        "maximum": 300
                    },
                    "packet_limit": {
                        "type": "number",
                        "example": "10000",
                        "description": "Limit of number of packets contained in a PCAP.",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "type": {
                        "type": "string",
                        "example": "\"simple\"",
                        "description": "The type of pcap to collect. Simple will captured sampled packets, while full will capture entire payloads and non-sampled packets.",
                        "enum": [
                            "simple",
                            "full"
                        ]
                    },
                    "system": {
                        "type": "string",
                        "example": "\"magic-transit\"",
                        "description": "The system used to collect pcaps.",
                        "enum": [
                            "magic-transit"
                        ]
                    },
                    "byte_limit": {
                        "type": "number",
                        "example": "500000",
                        "description": "Maximum number of bytes to capture. Optional. Full PCAP type only.",
                        "minimum": 1,
                        "maximum": 1000000000
                    },
                    "colo_name": {
                        "type": "string",
                        "example": "\"ord02\"",
                        "description": "Colo name to capture from. Full PCAP type only."
                    },
                    "destination_conf": {
                        "type": "string",
                        "example": "\"s3://pcaps-bucket?region=us-east-1\"",
                        "description": "Full URI of bucket. Full PCAP type only."
                    }
                },
                "required": [
                    "time_limit",
                    "type",
                    "system",
                    "colo_name",
                    "destination_conf"
                ]
            },
            "pcaps_response_full": {
                "type": "object",
                "example": "{\n  \"id\": \"66802ca5668e47a2b82c2e6746e45037\",\n  \"submitted\": \"2020-01-01T08:00:00Z\",\n  \"filter_v1\": {\n    \"destination_address\": \"1.2.3.4\",\n    \"source_address\": \"1.2.3.4\",\n    \"source_port\": 123,\n    \"destination_port\": 80,\n    \"protocol\": 6\n  },\n  \"time_limit\": 300,\n  \"status\": \"success\",\n  \"error_message\": \"No packets matched the filter in the time limit given. Please modify the filter or try again.\",\n  \"type\": \"simple\",\n  \"system\": \"magic-transit\",\n  \"byte_limit\": 500000,\n  \"colo_name\": \"ord02\",\n  \"destination_conf\": \"s3://pcaps-bucket?region=us-east-1\"\n}",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "\"66802ca5668e47a2b82c2e6746e45037\"",
                        "description": "The ID of the PCAP",
                        "minLength": 32,
                        "maxLength": 32
                    },
                    "submitted": {
                        "type": "string",
                        "example": "\"2020-01-01T08:00:00Z\"",
                        "description": "The RFC 3339 timestamp the item was created."
                    },
                    "filter_v1": {
                        "type": "object",
                        "example": "{\n  \"destination_address\": \"1.2.3.4\",\n  \"source_address\": \"1.2.3.4\",\n  \"source_port\": 123,\n  \"destination_port\": 80,\n  \"protocol\": 6\n}",
                        "properties": {
                            "destination_address": {
                                "type": "string",
                                "example": "\"1.2.3.4\"",
                                "description": "Destination IP address to filter on."
                            },
                            "source_address": {
                                "type": "string",
                                "example": "\"1.2.3.4\"",
                                "description": "Source IP address to filter on."
                            },
                            "source_port": {
                                "type": "number",
                                "example": "123",
                                "description": "Source port to filter on."
                            },
                            "destination_port": {
                                "type": "number",
                                "example": "80",
                                "description": "Destination port to filter on."
                            },
                            "protocol": {
                                "type": "number",
                                "example": "6",
                                "description": "Protocol number to filter on."
                            }
                        },
                        "description": "PCAP filter. Leave fields blank or empty to specify any."
                    },
                    "time_limit": {
                        "type": "number",
                        "example": "300",
                        "description": "Duration of PCAP in number of seconds.",
                        "minimum": 1,
                        "maximum": 300
                    },
                    "status": {
                        "type": "string",
                        "example": "\"success\"",
                        "description": "The status of the pcap request.",
                        "enum": [
                            "unknown",
                            "success",
                            "pending",
                            "running",
                            "conversion_pending",
                            "conversion_running",
                            "complete",
                            "failed"
                        ]
                    },
                    "error_message": {
                        "type": "string",
                        "example": "\"No packets matched the filter in the time limit given. Please modify the filter or try again.\"",
                        "description": "A textual description of the error when gathering a Packet Capture. Full PCAP type only"
                    },
                    "type": {
                        "type": "string",
                        "example": "\"simple\"",
                        "description": "The type of pcap to collect. Simple will captured sampled packets, while full will capture entire payloads and non-sampled packets.",
                        "enum": [
                            "simple",
                            "full"
                        ]
                    },
                    "system": {
                        "type": "string",
                        "example": "\"magic-transit\"",
                        "description": "The system used to collect pcaps.",
                        "enum": [
                            "magic-transit"
                        ]
                    },
                    "byte_limit": {
                        "type": "number",
                        "example": "500000",
                        "description": "Maximum number of bytes to capture. Optional. Full PCAP type only.",
                        "minimum": 1,
                        "maximum": 1000000000
                    },
                    "colo_name": {
                        "type": "string",
                        "example": "\"ord02\"",
                        "description": "Colo name to capture from. Full PCAP type only."
                    },
                    "destination_conf": {
                        "type": "string",
                        "example": "\"s3://pcaps-bucket?region=us-east-1\"",
                        "description": "Full URI of bucket. Full PCAP type only."
                    }
                }
            }
        },
        "required_props": [],
        "optional_props": [
            "identifier",
            "account_identifier",
            "pcaps_request_simple",
            "pcaps_response_simple",
            "pcaps_request_full",
            "pcaps_response_full"
        ],
        "objects": [],
        "example": "{\n  \"identifier\": \"69cd1e104af3e6ed3cb344f263fd0d5a\",\n  \"account_identifier\": \"01a7362d577a6c3019a474fd6f485823\",\n  \"pcaps_request_simple\": {\n    \"filter_v1\": {\n      \"destination_address\": \"1.2.3.4\",\n      \"source_address\": \"1.2.3.4\",\n      \"source_port\": 123,\n      \"destination_port\": 80,\n      \"protocol\": 6\n    },\n    \"time_limit\": 300,\n    \"packet_limit\": 10000,\n    \"type\": \"simple\",\n    \"system\": \"magic-transit\"\n  },\n  \"pcaps_response_simple\": {\n    \"id\": \"66802ca5668e47a2b82c2e6746e45037\",\n    \"submitted\": \"2020-01-01T08:00:00Z\",\n    \"filter_v1\": {\n      \"destination_address\": \"1.2.3.4\",\n      \"source_address\": \"1.2.3.4\",\n      \"source_port\": 123,\n      \"destination_port\": 80,\n      \"protocol\": 6\n    },\n    \"time_limit\": 300,\n    \"status\": \"success\",\n    \"type\": \"simple\",\n    \"system\": \"magic-transit\"\n  },\n  \"pcaps_request_full\": {\n    \"filter_v1\": {\n      \"destination_address\": \"1.2.3.4\",\n      \"source_address\": \"1.2.3.4\",\n      \"source_port\": 123,\n      \"destination_port\": 80,\n      \"protocol\": 6\n    },\n    \"time_limit\": 300,\n    \"packet_limit\": 10000,\n    \"type\": \"simple\",\n    \"system\": \"magic-transit\",\n    \"byte_limit\": 500000,\n    \"colo_name\": \"ord02\",\n    \"destination_conf\": \"s3://pcaps-bucket?region=us-east-1\"\n  },\n  \"pcaps_response_full\": {\n    \"id\": \"66802ca5668e47a2b82c2e6746e45037\",\n    \"submitted\": \"2020-01-01T08:00:00Z\",\n    \"filter_v1\": {\n      \"destination_address\": \"1.2.3.4\",\n      \"source_address\": \"1.2.3.4\",\n      \"source_port\": 123,\n      \"destination_port\": 80,\n      \"protocol\": 6\n    },\n    \"time_limit\": 300,\n    \"status\": \"success\",\n    \"error_message\": \"No packets matched the filter in the time limit given. Please modify the filter or try again.\",\n    \"type\": \"simple\",\n    \"system\": \"magic-transit\",\n    \"byte_limit\": 500000,\n    \"colo_name\": \"ord02\",\n    \"destination_conf\": \"s3://pcaps-bucket?region=us-east-1\"\n  }\n}",
        "title": "Magic PCAP collection",
        "description": "APIs for collecting account PCAPs inside Magic Transit"
    },
    "_generated_on": "2022-06-23T18:27:26.124634",
    "_generated_from": "https://api.cloudflare.com/apidocs-static/app-15eee93638a35d88ae02.js"
}