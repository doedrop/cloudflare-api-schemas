{
    "id": "https://api.cloudflare.com/schemas/v4/client/user/organization.json",
    "title": "User's Organizations",
    "description": "A list of organizations this user is a member of",
    "cfExtendedDescription": "Please use equivalent `/accounts` API endpoints. Account APIs provide a broader range of features and are backwards-compatible to organization APIs.",
    "type": "object",
    "links": [
        {
            "title": "List Organizations",
            "description": "List organizations the user is associated with",
            "rel": "collection",
            "href": "user/organizations",
            "method": "GET",
            "cfOwnership": "iam",
            "cfPlanAvailability": {
                "free": false,
                "pro": false,
                "business": false,
                "enterprise": true
            },
            "html_id": "user-s-organizations-list-organizations",
            "uri": "user/organizations",
            "curl": "curl -X GET \"https://api.cloudflare.com/client/v4/user/organizations?status=member&name=Cloudflare, Inc.&page=1&per_page=20&order=status&direction=desc&match=all\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
            "parameters": {
                "_formatter": {
                    "jsonMediaType": {}
                },
                "all_props": {
                    "status": {
                        "type": "string",
                        "example": "\"member\"",
                        "enum": [
                            "member",
                            "invited"
                        ],
                        "description": "Whether or not the user is a member of the organization or has an inivitation pending"
                    },
                    "name": {
                        "type": "string",
                        "example": "\"Cloudflare, Inc.\"",
                        "description": "Organization Name",
                        "maxLength": 100
                    },
                    "page": {
                        "type": "number",
                        "example": "1",
                        "minimum": 1,
                        "default": 1,
                        "description": "Page number of paginated results"
                    },
                    "per_page": {
                        "type": "number",
                        "example": "20",
                        "minimum": 5,
                        "maximum": 50,
                        "default": 20,
                        "description": "Number of organizations per page"
                    },
                    "order": {
                        "type": "string",
                        "example": "\"status\"",
                        "enum": [
                            "id",
                            "name",
                            "status"
                        ],
                        "description": "Field to order organizations by"
                    },
                    "direction": {
                        "type": "string",
                        "example": "\"desc\"",
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "description": "Direction to order organizations"
                    },
                    "match": {
                        "type": "string",
                        "example": "\"all\"",
                        "enum": [
                            "any",
                            "all"
                        ],
                        "default": "all",
                        "description": "Whether to match all search requirements or at least one (any)"
                    }
                },
                "required_props": [],
                "optional_props": [
                    "status",
                    "name",
                    "page",
                    "per_page",
                    "order",
                    "direction",
                    "match"
                ],
                "objects": [],
                "example": "{\n  \"status\": \"member\",\n  \"name\": \"Cloudflare, Inc.\",\n  \"page\": 1,\n  \"per_page\": 20,\n  \"order\": \"status\",\n  \"direction\": \"desc\",\n  \"match\": \"all\"\n}"
            },
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": [\n    {\n      \"id\": \"01a7362d577a6c3019a474fd6f485823\",\n      \"name\": \"Cloudflare, Inc.\",\n      \"status\": \"member\",\n      \"permissions\": [\n        \"#zones:read\"\n      ],\n      \"roles\": [\n        \"All Privileges - Super Administrator\"\n      ]\n    }\n  ]\n}"
        },
        {
            "title": "Organization Details",
            "description": "Get a specific organization the user is associated with",
            "rel": "self",
            "href": "user/organizations/{#/definitions/identifier}",
            "method": "GET",
            "cfOwnership": "iam",
            "cfPlanAvailability": {
                "free": false,
                "pro": false,
                "business": false,
                "enterprise": true
            },
            "html_id": "user-s-organizations-organization-details",
            "uri": "user/organizations/:identifier",
            "curl": "curl -X GET \"https://api.cloudflare.com/client/v4/user/organizations/01a7362d577a6c3019a474fd6f485823\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"id\": \"01a7362d577a6c3019a474fd6f485823\",\n    \"name\": \"Cloudflare, Inc.\",\n    \"status\": \"member\",\n    \"permissions\": [\n      \"#zones:read\"\n    ],\n    \"roles\": [\n      \"All Privileges - Super Administrator\"\n    ]\n  }\n}"
        },
        {
            "title": "Leave Organization",
            "description": "Remove association to an organization",
            "rel": "self",
            "href": "user/organizations/{#/definitions/identifier}",
            "method": "DELETE",
            "cfOwnership": "iam",
            "cfPlanAvailability": {
                "free": false,
                "pro": false,
                "business": false,
                "enterprise": true
            },
            "html_id": "user-s-organizations-leave-organization",
            "uri": "user/organizations/:identifier",
            "curl": "curl -X DELETE \"https://api.cloudflare.com/client/v4/user/organizations/01a7362d577a6c3019a474fd6f485823\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
            "response": "{\n  \"id\": \"01a7362d577a6c3019a474fd6f485823\"\n}"
        }
    ],
    "html_id": "user-s-organizations",
    "object_definition": {
        "_formatter": {
            "jsonMediaType": {}
        },
        "all_props": {
            "id": {
                "type": "string",
                "example": "\"01a7362d577a6c3019a474fd6f485823\"",
                "description": "Organization identifier tag",
                "maxLength": 32,
                "readOnly": true
            },
            "name": {
                "type": "string",
                "example": "\"Cloudflare, Inc.\"",
                "description": "Organization Name",
                "maxLength": 100
            },
            "status": {
                "type": "string",
                "example": "\"member\"",
                "enum": [
                    "member",
                    "invited"
                ],
                "description": "Whether or not the user is a member of the organization or has an inivitation pending"
            },
            "permissions": {
                "type": "array",
                "example": "[\n  \"#zones:read\"\n]",
                "description": "Access permissions for this User",
                "readOnly": true,
                "items": {
                    "type": "string",
                    "maxLength": 160,
                    "example": "#zones:read"
                }
            },
            "roles": {
                "type": "array",
                "example": "[\n  \"All Privileges - Super Administrator\"\n]",
                "description": "List of role names for the User at the Organization",
                "readOnly": true,
                "items": {
                    "type": "string",
                    "maxLength": 120,
                    "example": "All Privileges - Super Administrator"
                }
            }
        },
        "required_props": [],
        "optional_props": [
            "id",
            "name",
            "status",
            "permissions",
            "roles"
        ],
        "objects": [],
        "example": "{\n  \"id\": \"01a7362d577a6c3019a474fd6f485823\",\n  \"name\": \"Cloudflare, Inc.\",\n  \"status\": \"member\",\n  \"permissions\": [\n    \"#zones:read\"\n  ],\n  \"roles\": [\n    \"All Privileges - Super Administrator\"\n  ]\n}",
        "title": "User's Organizations",
        "description": "A list of organizations this user is a member of"
    },
    "_generated_on": "2022-06-23T18:27:26.183926",
    "_generated_from": "https://api.cloudflare.com/apidocs-static/app-15eee93638a35d88ae02.js"
}