{
    "id": "https://api.cloudflare.com/schemas/v4/client/user/loadbalancing/monitor.json",
    "title": "Load Balancer Monitors",
    "description": "User-level Monitor configurations. Monitors define whether we check over HTTP, HTTPS or TCP, the status code(s) we look for, the interval at which we check, timeouts and response body matching.",
    "type": "object",
    "links": [
        {
            "title": "List Monitors",
            "description": "List configured monitors for a user",
            "rel": "collection",
            "href": "user/load_balancers/monitors",
            "method": "GET",
            "cfOwnership": "load_balancer",
            "html_id": "load-balancer-monitors-list-monitors",
            "uri": "user/load_balancers/monitors",
            "curl": "curl -X GET \"https://api.cloudflare.com/client/v4/user/load_balancers/monitors\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": [\n    {\n      \"id\": \"f1aba936b94213e5b8dca0c0dbf1f9cc\",\n      \"created_on\": \"2014-01-01T05:20:00.12345Z\",\n      \"modified_on\": \"2014-01-01T05:20:00.12345Z\",\n      \"type\": \"https\",\n      \"description\": \"Login page monitor\",\n      \"method\": \"GET\",\n      \"path\": \"/health\",\n      \"header\": {\n        \"Host\": [\n          \"example.com\"\n        ],\n        \"X-App-ID\": [\n          \"abc123\"\n        ]\n      },\n      \"port\": 8080,\n      \"timeout\": 3,\n      \"retries\": 0,\n      \"interval\": 90,\n      \"expected_body\": \"alive\",\n      \"expected_codes\": \"2xx\",\n      \"follow_redirects\": true,\n      \"allow_insecure\": true\n    }\n  ]\n}"
        },
        {
            "title": "Create Monitor",
            "description": "Create a configured monitor",
            "rel": "collection",
            "href": "user/load_balancers/monitors",
            "method": "POST",
            "cfOwnership": "load_balancer",
            "html_id": "load-balancer-monitors-create-monitor",
            "uri": "user/load_balancers/monitors",
            "curl": "curl -X POST \"https://api.cloudflare.com/client/v4/user/load_balancers/monitors\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\" \\\n     --data '{\"type\":\"https\",\"description\":\"Login page monitor\",\"method\":\"GET\",\"path\":\"/health\",\"header\":{\"Host\":[\"example.com\"],\"X-App-ID\":[\"abc123\"]},\"port\":8080,\"timeout\":3,\"retries\":0,\"interval\":90,\"expected_body\":\"alive\",\"expected_codes\":\"2xx\",\"follow_redirects\":true,\"allow_insecure\":true,\"probe_zone\":\"example.com\"}'",
            "parameters": {
                "_formatter": {
                    "jsonMediaType": {}
                },
                "all_props": {
                    "type": {
                        "type": "string",
                        "example": "\"https\"",
                        "description": "The protocol to use for the health check. Currently supported protocols are 'HTTP','HTTPS', 'TCP', 'ICMP-PING', 'UDP-ICMP', and 'SMTP'.",
                        "enum": [
                            "http",
                            "https",
                            "tcp",
                            "udp_icmp",
                            "icmp_ping",
                            "smtp"
                        ],
                        "default": "http"
                    },
                    "description": {
                        "type": "string",
                        "example": "\"Login page monitor\"",
                        "description": "Object description"
                    },
                    "method": {
                        "type": "string",
                        "example": "\"GET\"",
                        "description": "The method to use for the health check. This defaults to 'GET' for HTTP/HTTPS based checks and 'connection_established' for TCP based health checks.",
                        "default": "GET"
                    },
                    "path": {
                        "type": "string",
                        "example": "\"/health\"",
                        "description": "The endpoint path to health check against. This parameter is only valid for HTTP and HTTPS monitors.",
                        "default": "/"
                    },
                    "header": {
                        "type": "object",
                        "example": "{\n  \"Host\": [\n    \"example.com\"\n  ],\n  \"X-App-ID\": [\n    \"abc123\"\n  ]\n}",
                        "description": "The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden. This parameter is only valid for HTTP and HTTPS monitors."
                    },
                    "port": {
                        "type": "integer",
                        "example": "8080",
                        "description": "Port number to connect to for the health check. Required for TCP, UDP, and SMTP checks. HTTP and HTTPS checks should only define the port when using a non-standard port (HTTP: default 80, HTTPS: default 443).",
                        "default": 0
                    },
                    "timeout": {
                        "type": "integer",
                        "example": "3",
                        "description": "The timeout (in seconds) before marking the health check as failed",
                        "default": 5
                    },
                    "retries": {
                        "type": "integer",
                        "example": "0",
                        "description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.",
                        "default": 2
                    },
                    "interval": {
                        "type": "integer",
                        "example": "90",
                        "description": "The interval between each health check. Shorter intervals may improve failover time, but will increase load on the origins as we check from multiple locations.",
                        "default": 60
                    },
                    "expected_body": {
                        "type": "string",
                        "example": "\"alive\"",
                        "description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. This parameter is only valid for HTTP and HTTPS monitors."
                    },
                    "expected_codes": {
                        "type": "string",
                        "example": "\"2xx\"",
                        "description": "The expected HTTP response code or code range of the health check. This parameter is only valid for HTTP and HTTPS monitors.",
                        "default": "200"
                    },
                    "follow_redirects": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Follow redirects if returned by the origin. This parameter is only valid for HTTP and HTTPS monitors.",
                        "default": false
                    },
                    "allow_insecure": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Do not validate the certificate when monitor use HTTPS. This parameter is currently only valid for HTTP and HTTPS monitors.",
                        "default": false
                    },
                    "probe_zone": {
                        "type": "string",
                        "example": "\"example.com\"",
                        "description": "Assign this monitor to emulate the specified zone while probing. This parameter is only valid for HTTP and HTTPS monitors."
                    }
                },
                "required_props": [
                    "expected_codes"
                ],
                "optional_props": [
                    "type",
                    "description",
                    "method",
                    "path",
                    "header",
                    "port",
                    "timeout",
                    "retries",
                    "interval",
                    "expected_body",
                    "follow_redirects",
                    "allow_insecure",
                    "probe_zone"
                ],
                "objects": [],
                "example": "{\n  \"type\": \"https\",\n  \"description\": \"Login page monitor\",\n  \"method\": \"GET\",\n  \"path\": \"/health\",\n  \"header\": {\n    \"Host\": [\n      \"example.com\"\n    ],\n    \"X-App-ID\": [\n      \"abc123\"\n    ]\n  },\n  \"port\": 8080,\n  \"timeout\": 3,\n  \"retries\": 0,\n  \"interval\": 90,\n  \"expected_body\": \"alive\",\n  \"expected_codes\": \"2xx\",\n  \"follow_redirects\": true,\n  \"allow_insecure\": true,\n  \"probe_zone\": \"example.com\"\n}"
            },
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"id\": \"f1aba936b94213e5b8dca0c0dbf1f9cc\",\n    \"created_on\": \"2014-01-01T05:20:00.12345Z\",\n    \"modified_on\": \"2014-01-01T05:20:00.12345Z\",\n    \"type\": \"https\",\n    \"description\": \"Login page monitor\",\n    \"method\": \"GET\",\n    \"path\": \"/health\",\n    \"header\": {\n      \"Host\": [\n        \"example.com\"\n      ],\n      \"X-App-ID\": [\n        \"abc123\"\n      ]\n    },\n    \"port\": 8080,\n    \"timeout\": 3,\n    \"retries\": 0,\n    \"interval\": 90,\n    \"expected_body\": \"alive\",\n    \"expected_codes\": \"2xx\",\n    \"follow_redirects\": true,\n    \"allow_insecure\": true\n  }\n}"
        },
        {
            "title": "Monitor Details",
            "description": "List a single configured monitor for a user",
            "rel": "self",
            "href": "user/load_balancers/monitors/{#/definitions/identifier}",
            "method": "GET",
            "cfOwnership": "load_balancer",
            "html_id": "load-balancer-monitors-monitor-details",
            "uri": "user/load_balancers/monitors/:identifier",
            "curl": "curl -X GET \"https://api.cloudflare.com/client/v4/user/load_balancers/monitors/f1aba936b94213e5b8dca0c0dbf1f9cc\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"id\": \"f1aba936b94213e5b8dca0c0dbf1f9cc\",\n    \"created_on\": \"2014-01-01T05:20:00.12345Z\",\n    \"modified_on\": \"2014-01-01T05:20:00.12345Z\",\n    \"type\": \"https\",\n    \"description\": \"Login page monitor\",\n    \"method\": \"GET\",\n    \"path\": \"/health\",\n    \"header\": {\n      \"Host\": [\n        \"example.com\"\n      ],\n      \"X-App-ID\": [\n        \"abc123\"\n      ]\n    },\n    \"port\": 8080,\n    \"timeout\": 3,\n    \"retries\": 0,\n    \"interval\": 90,\n    \"expected_body\": \"alive\",\n    \"expected_codes\": \"2xx\",\n    \"follow_redirects\": true,\n    \"allow_insecure\": true\n  }\n}"
        },
        {
            "title": "Update Monitor",
            "description": "Modify a configured monitor",
            "rel": "self",
            "href": "user/load_balancers/monitors/{#/definitions/identifier}",
            "method": "PUT",
            "cfOwnership": "load_balancer",
            "html_id": "load-balancer-monitors-update-monitor",
            "uri": "user/load_balancers/monitors/:identifier",
            "curl": "curl -X PUT \"https://api.cloudflare.com/client/v4/user/load_balancers/monitors/f1aba936b94213e5b8dca0c0dbf1f9cc\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\" \\\n     --data '{\"type\":\"https\",\"description\":\"Login page monitor\",\"method\":\"GET\",\"path\":\"/health\",\"header\":{\"Host\":[\"example.com\"],\"X-App-ID\":[\"abc123\"]},\"port\":8080,\"timeout\":3,\"retries\":0,\"interval\":90,\"expected_body\":\"alive\",\"expected_codes\":\"2xx\",\"follow_redirects\":true,\"allow_insecure\":true,\"probe_zone\":\"example.com\"}'",
            "parameters": {
                "_formatter": {
                    "jsonMediaType": {}
                },
                "all_props": {
                    "type": {
                        "type": "string",
                        "example": "\"https\"",
                        "description": "The protocol to use for the health check. Currently supported protocols are 'HTTP','HTTPS', 'TCP', 'ICMP-PING', 'UDP-ICMP', and 'SMTP'.",
                        "enum": [
                            "http",
                            "https",
                            "tcp",
                            "udp_icmp",
                            "icmp_ping",
                            "smtp"
                        ],
                        "default": "http"
                    },
                    "description": {
                        "type": "string",
                        "example": "\"Login page monitor\"",
                        "description": "Object description"
                    },
                    "method": {
                        "type": "string",
                        "example": "\"GET\"",
                        "description": "The method to use for the health check. This defaults to 'GET' for HTTP/HTTPS based checks and 'connection_established' for TCP based health checks.",
                        "default": "GET"
                    },
                    "path": {
                        "type": "string",
                        "example": "\"/health\"",
                        "description": "The endpoint path to health check against. This parameter is only valid for HTTP and HTTPS monitors.",
                        "default": "/"
                    },
                    "header": {
                        "type": "object",
                        "example": "{\n  \"Host\": [\n    \"example.com\"\n  ],\n  \"X-App-ID\": [\n    \"abc123\"\n  ]\n}",
                        "description": "The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden. This parameter is only valid for HTTP and HTTPS monitors."
                    },
                    "port": {
                        "type": "integer",
                        "example": "8080",
                        "description": "Port number to connect to for the health check. Required for TCP, UDP, and SMTP checks. HTTP and HTTPS checks should only define the port when using a non-standard port (HTTP: default 80, HTTPS: default 443).",
                        "default": 0
                    },
                    "timeout": {
                        "type": "integer",
                        "example": "3",
                        "description": "The timeout (in seconds) before marking the health check as failed",
                        "default": 5
                    },
                    "retries": {
                        "type": "integer",
                        "example": "0",
                        "description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.",
                        "default": 2
                    },
                    "interval": {
                        "type": "integer",
                        "example": "90",
                        "description": "The interval between each health check. Shorter intervals may improve failover time, but will increase load on the origins as we check from multiple locations.",
                        "default": 60
                    },
                    "expected_body": {
                        "type": "string",
                        "example": "\"alive\"",
                        "description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. This parameter is only valid for HTTP and HTTPS monitors."
                    },
                    "expected_codes": {
                        "type": "string",
                        "example": "\"2xx\"",
                        "description": "The expected HTTP response code or code range of the health check. This parameter is only valid for HTTP and HTTPS monitors.",
                        "default": "200"
                    },
                    "follow_redirects": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Follow redirects if returned by the origin. This parameter is only valid for HTTP and HTTPS monitors.",
                        "default": false
                    },
                    "allow_insecure": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Do not validate the certificate when monitor use HTTPS. This parameter is currently only valid for HTTP and HTTPS monitors.",
                        "default": false
                    },
                    "probe_zone": {
                        "type": "string",
                        "example": "\"example.com\"",
                        "description": "Assign this monitor to emulate the specified zone while probing. This parameter is only valid for HTTP and HTTPS monitors."
                    }
                },
                "required_props": [
                    "expected_codes"
                ],
                "optional_props": [
                    "type",
                    "description",
                    "method",
                    "path",
                    "header",
                    "port",
                    "timeout",
                    "retries",
                    "interval",
                    "expected_body",
                    "follow_redirects",
                    "allow_insecure",
                    "probe_zone"
                ],
                "objects": [],
                "example": "{\n  \"type\": \"https\",\n  \"description\": \"Login page monitor\",\n  \"method\": \"GET\",\n  \"path\": \"/health\",\n  \"header\": {\n    \"Host\": [\n      \"example.com\"\n    ],\n    \"X-App-ID\": [\n      \"abc123\"\n    ]\n  },\n  \"port\": 8080,\n  \"timeout\": 3,\n  \"retries\": 0,\n  \"interval\": 90,\n  \"expected_body\": \"alive\",\n  \"expected_codes\": \"2xx\",\n  \"follow_redirects\": true,\n  \"allow_insecure\": true,\n  \"probe_zone\": \"example.com\"\n}"
            },
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"id\": \"f1aba936b94213e5b8dca0c0dbf1f9cc\",\n    \"created_on\": \"2014-01-01T05:20:00.12345Z\",\n    \"modified_on\": \"2014-01-01T05:20:00.12345Z\",\n    \"type\": \"https\",\n    \"description\": \"Login page monitor\",\n    \"method\": \"GET\",\n    \"path\": \"/health\",\n    \"header\": {\n      \"Host\": [\n        \"example.com\"\n      ],\n      \"X-App-ID\": [\n        \"abc123\"\n      ]\n    },\n    \"port\": 8080,\n    \"timeout\": 3,\n    \"retries\": 0,\n    \"interval\": 90,\n    \"expected_body\": \"alive\",\n    \"expected_codes\": \"2xx\",\n    \"follow_redirects\": true,\n    \"allow_insecure\": true\n  }\n}"
        },
        {
            "title": "Patch Monitor",
            "description": "Apply changes to an existing monitor, overwriting the supplied properties.",
            "rel": "self",
            "href": "user/load_balancers/monitors/{#/definitions/identifier}",
            "method": "PATCH",
            "cfOwnership": "load_balancer",
            "html_id": "load-balancer-monitors-patch-monitor",
            "uri": "user/load_balancers/monitors/:identifier",
            "curl": "curl -X PATCH \"https://api.cloudflare.com/client/v4/user/load_balancers/monitors/f1aba936b94213e5b8dca0c0dbf1f9cc\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\" \\\n     --data '{\"type\":\"https\",\"description\":\"Login page monitor\",\"method\":\"GET\",\"path\":\"/health\",\"header\":{\"Host\":[\"example.com\"],\"X-App-ID\":[\"abc123\"]},\"port\":8080,\"timeout\":3,\"retries\":0,\"interval\":90,\"expected_body\":\"alive\",\"expected_codes\":\"2xx\",\"follow_redirects\":true,\"allow_insecure\":true,\"probe_zone\":\"example.com\"}'",
            "parameters": {
                "_formatter": {
                    "jsonMediaType": {}
                },
                "all_props": {
                    "type": {
                        "type": "string",
                        "example": "\"https\"",
                        "description": "The protocol to use for the health check. Currently supported protocols are 'HTTP','HTTPS', 'TCP', 'ICMP-PING', 'UDP-ICMP', and 'SMTP'.",
                        "enum": [
                            "http",
                            "https",
                            "tcp",
                            "udp_icmp",
                            "icmp_ping",
                            "smtp"
                        ],
                        "default": "http"
                    },
                    "description": {
                        "type": "string",
                        "example": "\"Login page monitor\"",
                        "description": "Object description"
                    },
                    "method": {
                        "type": "string",
                        "example": "\"GET\"",
                        "description": "The method to use for the health check. This defaults to 'GET' for HTTP/HTTPS based checks and 'connection_established' for TCP based health checks.",
                        "default": "GET"
                    },
                    "path": {
                        "type": "string",
                        "example": "\"/health\"",
                        "description": "The endpoint path to health check against. This parameter is only valid for HTTP and HTTPS monitors.",
                        "default": "/"
                    },
                    "header": {
                        "type": "object",
                        "example": "{\n  \"Host\": [\n    \"example.com\"\n  ],\n  \"X-App-ID\": [\n    \"abc123\"\n  ]\n}",
                        "description": "The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden. This parameter is only valid for HTTP and HTTPS monitors."
                    },
                    "port": {
                        "type": "integer",
                        "example": "8080",
                        "description": "Port number to connect to for the health check. Required for TCP, UDP, and SMTP checks. HTTP and HTTPS checks should only define the port when using a non-standard port (HTTP: default 80, HTTPS: default 443).",
                        "default": 0
                    },
                    "timeout": {
                        "type": "integer",
                        "example": "3",
                        "description": "The timeout (in seconds) before marking the health check as failed",
                        "default": 5
                    },
                    "retries": {
                        "type": "integer",
                        "example": "0",
                        "description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.",
                        "default": 2
                    },
                    "interval": {
                        "type": "integer",
                        "example": "90",
                        "description": "The interval between each health check. Shorter intervals may improve failover time, but will increase load on the origins as we check from multiple locations.",
                        "default": 60
                    },
                    "expected_body": {
                        "type": "string",
                        "example": "\"alive\"",
                        "description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. This parameter is only valid for HTTP and HTTPS monitors."
                    },
                    "expected_codes": {
                        "type": "string",
                        "example": "\"2xx\"",
                        "description": "The expected HTTP response code or code range of the health check. This parameter is only valid for HTTP and HTTPS monitors.",
                        "default": "200"
                    },
                    "follow_redirects": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Follow redirects if returned by the origin. This parameter is only valid for HTTP and HTTPS monitors.",
                        "default": false
                    },
                    "allow_insecure": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Do not validate the certificate when monitor use HTTPS. This parameter is currently only valid for HTTP and HTTPS monitors.",
                        "default": false
                    },
                    "probe_zone": {
                        "type": "string",
                        "example": "\"example.com\"",
                        "description": "Assign this monitor to emulate the specified zone while probing. This parameter is only valid for HTTP and HTTPS monitors."
                    }
                },
                "required_props": [],
                "optional_props": [
                    "type",
                    "description",
                    "method",
                    "path",
                    "header",
                    "port",
                    "timeout",
                    "retries",
                    "interval",
                    "expected_body",
                    "expected_codes",
                    "follow_redirects",
                    "allow_insecure",
                    "probe_zone"
                ],
                "objects": [],
                "example": "{\n  \"type\": \"https\",\n  \"description\": \"Login page monitor\",\n  \"method\": \"GET\",\n  \"path\": \"/health\",\n  \"header\": {\n    \"Host\": [\n      \"example.com\"\n    ],\n    \"X-App-ID\": [\n      \"abc123\"\n    ]\n  },\n  \"port\": 8080,\n  \"timeout\": 3,\n  \"retries\": 0,\n  \"interval\": 90,\n  \"expected_body\": \"alive\",\n  \"expected_codes\": \"2xx\",\n  \"follow_redirects\": true,\n  \"allow_insecure\": true,\n  \"probe_zone\": \"example.com\"\n}"
            },
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"id\": \"f1aba936b94213e5b8dca0c0dbf1f9cc\",\n    \"created_on\": \"2014-01-01T05:20:00.12345Z\",\n    \"modified_on\": \"2014-01-01T05:20:00.12345Z\",\n    \"type\": \"https\",\n    \"description\": \"Login page monitor\",\n    \"method\": \"GET\",\n    \"path\": \"/health\",\n    \"header\": {\n      \"Host\": [\n        \"example.com\"\n      ],\n      \"X-App-ID\": [\n        \"abc123\"\n      ]\n    },\n    \"port\": 8080,\n    \"timeout\": 3,\n    \"retries\": 0,\n    \"interval\": 90,\n    \"expected_body\": \"alive\",\n    \"expected_codes\": \"2xx\",\n    \"follow_redirects\": true,\n    \"allow_insecure\": true\n  }\n}"
        },
        {
            "title": "Delete Monitor",
            "description": "Delete a configured monitor",
            "rel": "self",
            "href": "user/load_balancers/monitors/{#/definitions/identifier}",
            "method": "DELETE",
            "cfOwnership": "load_balancer",
            "html_id": "load-balancer-monitors-delete-monitor",
            "uri": "user/load_balancers/monitors/:identifier",
            "curl": "curl -X DELETE \"https://api.cloudflare.com/client/v4/user/load_balancers/monitors/f1aba936b94213e5b8dca0c0dbf1f9cc\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"id\": \"f1aba936b94213e5b8dca0c0dbf1f9cc\"\n  }\n}"
        },
        {
            "title": "Preview Monitor",
            "description": "Preview pools using the specified monitor with provided monitor details. The returned preview_id can be used in the preview endpoint to retrieve the results.",
            "rel": "self",
            "href": "user/load_balancers/monitors/{#/definitions/identifier}/preview",
            "method": "POST",
            "cfOwnership": "load_balancer",
            "html_id": "load-balancer-monitors-preview-monitor",
            "uri": "user/load_balancers/monitors/:identifier/preview",
            "curl": "curl -X POST \"https://api.cloudflare.com/client/v4/user/load_balancers/monitors/f1aba936b94213e5b8dca0c0dbf1f9cc/preview\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\" \\\n     --data '{\"type\":\"https\",\"method\":\"GET\",\"path\":\"/health\",\"header\":{\"Host\":[\"example.com\"],\"X-App-ID\":[\"abc123\"]},\"port\":8080,\"timeout\":3,\"retries\":0,\"expected_body\":\"alive\",\"expected_codes\":\"2xx\",\"follow_redirects\":true,\"allow_insecure\":true}'",
            "parameters": {
                "_formatter": {
                    "jsonMediaType": {}
                },
                "all_props": {
                    "type": {
                        "type": "string",
                        "example": "\"https\"",
                        "description": "The protocol to use for the health check. Currently supported protocols are 'HTTP','HTTPS', 'TCP', 'ICMP-PING', 'UDP-ICMP', and 'SMTP'.",
                        "enum": [
                            "http",
                            "https",
                            "tcp",
                            "udp_icmp",
                            "icmp_ping",
                            "smtp"
                        ],
                        "default": "http"
                    },
                    "method": {
                        "type": "string",
                        "example": "\"GET\"",
                        "description": "The method to use for the health check. This defaults to 'GET' for HTTP/HTTPS based checks and 'connection_established' for TCP based health checks.",
                        "default": "GET"
                    },
                    "path": {
                        "type": "string",
                        "example": "\"/health\"",
                        "description": "The endpoint path to health check against. This parameter is only valid for HTTP and HTTPS monitors.",
                        "default": "/"
                    },
                    "header": {
                        "type": "object",
                        "example": "{\n  \"Host\": [\n    \"example.com\"\n  ],\n  \"X-App-ID\": [\n    \"abc123\"\n  ]\n}",
                        "description": "The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden. This parameter is only valid for HTTP and HTTPS monitors."
                    },
                    "port": {
                        "type": "integer",
                        "example": "8080",
                        "description": "Port number to connect to for the health check. Required for TCP, UDP, and SMTP checks. HTTP and HTTPS checks should only define the port when using a non-standard port (HTTP: default 80, HTTPS: default 443).",
                        "default": 0
                    },
                    "timeout": {
                        "type": "integer",
                        "example": "3",
                        "description": "The timeout (in seconds) before marking the health check as failed",
                        "default": 5
                    },
                    "retries": {
                        "type": "integer",
                        "example": "0",
                        "description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.",
                        "default": 2
                    },
                    "expected_body": {
                        "type": "string",
                        "example": "\"alive\"",
                        "description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. This parameter is only valid for HTTP and HTTPS monitors."
                    },
                    "expected_codes": {
                        "type": "string",
                        "example": "\"2xx\"",
                        "description": "The expected HTTP response code or code range of the health check. This parameter is only valid for HTTP and HTTPS monitors.",
                        "default": "200"
                    },
                    "follow_redirects": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Follow redirects if returned by the origin. This parameter is only valid for HTTP and HTTPS monitors.",
                        "default": false
                    },
                    "allow_insecure": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Do not validate the certificate when monitor use HTTPS. This parameter is currently only valid for HTTP and HTTPS monitors.",
                        "default": false
                    }
                },
                "required_props": [
                    "expected_codes"
                ],
                "optional_props": [
                    "type",
                    "method",
                    "path",
                    "header",
                    "port",
                    "timeout",
                    "retries",
                    "expected_body",
                    "follow_redirects",
                    "allow_insecure"
                ],
                "objects": [],
                "example": "{\n  \"type\": \"https\",\n  \"method\": \"GET\",\n  \"path\": \"/health\",\n  \"header\": {\n    \"Host\": [\n      \"example.com\"\n    ],\n    \"X-App-ID\": [\n      \"abc123\"\n    ]\n  },\n  \"port\": 8080,\n  \"timeout\": 3,\n  \"retries\": 0,\n  \"expected_body\": \"alive\",\n  \"expected_codes\": \"2xx\",\n  \"follow_redirects\": true,\n  \"allow_insecure\": true\n}"
            },
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"preview_id\": \"f1aba936b94213e5b8dca0c0dbf1f9cc\",\n    \"pools\": {\n      \"abwlnp5jbqn45ecgxd03erbgtxtqai0d\": \"WNAM Datacenter\",\n      \"ve8h9lrcip5n5bbga9yqmdws28ay5d0l\": \"EEU Datacenter\"\n    }\n  }\n}"
        },
        {
            "title": "Preview Result",
            "description": "Get the result of a previous preview operation using the provided preview_id",
            "rel": "self",
            "href": "user/load_balancers/preview/{#/definitions/preview_id}",
            "method": "GET",
            "cfOwnership": "load_balancer",
            "html_id": "load-balancer-monitors-preview-result",
            "uri": "user/load_balancers/preview/:preview_id",
            "curl": "curl -X GET \"https://api.cloudflare.com/client/v4/user/load_balancers/preview/f1aba936b94213e5b8dca0c0dbf1f9cc?\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
            "parameters": {
                "_formatter": {
                    "jsonMediaType": {}
                },
                "all_props": {},
                "required_props": [],
                "optional_props": [],
                "objects": [],
                "example": "{}"
            },
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"abwlnp5jbqn45ecgxd03erbgtxtqai0d\": {\n    \"healthy\": true,\n    \"origins\": [\n      {\n        \"originone.example.com.\": {\n          \"healthy\": true,\n          \"rtt\": \"66ms\",\n          \"failure_reason\": \"No failures\",\n          \"response_code\": 200\n        }\n      }\n    ]\n  }\n}"
        },
        {
            "title": "List Monitor References",
            "description": "Get the list of resources that reference the provided monitor",
            "rel": "self",
            "href": "user/load_balancers/monitors/{#/definitions/identifier}/references",
            "method": "GET",
            "cfOwnership": "load_balancer",
            "html_id": "load-balancer-monitors-list-monitor-references",
            "uri": "user/load_balancers/monitors/:identifier/references",
            "curl": "curl -X GET \"https://api.cloudflare.com/client/v4/user/load_balancers/monitors/f1aba936b94213e5b8dca0c0dbf1f9cc/references\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": [\n    {\n      \"resource_id\": \"17b5962d775c646f3f9725cbc7a53df4\",\n      \"resource_name\": \"primary-dc-1\",\n      \"resource_type\": \"pool\",\n      \"reference_type\": \"referrer\"\n    }\n  ]\n}"
        }
    ],
    "html_id": "load-balancer-monitors",
    "object_definition": {
        "_formatter": {
            "jsonMediaType": {}
        },
        "all_props": {
            "id": {
                "type": "string",
                "example": "\"f1aba936b94213e5b8dca0c0dbf1f9cc\"",
                "id": "https://api.cloudflare.com/schemas/v4/common/identifier.json",
                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                "description": "API item identifier tag",
                "maxLength": 32,
                "readOnly": true
            },
            "created_on": {
                "type": "string",
                "example": "\"2014-01-01T05:20:00.12345Z\"",
                "id": "https://api.cloudflare.com/schemas/v4/client/definitions/created-on.json",
                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                "description": "Creation time",
                "format": "date-time",
                "readOnly": true
            },
            "modified_on": {
                "type": "string",
                "example": "\"2014-01-01T05:20:00.12345Z\"",
                "id": "https://api.cloudflare.com/schemas/v4/client/definitions/modified-on.json",
                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                "description": "Last modification time",
                "format": "date-time",
                "readOnly": true
            },
            "type": {
                "type": "string",
                "example": "\"https\"",
                "description": "The protocol to use for the health check. Currently supported protocols are 'HTTP','HTTPS', 'TCP', 'ICMP-PING', 'UDP-ICMP', and 'SMTP'.",
                "enum": [
                    "http",
                    "https",
                    "tcp",
                    "udp_icmp",
                    "icmp_ping",
                    "smtp"
                ],
                "default": "http"
            },
            "description": {
                "type": "string",
                "example": "\"Login page monitor\"",
                "description": "Object description"
            },
            "method": {
                "type": "string",
                "example": "\"GET\"",
                "description": "The method to use for the health check. This defaults to 'GET' for HTTP/HTTPS based checks and 'connection_established' for TCP based health checks.",
                "default": "GET"
            },
            "path": {
                "type": "string",
                "example": "\"/health\"",
                "description": "The endpoint path to health check against. This parameter is only valid for HTTP and HTTPS monitors.",
                "default": "/"
            },
            "header": {
                "type": "object",
                "example": "{\n  \"Host\": [\n    \"example.com\"\n  ],\n  \"X-App-ID\": [\n    \"abc123\"\n  ]\n}",
                "description": "The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden. This parameter is only valid for HTTP and HTTPS monitors."
            },
            "port": {
                "type": "integer",
                "example": "8080",
                "description": "Port number to connect to for the health check. Required for TCP, UDP, and SMTP checks. HTTP and HTTPS checks should only define the port when using a non-standard port (HTTP: default 80, HTTPS: default 443).",
                "default": 0
            },
            "timeout": {
                "type": "integer",
                "example": "3",
                "description": "The timeout (in seconds) before marking the health check as failed",
                "default": 5
            },
            "retries": {
                "type": "integer",
                "example": "0",
                "description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.",
                "default": 2
            },
            "interval": {
                "type": "integer",
                "example": "90",
                "description": "The interval between each health check. Shorter intervals may improve failover time, but will increase load on the origins as we check from multiple locations.",
                "default": 60
            },
            "expected_body": {
                "type": "string",
                "example": "\"alive\"",
                "description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. This parameter is only valid for HTTP and HTTPS monitors."
            },
            "expected_codes": {
                "type": "string",
                "example": "\"2xx\"",
                "description": "The expected HTTP response code or code range of the health check. This parameter is only valid for HTTP and HTTPS monitors.",
                "default": "200"
            },
            "follow_redirects": {
                "type": "boolean",
                "example": "true",
                "description": "Follow redirects if returned by the origin. This parameter is only valid for HTTP and HTTPS monitors.",
                "default": false
            },
            "allow_insecure": {
                "type": "boolean",
                "example": "true",
                "description": "Do not validate the certificate when monitor use HTTPS. This parameter is currently only valid for HTTP and HTTPS monitors.",
                "default": false
            }
        },
        "required_props": [],
        "optional_props": [
            "id",
            "created_on",
            "modified_on",
            "type",
            "description",
            "method",
            "path",
            "header",
            "port",
            "timeout",
            "retries",
            "interval",
            "expected_body",
            "expected_codes",
            "follow_redirects",
            "allow_insecure"
        ],
        "objects": [],
        "example": "{\n  \"id\": \"f1aba936b94213e5b8dca0c0dbf1f9cc\",\n  \"created_on\": \"2014-01-01T05:20:00.12345Z\",\n  \"modified_on\": \"2014-01-01T05:20:00.12345Z\",\n  \"type\": \"https\",\n  \"description\": \"Login page monitor\",\n  \"method\": \"GET\",\n  \"path\": \"/health\",\n  \"header\": {\n    \"Host\": [\n      \"example.com\"\n    ],\n    \"X-App-ID\": [\n      \"abc123\"\n    ]\n  },\n  \"port\": 8080,\n  \"timeout\": 3,\n  \"retries\": 0,\n  \"interval\": 90,\n  \"expected_body\": \"alive\",\n  \"expected_codes\": \"2xx\",\n  \"follow_redirects\": true,\n  \"allow_insecure\": true\n}",
        "title": "Load Balancer Monitors",
        "description": "User-level Monitor configurations. Monitors define whether we check over HTTP, HTTPS or TCP, the status code(s) we look for, the interval at which we check, timeouts and response body matching."
    },
    "_generated_on": "2022-06-23T18:27:26.181023",
    "_generated_from": "https://api.cloudflare.com/apidocs-static/app-15eee93638a35d88ae02.js"
}