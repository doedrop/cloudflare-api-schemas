{
    "id": "https://api.cloudflare.com/schemas/v4/client/organization.json",
    "title": "Organizations",
    "description": "An Organization is an entity which holds a set of zones for multiple users to interact with.",
    "cfExtendedDescription": "Please use equivalent `/accounts` API endpoints. Account APIs provide a broader range of features and are backwards-compatible to organization APIs.",
    "cfDeprecations": {
        "org_deprecation": {
            "id": "org_deprecation",
            "description": "This endpoint and its related APIs are deprecated in favor of the `/accounts` equivalent APIs, which have a broader range of features and are backwards compatible with these API.",
            "eol": "2020-02-04",
            "display": true
        }
    },
    "type": "object",
    "links": [
        {
            "title": "Organization Details",
            "description": "Get information about a specific organization that you are a member of",
            "rel": "self",
            "href": "organizations/{#/definitions/identifier}",
            "method": "GET",
            "cfOwnership": "iam",
            "cfPlanAvailability": {
                "free": false,
                "pro": false,
                "business": false,
                "enterprise": true
            },
            "cfPermissionsRequired": {
                "enum": [
                    "#organization:read"
                ]
            },
            "cfDeprecation": {
                "id": "org_deprecation",
                "description": "This endpoint and its related APIs are deprecated in favor of the `/accounts` equivalent APIs, which have a broader range of features and are backwards compatible with these API.",
                "eol": "2020-02-04",
                "display": true
            },
            "html_id": "organizations-organization-details",
            "uri": "organizations/:identifier",
            "curl": "curl -X GET \"https://api.cloudflare.com/client/v4/organizations/01a7362d577a6c3019a474fd6f485823\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"id\": \"01a7362d577a6c3019a474fd6f485823\",\n    \"name\": \"Cloudflare, Inc.\",\n    \"members\": [\n      {\n        \"id\": \"7c5dae5552338874e5053f2534d2767a\",\n        \"name\": \"John Smith\",\n        \"email\": \"user@example.com\",\n        \"status\": \"accepted\",\n        \"roles\": [\n          {\n            \"id\": \"3536bcfad5faccb999b47003c79917fb\",\n            \"name\": \"Organization Admin\",\n            \"description\": \"Administrative access to the entire Organization\",\n            \"permissions\": [\n              \"#zones:read\"\n            ]\n          }\n        ]\n      }\n    ],\n    \"invites\": [\n      {\n        \"id\": \"4f5f0c14a2a41d5063dd301b2f829f04\",\n        \"invited_member_id\": \"5a7805061c76ada191ed06f989cc3dac\",\n        \"invited_member_email\": \"user@example.com\",\n        \"organization_id\": \"5a7805061c76ada191ed06f989cc3dac\",\n        \"organization_name\": \"Cloudflare, Inc.\",\n        \"roles\": [\n          {\n            \"id\": \"3536bcfad5faccb999b47003c79917fb\",\n            \"name\": \"Organization Admin\",\n            \"description\": \"Administrative access to the entire Organization\",\n            \"permissions\": [\n              \"#zones:read\"\n            ]\n          }\n        ],\n        \"invited_by\": \"user@example.com\",\n        \"invited_on\": \"2014-01-01T05:20:00Z\",\n        \"expires_on\": \"2014-01-01T05:20:00Z\",\n        \"organization_is_enforcing_twofactor\": true,\n        \"status\": \"accepted\"\n      }\n    ],\n    \"roles\": [\n      {\n        \"id\": \"3536bcfad5faccb999b47003c79917fb\",\n        \"name\": \"Organization Admin\",\n        \"description\": \"Administrative access to the entire Organization\",\n        \"permissions\": [\n          \"#zones:read\"\n        ]\n      }\n    ]\n  }\n}"
        },
        {
            "title": "Edit Organization",
            "description": "Update an existing Organization",
            "rel": "self",
            "href": "organizations/{#/definitions/identifier}",
            "method": "PATCH",
            "cfOwnership": "iam",
            "cfPlanAvailability": {
                "free": false,
                "pro": false,
                "business": false,
                "enterprise": true
            },
            "cfPermissionsRequired": {
                "enum": [
                    "#organization:edit"
                ]
            },
            "cfDeprecation": {
                "id": "org_deprecation",
                "description": "This endpoint and its related APIs are deprecated in favor of the `/accounts` equivalent APIs, which have a broader range of features and are backwards compatible with these API.",
                "eol": "2020-02-04",
                "display": true
            },
            "html_id": "organizations-edit-organization",
            "uri": "organizations/:identifier",
            "curl": "curl -X PATCH \"https://api.cloudflare.com/client/v4/organizations/01a7362d577a6c3019a474fd6f485823\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\" \\\n     --data '{\"name\":\"Cloudflare, Inc.\"}'",
            "parameters": {
                "_formatter": {
                    "jsonMediaType": {}
                },
                "all_props": {
                    "name": {
                        "type": "string",
                        "example": "\"Cloudflare, Inc.\"",
                        "description": "Organization Name",
                        "maxLength": 100
                    }
                },
                "required_props": [],
                "optional_props": [
                    "name"
                ],
                "objects": [],
                "example": "{\n  \"name\": \"Cloudflare, Inc.\"\n}"
            },
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"id\": \"01a7362d577a6c3019a474fd6f485823\",\n    \"name\": \"Cloudflare, Inc.\",\n    \"members\": [\n      {\n        \"id\": \"7c5dae5552338874e5053f2534d2767a\",\n        \"name\": \"John Smith\",\n        \"email\": \"user@example.com\",\n        \"status\": \"accepted\",\n        \"roles\": [\n          {\n            \"id\": \"3536bcfad5faccb999b47003c79917fb\",\n            \"name\": \"Organization Admin\",\n            \"description\": \"Administrative access to the entire Organization\",\n            \"permissions\": [\n              \"#zones:read\"\n            ]\n          }\n        ]\n      }\n    ],\n    \"invites\": [\n      {\n        \"id\": \"4f5f0c14a2a41d5063dd301b2f829f04\",\n        \"invited_member_id\": \"5a7805061c76ada191ed06f989cc3dac\",\n        \"invited_member_email\": \"user@example.com\",\n        \"organization_id\": \"5a7805061c76ada191ed06f989cc3dac\",\n        \"organization_name\": \"Cloudflare, Inc.\",\n        \"roles\": [\n          {\n            \"id\": \"3536bcfad5faccb999b47003c79917fb\",\n            \"name\": \"Organization Admin\",\n            \"description\": \"Administrative access to the entire Organization\",\n            \"permissions\": [\n              \"#zones:read\"\n            ]\n          }\n        ],\n        \"invited_by\": \"user@example.com\",\n        \"invited_on\": \"2014-01-01T05:20:00Z\",\n        \"expires_on\": \"2014-01-01T05:20:00Z\",\n        \"organization_is_enforcing_twofactor\": true,\n        \"status\": \"accepted\"\n      }\n    ],\n    \"roles\": [\n      {\n        \"id\": \"3536bcfad5faccb999b47003c79917fb\",\n        \"name\": \"Organization Admin\",\n        \"description\": \"Administrative access to the entire Organization\",\n        \"permissions\": [\n          \"#zones:read\"\n        ]\n      }\n    ]\n  }\n}"
        }
    ],
    "html_id": "organizations",
    "object_definition": {
        "_formatter": {
            "jsonMediaType": {}
        },
        "all_props": {
            "id": {
                "type": "string",
                "example": "\"01a7362d577a6c3019a474fd6f485823\"",
                "description": "Organization identifier tag",
                "maxLength": 32,
                "readOnly": true
            },
            "name": {
                "type": "string",
                "example": "\"Cloudflare, Inc.\"",
                "description": "Organization Name",
                "maxLength": 100
            },
            "members": {
                "type": "array",
                "example": "[\n  {\n    \"id\": \"7c5dae5552338874e5053f2534d2767a\",\n    \"name\": \"John Smith\",\n    \"email\": \"user@example.com\",\n    \"status\": \"accepted\",\n    \"roles\": [\n      {\n        \"id\": \"3536bcfad5faccb999b47003c79917fb\",\n        \"name\": \"Organization Admin\",\n        \"description\": \"Administrative access to the entire Organization\",\n        \"permissions\": [\n          \"#zones:read\"\n        ]\n      }\n    ]\n  }\n]",
                "description": "Active members within an organization",
                "items": {
                    "id": "https://api.cloudflare.com/schemas/v4/client/definitions/organization/member.json",
                    "title": "Organization Members",
                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                    "description": "A member is the association of a Cloudflare user with an Organization.",
                    "type": "object",
                    "required": [
                        "id",
                        "name",
                        "email",
                        "status",
                        "roles"
                    ],
                    "properties": {
                        "id": {
                            "description": "User identifier tag",
                            "type": "string",
                            "maxLength": 32,
                            "readOnly": true,
                            "example": "7c5dae5552338874e5053f2534d2767a"
                        },
                        "name": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Member Name",
                            "maxLength": 100,
                            "example": "John Smith"
                        },
                        "email": {
                            "description": "Your contact email address",
                            "type": "string",
                            "maxLength": 90,
                            "example": "user@example.com"
                        },
                        "status": {
                            "enum": [
                                "accepted",
                                "invited"
                            ],
                            "description": "A member's status in the organization.",
                            "example": "accepted"
                        },
                        "roles": {
                            "type": "array",
                            "description": "Roles assigned to this Member",
                            "items": {
                                "id": "https://api.cloudflare.com/schemas/v4/client/definitions/organization/role.json",
                                "title": "Organization Roles",
                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                "description": "A role defines what permissions a Member of an Organization has.",
                                "type": "object",
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "permissions"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Role identifier tag",
                                        "type": "string",
                                        "maxLength": 32,
                                        "readOnly": true,
                                        "example": "3536bcfad5faccb999b47003c79917fb"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Role Name",
                                        "maxLength": 120,
                                        "readOnly": true,
                                        "example": "Organization Admin"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Description of role's permissions",
                                        "readOnly": true,
                                        "example": "Administrative access to the entire Organization"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "description": "Access permissions for this User",
                                        "readOnly": true,
                                        "items": {
                                            "type": "string",
                                            "maxLength": 160,
                                            "example": "#zones:read"
                                        }
                                    }
                                },
                                "definitions": {
                                    "identifier": {
                                        "description": "Role identifier tag",
                                        "type": "string",
                                        "maxLength": 32,
                                        "readOnly": true,
                                        "example": "3536bcfad5faccb999b47003c79917fb"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Role Name",
                                        "maxLength": 120,
                                        "readOnly": true,
                                        "example": "Organization Admin"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Description of role's permissions",
                                        "readOnly": true,
                                        "example": "Administrative access to the entire Organization"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "description": "Access permissions for this User",
                                        "readOnly": true,
                                        "items": {
                                            "type": "string",
                                            "maxLength": 160,
                                            "example": "#zones:read"
                                        }
                                    },
                                    "organization_identifier": {
                                        "description": "Organization identifier tag",
                                        "type": "string",
                                        "maxLength": 32,
                                        "readOnly": true,
                                        "example": "01a7362d577a6c3019a474fd6f485823"
                                    },
                                    "single_role_response": {
                                        "allOf": [
                                            {
                                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                "description": "Schema for an API response from Cloudflare that contains a single result object",
                                                "type": "object",
                                                "allOf": [
                                                    {
                                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                        "description": "Common schema for all Cloudflare v4 API responses",
                                                        "type": "object",
                                                        "required": [
                                                            "success",
                                                            "errors",
                                                            "messages",
                                                            "result"
                                                        ],
                                                        "oneOf": [
                                                            {
                                                                "$comment": "This subschema describes successful responses",
                                                                "properties": {
                                                                    "success": {
                                                                        "description": "Whether the API call was successful or not",
                                                                        "type": "boolean",
                                                                        "enum": [
                                                                            true
                                                                        ],
                                                                        "example": true
                                                                    },
                                                                    "errors": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "required": [
                                                                                "code",
                                                                                "message"
                                                                            ],
                                                                            "properties": {
                                                                                "code": {
                                                                                    "type": "integer",
                                                                                    "minimum": 1000
                                                                                },
                                                                                "message": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "uniqueItems": true
                                                                        },
                                                                        "example": []
                                                                    },
                                                                    "messages": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "required": [
                                                                                "code",
                                                                                "message"
                                                                            ],
                                                                            "properties": {
                                                                                "code": {
                                                                                    "type": "integer",
                                                                                    "minimum": 1000
                                                                                },
                                                                                "message": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "uniqueItems": true
                                                                        },
                                                                        "example": []
                                                                    },
                                                                    "result": {
                                                                        "type": [
                                                                            "object",
                                                                            "array",
                                                                            "string"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "$comment": "This subschema describes failure responses",
                                                                "properties": {
                                                                    "success": {
                                                                        "description": "Whether the API call was successful or not",
                                                                        "type": "boolean",
                                                                        "enum": [
                                                                            false
                                                                        ],
                                                                        "example": false
                                                                    },
                                                                    "errors": {
                                                                        "allOf": [
                                                                            {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "required": [
                                                                                        "code",
                                                                                        "message"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "code": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1000
                                                                                        },
                                                                                        "message": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "uniqueItems": true
                                                                                },
                                                                                "example": []
                                                                            }
                                                                        ],
                                                                        "minLength": 1,
                                                                        "example": [
                                                                            {
                                                                                "code": 7003,
                                                                                "message": "No route for the URI"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "messages": {
                                                                        "allOf": [
                                                                            {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "required": [
                                                                                        "code",
                                                                                        "message"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "code": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1000
                                                                                        },
                                                                                        "message": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "uniqueItems": true
                                                                                },
                                                                                "example": []
                                                                            }
                                                                        ],
                                                                        "example": []
                                                                    },
                                                                    "result": {
                                                                        "type": "null",
                                                                        "enum": [
                                                                            null
                                                                        ],
                                                                        "example": null
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "definitions": {
                                                            "messages": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "properties": {
                                                            "result": {
                                                                "type": [
                                                                    "object",
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "result": {
                                                        "type": "object",
                                                        "cfRecurse": ""
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "collection_role_response": {
                                        "allOf": [
                                            {
                                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                "description": "Schema for an API response from Cloudflare that contains multiple result objects",
                                                "type": "object",
                                                "anyOf": [
                                                    {
                                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                        "description": "Common schema for all Cloudflare v4 API responses",
                                                        "type": "object",
                                                        "required": [
                                                            "success",
                                                            "errors",
                                                            "messages",
                                                            "result"
                                                        ],
                                                        "oneOf": [
                                                            {
                                                                "$comment": "This subschema describes successful responses",
                                                                "properties": {
                                                                    "success": {
                                                                        "description": "Whether the API call was successful or not",
                                                                        "type": "boolean",
                                                                        "enum": [
                                                                            true
                                                                        ],
                                                                        "example": true
                                                                    },
                                                                    "errors": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "required": [
                                                                                "code",
                                                                                "message"
                                                                            ],
                                                                            "properties": {
                                                                                "code": {
                                                                                    "type": "integer",
                                                                                    "minimum": 1000
                                                                                },
                                                                                "message": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "uniqueItems": true
                                                                        },
                                                                        "example": []
                                                                    },
                                                                    "messages": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "required": [
                                                                                "code",
                                                                                "message"
                                                                            ],
                                                                            "properties": {
                                                                                "code": {
                                                                                    "type": "integer",
                                                                                    "minimum": 1000
                                                                                },
                                                                                "message": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "uniqueItems": true
                                                                        },
                                                                        "example": []
                                                                    },
                                                                    "result": {
                                                                        "type": [
                                                                            "object",
                                                                            "array",
                                                                            "string"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "$comment": "This subschema describes failure responses",
                                                                "properties": {
                                                                    "success": {
                                                                        "description": "Whether the API call was successful or not",
                                                                        "type": "boolean",
                                                                        "enum": [
                                                                            false
                                                                        ],
                                                                        "example": false
                                                                    },
                                                                    "errors": {
                                                                        "allOf": [
                                                                            {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "required": [
                                                                                        "code",
                                                                                        "message"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "code": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1000
                                                                                        },
                                                                                        "message": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "uniqueItems": true
                                                                                },
                                                                                "example": []
                                                                            }
                                                                        ],
                                                                        "minLength": 1,
                                                                        "example": [
                                                                            {
                                                                                "code": 7003,
                                                                                "message": "No route for the URI"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "messages": {
                                                                        "allOf": [
                                                                            {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "required": [
                                                                                        "code",
                                                                                        "message"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "code": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1000
                                                                                        },
                                                                                        "message": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "uniqueItems": true
                                                                                },
                                                                                "example": []
                                                                            }
                                                                        ],
                                                                        "example": []
                                                                    },
                                                                    "result": {
                                                                        "type": "null",
                                                                        "enum": [
                                                                            null
                                                                        ],
                                                                        "example": null
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "definitions": {
                                                            "messages": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "properties": {
                                                            "result": {
                                                                "type": [
                                                                    "array",
                                                                    "null"
                                                                ]
                                                            },
                                                            "result_info": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "page": {
                                                                        "description": "Current page within paginated list of results",
                                                                        "type": "number",
                                                                        "example": 1
                                                                    },
                                                                    "per_page": {
                                                                        "description": "Number of results per page of results",
                                                                        "type": "number",
                                                                        "example": 20
                                                                    },
                                                                    "count": {
                                                                        "description": "Total results returned based on your search parameters",
                                                                        "type": "number",
                                                                        "example": 1
                                                                    },
                                                                    "total_count": {
                                                                        "description": "Total results available without any search parameters",
                                                                        "type": "number",
                                                                        "example": 2000
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                ],
                                                "definitions": {
                                                    "params": {
                                                        "type": "object",
                                                        "properties": {
                                                            "page": {
                                                                "description": "Requested page within paginated list of results",
                                                                "type": "number",
                                                                "example": 1
                                                            },
                                                            "per_page": {
                                                                "description": "Maximum number of results requested",
                                                                "type": "number",
                                                                "example": 20
                                                            }
                                                        }
                                                    },
                                                    "result_info": {
                                                        "type": "object",
                                                        "properties": {
                                                            "page": {
                                                                "description": "Current page within paginated list of results",
                                                                "type": "number",
                                                                "example": 1
                                                            },
                                                            "per_page": {
                                                                "description": "Number of results per page of results",
                                                                "type": "number",
                                                                "example": 20
                                                            },
                                                            "count": {
                                                                "description": "Total results returned based on your search parameters",
                                                                "type": "number",
                                                                "example": 1
                                                            },
                                                            "total_count": {
                                                                "description": "Total results available without any search parameters",
                                                                "type": "number",
                                                                "example": 2000
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "result": {
                                                        "type": "array",
                                                        "items": {
                                                            "cfRecurse": ""
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "definitions": {
                        "name": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Member Name",
                            "maxLength": 100,
                            "example": "John Smith"
                        },
                        "organization_identifier": {
                            "description": "Organization identifier tag",
                            "type": "string",
                            "maxLength": 32,
                            "readOnly": true,
                            "example": "01a7362d577a6c3019a474fd6f485823"
                        },
                        "identifier": {
                            "description": "User identifier tag",
                            "type": "string",
                            "maxLength": 32,
                            "readOnly": true,
                            "example": "7c5dae5552338874e5053f2534d2767a"
                        },
                        "single_member_response": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Schema for an API response from Cloudflare that contains a single result object",
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": [
                                                        "object",
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "cfRecurse": ""
                                        }
                                    }
                                }
                            ]
                        },
                        "collection_member_response": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Schema for an API response from Cloudflare that contains multiple result objects",
                                    "type": "object",
                                    "anyOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": [
                                                        "array",
                                                        "null"
                                                    ]
                                                },
                                                "result_info": {
                                                    "type": "object",
                                                    "properties": {
                                                        "page": {
                                                            "description": "Current page within paginated list of results",
                                                            "type": "number",
                                                            "example": 1
                                                        },
                                                        "per_page": {
                                                            "description": "Number of results per page of results",
                                                            "type": "number",
                                                            "example": 20
                                                        },
                                                        "count": {
                                                            "description": "Total results returned based on your search parameters",
                                                            "type": "number",
                                                            "example": 1
                                                        },
                                                        "total_count": {
                                                            "description": "Total results available without any search parameters",
                                                            "type": "number",
                                                            "example": 2000
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "definitions": {
                                        "params": {
                                            "type": "object",
                                            "properties": {
                                                "page": {
                                                    "description": "Requested page within paginated list of results",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "description": "Maximum number of results requested",
                                                    "type": "number",
                                                    "example": 20
                                                }
                                            }
                                        },
                                        "result_info": {
                                            "type": "object",
                                            "properties": {
                                                "page": {
                                                    "description": "Current page within paginated list of results",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "description": "Number of results per page of results",
                                                    "type": "number",
                                                    "example": 20
                                                },
                                                "count": {
                                                    "description": "Total results returned based on your search parameters",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "total_count": {
                                                    "description": "Total results available without any search parameters",
                                                    "type": "number",
                                                    "example": 2000
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "cfRecurse": ""
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "invites": {
                "type": "array",
                "example": "[\n  {\n    \"id\": \"4f5f0c14a2a41d5063dd301b2f829f04\",\n    \"invited_member_id\": \"5a7805061c76ada191ed06f989cc3dac\",\n    \"invited_member_email\": \"user@example.com\",\n    \"organization_id\": \"5a7805061c76ada191ed06f989cc3dac\",\n    \"organization_name\": \"Cloudflare, Inc.\",\n    \"roles\": [\n      {\n        \"id\": \"3536bcfad5faccb999b47003c79917fb\",\n        \"name\": \"Organization Admin\",\n        \"description\": \"Administrative access to the entire Organization\",\n        \"permissions\": [\n          \"#zones:read\"\n        ]\n      }\n    ],\n    \"invited_by\": \"user@example.com\",\n    \"invited_on\": \"2014-01-01T05:20:00Z\",\n    \"expires_on\": \"2014-01-01T05:20:00Z\",\n    \"organization_is_enforcing_twofactor\": true,\n    \"status\": \"accepted\"\n  }\n]",
                "description": "Pending invitations associated with an organization",
                "items": {
                    "id": "https://api.cloudflare.com/schemas/v4/client/definitions/invite.json",
                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                    "title": "Invite",
                    "description": "An invitation to join an organization",
                    "type": "object",
                    "required": [
                        "id",
                        "invited_member_id",
                        "invited_member_email",
                        "roles",
                        "status",
                        "organization_id",
                        "organization_name",
                        "invited_by",
                        "invited_on",
                        "expires_on"
                    ],
                    "anyOf": [
                        {
                            "allOf": [
                                {
                                    "type": "object",
                                    "required": [
                                        "invited_member_id",
                                        "organization_id"
                                    ],
                                    "properties": {
                                        "id": {
                                            "description": "Invite identifier tag",
                                            "type": "string",
                                            "maxLength": 32,
                                            "readOnly": true,
                                            "example": "4f5f0c14a2a41d5063dd301b2f829f04"
                                        },
                                        "invited_member_id": {
                                            "description": "Id of the user to be added to the Organization",
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "maxLength": 32,
                                            "readOnly": true,
                                            "example": "5a7805061c76ada191ed06f989cc3dac"
                                        },
                                        "invited_member_email": {
                                            "description": "Email address of the user to be added to the Organization",
                                            "type": "string",
                                            "maxLength": 90,
                                            "example": "user@example.com"
                                        },
                                        "organization_id": {
                                            "description": "ID of the Organization the user will be added to",
                                            "type": "string",
                                            "maxLength": 32,
                                            "readOnly": true,
                                            "example": "5a7805061c76ada191ed06f989cc3dac"
                                        },
                                        "organization_name": {
                                            "description": "Organization Name",
                                            "type": "string",
                                            "maxLength": 100,
                                            "readOnly": true,
                                            "example": "Cloudflare, Inc."
                                        },
                                        "roles": {
                                            "description": "Roles to be assigned to this Member",
                                            "type": "array",
                                            "items": {
                                                "id": "https://api.cloudflare.com/schemas/v4/client/definitions/organization/role.json",
                                                "title": "Organization Roles",
                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                "description": "A role defines what permissions a Member of an Organization has.",
                                                "type": "object",
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "description",
                                                    "permissions"
                                                ],
                                                "properties": {
                                                    "id": {
                                                        "description": "Role identifier tag",
                                                        "type": "string",
                                                        "maxLength": 32,
                                                        "readOnly": true,
                                                        "example": "3536bcfad5faccb999b47003c79917fb"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Role Name",
                                                        "maxLength": 120,
                                                        "readOnly": true,
                                                        "example": "Organization Admin"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "description": "Description of role's permissions",
                                                        "readOnly": true,
                                                        "example": "Administrative access to the entire Organization"
                                                    },
                                                    "permissions": {
                                                        "type": "array",
                                                        "description": "Access permissions for this User",
                                                        "readOnly": true,
                                                        "items": {
                                                            "type": "string",
                                                            "maxLength": 160,
                                                            "example": "#zones:read"
                                                        }
                                                    }
                                                },
                                                "definitions": {
                                                    "identifier": {
                                                        "description": "Role identifier tag",
                                                        "type": "string",
                                                        "maxLength": 32,
                                                        "readOnly": true,
                                                        "example": "3536bcfad5faccb999b47003c79917fb"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Role Name",
                                                        "maxLength": 120,
                                                        "readOnly": true,
                                                        "example": "Organization Admin"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "description": "Description of role's permissions",
                                                        "readOnly": true,
                                                        "example": "Administrative access to the entire Organization"
                                                    },
                                                    "permissions": {
                                                        "type": "array",
                                                        "description": "Access permissions for this User",
                                                        "readOnly": true,
                                                        "items": {
                                                            "type": "string",
                                                            "maxLength": 160,
                                                            "example": "#zones:read"
                                                        }
                                                    },
                                                    "organization_identifier": {
                                                        "description": "Organization identifier tag",
                                                        "type": "string",
                                                        "maxLength": 32,
                                                        "readOnly": true,
                                                        "example": "01a7362d577a6c3019a474fd6f485823"
                                                    },
                                                    "single_role_response": {
                                                        "allOf": [
                                                            {
                                                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
                                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                "description": "Schema for an API response from Cloudflare that contains a single result object",
                                                                "type": "object",
                                                                "allOf": [
                                                                    {
                                                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                        "description": "Common schema for all Cloudflare v4 API responses",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "success",
                                                                            "errors",
                                                                            "messages",
                                                                            "result"
                                                                        ],
                                                                        "oneOf": [
                                                                            {
                                                                                "$comment": "This subschema describes successful responses",
                                                                                "properties": {
                                                                                    "success": {
                                                                                        "description": "Whether the API call was successful or not",
                                                                                        "type": "boolean",
                                                                                        "enum": [
                                                                                            true
                                                                                        ],
                                                                                        "example": true
                                                                                    },
                                                                                    "errors": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    },
                                                                                    "messages": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    },
                                                                                    "result": {
                                                                                        "type": [
                                                                                            "object",
                                                                                            "array",
                                                                                            "string"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "$comment": "This subschema describes failure responses",
                                                                                "properties": {
                                                                                    "success": {
                                                                                        "description": "Whether the API call was successful or not",
                                                                                        "type": "boolean",
                                                                                        "enum": [
                                                                                            false
                                                                                        ],
                                                                                        "example": false
                                                                                    },
                                                                                    "errors": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "code",
                                                                                                        "message"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "code": {
                                                                                                            "type": "integer",
                                                                                                            "minimum": 1000
                                                                                                        },
                                                                                                        "message": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "uniqueItems": true
                                                                                                },
                                                                                                "example": []
                                                                                            }
                                                                                        ],
                                                                                        "minLength": 1,
                                                                                        "example": [
                                                                                            {
                                                                                                "code": 7003,
                                                                                                "message": "No route for the URI"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "messages": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "code",
                                                                                                        "message"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "code": {
                                                                                                            "type": "integer",
                                                                                                            "minimum": 1000
                                                                                                        },
                                                                                                        "message": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "uniqueItems": true
                                                                                                },
                                                                                                "example": []
                                                                                            }
                                                                                        ],
                                                                                        "example": []
                                                                                    },
                                                                                    "result": {
                                                                                        "type": "null",
                                                                                        "enum": [
                                                                                            null
                                                                                        ],
                                                                                        "example": null
                                                                                    }
                                                                                }
                                                                            }
                                                                        ],
                                                                        "definitions": {
                                                                            "messages": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "required": [
                                                                                        "code",
                                                                                        "message"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "code": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1000
                                                                                        },
                                                                                        "message": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "uniqueItems": true
                                                                                },
                                                                                "example": []
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "result": {
                                                                                "type": [
                                                                                    "object",
                                                                                    "string",
                                                                                    "null"
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "result": {
                                                                        "type": "object",
                                                                        "cfRecurse": ""
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "collection_role_response": {
                                                        "allOf": [
                                                            {
                                                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
                                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                "description": "Schema for an API response from Cloudflare that contains multiple result objects",
                                                                "type": "object",
                                                                "anyOf": [
                                                                    {
                                                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                        "description": "Common schema for all Cloudflare v4 API responses",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "success",
                                                                            "errors",
                                                                            "messages",
                                                                            "result"
                                                                        ],
                                                                        "oneOf": [
                                                                            {
                                                                                "$comment": "This subschema describes successful responses",
                                                                                "properties": {
                                                                                    "success": {
                                                                                        "description": "Whether the API call was successful or not",
                                                                                        "type": "boolean",
                                                                                        "enum": [
                                                                                            true
                                                                                        ],
                                                                                        "example": true
                                                                                    },
                                                                                    "errors": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    },
                                                                                    "messages": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    },
                                                                                    "result": {
                                                                                        "type": [
                                                                                            "object",
                                                                                            "array",
                                                                                            "string"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "$comment": "This subschema describes failure responses",
                                                                                "properties": {
                                                                                    "success": {
                                                                                        "description": "Whether the API call was successful or not",
                                                                                        "type": "boolean",
                                                                                        "enum": [
                                                                                            false
                                                                                        ],
                                                                                        "example": false
                                                                                    },
                                                                                    "errors": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "code",
                                                                                                        "message"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "code": {
                                                                                                            "type": "integer",
                                                                                                            "minimum": 1000
                                                                                                        },
                                                                                                        "message": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "uniqueItems": true
                                                                                                },
                                                                                                "example": []
                                                                                            }
                                                                                        ],
                                                                                        "minLength": 1,
                                                                                        "example": [
                                                                                            {
                                                                                                "code": 7003,
                                                                                                "message": "No route for the URI"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "messages": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "code",
                                                                                                        "message"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "code": {
                                                                                                            "type": "integer",
                                                                                                            "minimum": 1000
                                                                                                        },
                                                                                                        "message": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "uniqueItems": true
                                                                                                },
                                                                                                "example": []
                                                                                            }
                                                                                        ],
                                                                                        "example": []
                                                                                    },
                                                                                    "result": {
                                                                                        "type": "null",
                                                                                        "enum": [
                                                                                            null
                                                                                        ],
                                                                                        "example": null
                                                                                    }
                                                                                }
                                                                            }
                                                                        ],
                                                                        "definitions": {
                                                                            "messages": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "required": [
                                                                                        "code",
                                                                                        "message"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "code": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1000
                                                                                        },
                                                                                        "message": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "uniqueItems": true
                                                                                },
                                                                                "example": []
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "result": {
                                                                                "type": [
                                                                                    "array",
                                                                                    "null"
                                                                                ]
                                                                            },
                                                                            "result_info": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "page": {
                                                                                        "description": "Current page within paginated list of results",
                                                                                        "type": "number",
                                                                                        "example": 1
                                                                                    },
                                                                                    "per_page": {
                                                                                        "description": "Number of results per page of results",
                                                                                        "type": "number",
                                                                                        "example": 20
                                                                                    },
                                                                                    "count": {
                                                                                        "description": "Total results returned based on your search parameters",
                                                                                        "type": "number",
                                                                                        "example": 1
                                                                                    },
                                                                                    "total_count": {
                                                                                        "description": "Total results available without any search parameters",
                                                                                        "type": "number",
                                                                                        "example": 2000
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                ],
                                                                "definitions": {
                                                                    "params": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "page": {
                                                                                "description": "Requested page within paginated list of results",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "per_page": {
                                                                                "description": "Maximum number of results requested",
                                                                                "type": "number",
                                                                                "example": 20
                                                                            }
                                                                        }
                                                                    },
                                                                    "result_info": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "page": {
                                                                                "description": "Current page within paginated list of results",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "per_page": {
                                                                                "description": "Number of results per page of results",
                                                                                "type": "number",
                                                                                "example": 20
                                                                            },
                                                                            "count": {
                                                                                "description": "Total results returned based on your search parameters",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "total_count": {
                                                                                "description": "Total results available without any search parameters",
                                                                                "type": "number",
                                                                                "example": 2000
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "result": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "cfRecurse": ""
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "invited_by": {
                                            "description": "The email address of the user who created the invite",
                                            "type": "string",
                                            "maxLength": 90,
                                            "example": "user@example.com"
                                        },
                                        "invited_on": {
                                            "description": "When the invite was sent",
                                            "type": "string",
                                            "format": "date-time",
                                            "readOnly": true,
                                            "example": "2014-01-01T05:20:00Z"
                                        },
                                        "expires_on": {
                                            "description": "When the invite is no longer active",
                                            "type": "string",
                                            "format": "date-time",
                                            "readOnly": true,
                                            "example": "2014-01-01T05:20:00Z"
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "organization_is_enforcing_twofactor": {
                                            "description": "Current status of two factor enforcement on the organization",
                                            "type": "boolean",
                                            "example": true,
                                            "default": false
                                        },
                                        "status": {
                                            "description": "Current status of the invitation",
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "accepted",
                                                "rejected",
                                                "canceled",
                                                "left",
                                                "expired"
                                            ],
                                            "example": "accepted"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "allOf": [
                                {
                                    "type": "object",
                                    "required": [
                                        "invited_member_id",
                                        "organization_id"
                                    ],
                                    "properties": {
                                        "id": {
                                            "description": "Invite identifier tag",
                                            "type": "string",
                                            "maxLength": 32,
                                            "readOnly": true,
                                            "example": "4f5f0c14a2a41d5063dd301b2f829f04"
                                        },
                                        "invited_member_id": {
                                            "description": "Id of the user to be added to the Organization",
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "maxLength": 32,
                                            "readOnly": true,
                                            "example": "5a7805061c76ada191ed06f989cc3dac"
                                        },
                                        "invited_member_email": {
                                            "description": "Email address of the user to be added to the Organization",
                                            "type": "string",
                                            "maxLength": 90,
                                            "example": "user@example.com"
                                        },
                                        "organization_id": {
                                            "description": "ID of the Organization the user will be added to",
                                            "type": "string",
                                            "maxLength": 32,
                                            "readOnly": true,
                                            "example": "5a7805061c76ada191ed06f989cc3dac"
                                        },
                                        "organization_name": {
                                            "description": "Organization Name",
                                            "type": "string",
                                            "maxLength": 100,
                                            "readOnly": true,
                                            "example": "Cloudflare, Inc."
                                        },
                                        "roles": {
                                            "description": "Roles to be assigned to this Member",
                                            "type": "array",
                                            "items": {
                                                "id": "https://api.cloudflare.com/schemas/v4/client/definitions/organization/role.json",
                                                "title": "Organization Roles",
                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                "description": "A role defines what permissions a Member of an Organization has.",
                                                "type": "object",
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "description",
                                                    "permissions"
                                                ],
                                                "properties": {
                                                    "id": {
                                                        "description": "Role identifier tag",
                                                        "type": "string",
                                                        "maxLength": 32,
                                                        "readOnly": true,
                                                        "example": "3536bcfad5faccb999b47003c79917fb"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Role Name",
                                                        "maxLength": 120,
                                                        "readOnly": true,
                                                        "example": "Organization Admin"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "description": "Description of role's permissions",
                                                        "readOnly": true,
                                                        "example": "Administrative access to the entire Organization"
                                                    },
                                                    "permissions": {
                                                        "type": "array",
                                                        "description": "Access permissions for this User",
                                                        "readOnly": true,
                                                        "items": {
                                                            "type": "string",
                                                            "maxLength": 160,
                                                            "example": "#zones:read"
                                                        }
                                                    }
                                                },
                                                "definitions": {
                                                    "identifier": {
                                                        "description": "Role identifier tag",
                                                        "type": "string",
                                                        "maxLength": 32,
                                                        "readOnly": true,
                                                        "example": "3536bcfad5faccb999b47003c79917fb"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Role Name",
                                                        "maxLength": 120,
                                                        "readOnly": true,
                                                        "example": "Organization Admin"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "description": "Description of role's permissions",
                                                        "readOnly": true,
                                                        "example": "Administrative access to the entire Organization"
                                                    },
                                                    "permissions": {
                                                        "type": "array",
                                                        "description": "Access permissions for this User",
                                                        "readOnly": true,
                                                        "items": {
                                                            "type": "string",
                                                            "maxLength": 160,
                                                            "example": "#zones:read"
                                                        }
                                                    },
                                                    "organization_identifier": {
                                                        "description": "Organization identifier tag",
                                                        "type": "string",
                                                        "maxLength": 32,
                                                        "readOnly": true,
                                                        "example": "01a7362d577a6c3019a474fd6f485823"
                                                    },
                                                    "single_role_response": {
                                                        "allOf": [
                                                            {
                                                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
                                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                "description": "Schema for an API response from Cloudflare that contains a single result object",
                                                                "type": "object",
                                                                "allOf": [
                                                                    {
                                                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                        "description": "Common schema for all Cloudflare v4 API responses",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "success",
                                                                            "errors",
                                                                            "messages",
                                                                            "result"
                                                                        ],
                                                                        "oneOf": [
                                                                            {
                                                                                "$comment": "This subschema describes successful responses",
                                                                                "properties": {
                                                                                    "success": {
                                                                                        "description": "Whether the API call was successful or not",
                                                                                        "type": "boolean",
                                                                                        "enum": [
                                                                                            true
                                                                                        ],
                                                                                        "example": true
                                                                                    },
                                                                                    "errors": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    },
                                                                                    "messages": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    },
                                                                                    "result": {
                                                                                        "type": [
                                                                                            "object",
                                                                                            "array",
                                                                                            "string"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "$comment": "This subschema describes failure responses",
                                                                                "properties": {
                                                                                    "success": {
                                                                                        "description": "Whether the API call was successful or not",
                                                                                        "type": "boolean",
                                                                                        "enum": [
                                                                                            false
                                                                                        ],
                                                                                        "example": false
                                                                                    },
                                                                                    "errors": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "code",
                                                                                                        "message"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "code": {
                                                                                                            "type": "integer",
                                                                                                            "minimum": 1000
                                                                                                        },
                                                                                                        "message": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "uniqueItems": true
                                                                                                },
                                                                                                "example": []
                                                                                            }
                                                                                        ],
                                                                                        "minLength": 1,
                                                                                        "example": [
                                                                                            {
                                                                                                "code": 7003,
                                                                                                "message": "No route for the URI"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "messages": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "code",
                                                                                                        "message"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "code": {
                                                                                                            "type": "integer",
                                                                                                            "minimum": 1000
                                                                                                        },
                                                                                                        "message": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "uniqueItems": true
                                                                                                },
                                                                                                "example": []
                                                                                            }
                                                                                        ],
                                                                                        "example": []
                                                                                    },
                                                                                    "result": {
                                                                                        "type": "null",
                                                                                        "enum": [
                                                                                            null
                                                                                        ],
                                                                                        "example": null
                                                                                    }
                                                                                }
                                                                            }
                                                                        ],
                                                                        "definitions": {
                                                                            "messages": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "required": [
                                                                                        "code",
                                                                                        "message"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "code": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1000
                                                                                        },
                                                                                        "message": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "uniqueItems": true
                                                                                },
                                                                                "example": []
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "result": {
                                                                                "type": [
                                                                                    "object",
                                                                                    "string",
                                                                                    "null"
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "result": {
                                                                        "type": "object",
                                                                        "cfRecurse": ""
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "collection_role_response": {
                                                        "allOf": [
                                                            {
                                                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
                                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                "description": "Schema for an API response from Cloudflare that contains multiple result objects",
                                                                "type": "object",
                                                                "anyOf": [
                                                                    {
                                                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                        "description": "Common schema for all Cloudflare v4 API responses",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "success",
                                                                            "errors",
                                                                            "messages",
                                                                            "result"
                                                                        ],
                                                                        "oneOf": [
                                                                            {
                                                                                "$comment": "This subschema describes successful responses",
                                                                                "properties": {
                                                                                    "success": {
                                                                                        "description": "Whether the API call was successful or not",
                                                                                        "type": "boolean",
                                                                                        "enum": [
                                                                                            true
                                                                                        ],
                                                                                        "example": true
                                                                                    },
                                                                                    "errors": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    },
                                                                                    "messages": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    },
                                                                                    "result": {
                                                                                        "type": [
                                                                                            "object",
                                                                                            "array",
                                                                                            "string"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "$comment": "This subschema describes failure responses",
                                                                                "properties": {
                                                                                    "success": {
                                                                                        "description": "Whether the API call was successful or not",
                                                                                        "type": "boolean",
                                                                                        "enum": [
                                                                                            false
                                                                                        ],
                                                                                        "example": false
                                                                                    },
                                                                                    "errors": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "code",
                                                                                                        "message"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "code": {
                                                                                                            "type": "integer",
                                                                                                            "minimum": 1000
                                                                                                        },
                                                                                                        "message": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "uniqueItems": true
                                                                                                },
                                                                                                "example": []
                                                                                            }
                                                                                        ],
                                                                                        "minLength": 1,
                                                                                        "example": [
                                                                                            {
                                                                                                "code": 7003,
                                                                                                "message": "No route for the URI"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "messages": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "code",
                                                                                                        "message"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "code": {
                                                                                                            "type": "integer",
                                                                                                            "minimum": 1000
                                                                                                        },
                                                                                                        "message": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "uniqueItems": true
                                                                                                },
                                                                                                "example": []
                                                                                            }
                                                                                        ],
                                                                                        "example": []
                                                                                    },
                                                                                    "result": {
                                                                                        "type": "null",
                                                                                        "enum": [
                                                                                            null
                                                                                        ],
                                                                                        "example": null
                                                                                    }
                                                                                }
                                                                            }
                                                                        ],
                                                                        "definitions": {
                                                                            "messages": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "required": [
                                                                                        "code",
                                                                                        "message"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "code": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1000
                                                                                        },
                                                                                        "message": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "uniqueItems": true
                                                                                },
                                                                                "example": []
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "result": {
                                                                                "type": [
                                                                                    "array",
                                                                                    "null"
                                                                                ]
                                                                            },
                                                                            "result_info": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "page": {
                                                                                        "description": "Current page within paginated list of results",
                                                                                        "type": "number",
                                                                                        "example": 1
                                                                                    },
                                                                                    "per_page": {
                                                                                        "description": "Number of results per page of results",
                                                                                        "type": "number",
                                                                                        "example": 20
                                                                                    },
                                                                                    "count": {
                                                                                        "description": "Total results returned based on your search parameters",
                                                                                        "type": "number",
                                                                                        "example": 1
                                                                                    },
                                                                                    "total_count": {
                                                                                        "description": "Total results available without any search parameters",
                                                                                        "type": "number",
                                                                                        "example": 2000
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                ],
                                                                "definitions": {
                                                                    "params": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "page": {
                                                                                "description": "Requested page within paginated list of results",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "per_page": {
                                                                                "description": "Maximum number of results requested",
                                                                                "type": "number",
                                                                                "example": 20
                                                                            }
                                                                        }
                                                                    },
                                                                    "result_info": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "page": {
                                                                                "description": "Current page within paginated list of results",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "per_page": {
                                                                                "description": "Number of results per page of results",
                                                                                "type": "number",
                                                                                "example": 20
                                                                            },
                                                                            "count": {
                                                                                "description": "Total results returned based on your search parameters",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "total_count": {
                                                                                "description": "Total results available without any search parameters",
                                                                                "type": "number",
                                                                                "example": 2000
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "result": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "cfRecurse": ""
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "invited_by": {
                                            "description": "The email address of the user who created the invite",
                                            "type": "string",
                                            "maxLength": 90,
                                            "example": "user@example.com"
                                        },
                                        "invited_on": {
                                            "description": "When the invite was sent",
                                            "type": "string",
                                            "format": "date-time",
                                            "readOnly": true,
                                            "example": "2014-01-01T05:20:00Z"
                                        },
                                        "expires_on": {
                                            "description": "When the invite is no longer active",
                                            "type": "string",
                                            "format": "date-time",
                                            "readOnly": true,
                                            "example": "2014-01-01T05:20:00Z"
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "status": {
                                            "description": "Current status of the invitation",
                                            "enum": [
                                                "pending",
                                                "accepted",
                                                "rejected",
                                                "expired"
                                            ],
                                            "example": "accepted"
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    "definitions": {
                        "identifier": {
                            "description": "Invite identifier tag",
                            "type": "string",
                            "maxLength": 32,
                            "readOnly": true,
                            "example": "4f5f0c14a2a41d5063dd301b2f829f04"
                        },
                        "invited_by": {
                            "description": "The email address of the user who created the invite",
                            "type": "string",
                            "maxLength": 90,
                            "example": "user@example.com"
                        },
                        "invited_on": {
                            "description": "When the invite was sent",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2014-01-01T05:20:00Z"
                        },
                        "expires_on": {
                            "description": "When the invite is no longer active",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2014-01-01T05:20:00Z"
                        },
                        "invited_member_email": {
                            "description": "Email address of the user to be added to the Organization",
                            "type": "string",
                            "maxLength": 90,
                            "example": "user@example.com"
                        },
                        "base": {
                            "type": "object",
                            "required": [
                                "invited_member_id",
                                "organization_id"
                            ],
                            "properties": {
                                "id": {
                                    "description": "Invite identifier tag",
                                    "type": "string",
                                    "maxLength": 32,
                                    "readOnly": true,
                                    "example": "4f5f0c14a2a41d5063dd301b2f829f04"
                                },
                                "invited_member_id": {
                                    "description": "Id of the user to be added to the Organization",
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "maxLength": 32,
                                    "readOnly": true,
                                    "example": "5a7805061c76ada191ed06f989cc3dac"
                                },
                                "invited_member_email": {
                                    "description": "Email address of the user to be added to the Organization",
                                    "type": "string",
                                    "maxLength": 90,
                                    "example": "user@example.com"
                                },
                                "organization_id": {
                                    "description": "ID of the Organization the user will be added to",
                                    "type": "string",
                                    "maxLength": 32,
                                    "readOnly": true,
                                    "example": "5a7805061c76ada191ed06f989cc3dac"
                                },
                                "organization_name": {
                                    "description": "Organization Name",
                                    "type": "string",
                                    "maxLength": 100,
                                    "readOnly": true,
                                    "example": "Cloudflare, Inc."
                                },
                                "roles": {
                                    "description": "Roles to be assigned to this Member",
                                    "type": "array",
                                    "items": {
                                        "id": "https://api.cloudflare.com/schemas/v4/client/definitions/organization/role.json",
                                        "title": "Organization Roles",
                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                        "description": "A role defines what permissions a Member of an Organization has.",
                                        "type": "object",
                                        "required": [
                                            "id",
                                            "name",
                                            "description",
                                            "permissions"
                                        ],
                                        "properties": {
                                            "id": {
                                                "description": "Role identifier tag",
                                                "type": "string",
                                                "maxLength": 32,
                                                "readOnly": true,
                                                "example": "3536bcfad5faccb999b47003c79917fb"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Role Name",
                                                "maxLength": 120,
                                                "readOnly": true,
                                                "example": "Organization Admin"
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description of role's permissions",
                                                "readOnly": true,
                                                "example": "Administrative access to the entire Organization"
                                            },
                                            "permissions": {
                                                "type": "array",
                                                "description": "Access permissions for this User",
                                                "readOnly": true,
                                                "items": {
                                                    "type": "string",
                                                    "maxLength": 160,
                                                    "example": "#zones:read"
                                                }
                                            }
                                        },
                                        "definitions": {
                                            "identifier": {
                                                "description": "Role identifier tag",
                                                "type": "string",
                                                "maxLength": 32,
                                                "readOnly": true,
                                                "example": "3536bcfad5faccb999b47003c79917fb"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Role Name",
                                                "maxLength": 120,
                                                "readOnly": true,
                                                "example": "Organization Admin"
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description of role's permissions",
                                                "readOnly": true,
                                                "example": "Administrative access to the entire Organization"
                                            },
                                            "permissions": {
                                                "type": "array",
                                                "description": "Access permissions for this User",
                                                "readOnly": true,
                                                "items": {
                                                    "type": "string",
                                                    "maxLength": 160,
                                                    "example": "#zones:read"
                                                }
                                            },
                                            "organization_identifier": {
                                                "description": "Organization identifier tag",
                                                "type": "string",
                                                "maxLength": 32,
                                                "readOnly": true,
                                                "example": "01a7362d577a6c3019a474fd6f485823"
                                            },
                                            "single_role_response": {
                                                "allOf": [
                                                    {
                                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
                                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                        "description": "Schema for an API response from Cloudflare that contains a single result object",
                                                        "type": "object",
                                                        "allOf": [
                                                            {
                                                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                "description": "Common schema for all Cloudflare v4 API responses",
                                                                "type": "object",
                                                                "required": [
                                                                    "success",
                                                                    "errors",
                                                                    "messages",
                                                                    "result"
                                                                ],
                                                                "oneOf": [
                                                                    {
                                                                        "$comment": "This subschema describes successful responses",
                                                                        "properties": {
                                                                            "success": {
                                                                                "description": "Whether the API call was successful or not",
                                                                                "type": "boolean",
                                                                                "enum": [
                                                                                    true
                                                                                ],
                                                                                "example": true
                                                                            },
                                                                            "errors": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "required": [
                                                                                        "code",
                                                                                        "message"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "code": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1000
                                                                                        },
                                                                                        "message": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "uniqueItems": true
                                                                                },
                                                                                "example": []
                                                                            },
                                                                            "messages": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "required": [
                                                                                        "code",
                                                                                        "message"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "code": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1000
                                                                                        },
                                                                                        "message": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "uniqueItems": true
                                                                                },
                                                                                "example": []
                                                                            },
                                                                            "result": {
                                                                                "type": [
                                                                                    "object",
                                                                                    "array",
                                                                                    "string"
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "$comment": "This subschema describes failure responses",
                                                                        "properties": {
                                                                            "success": {
                                                                                "description": "Whether the API call was successful or not",
                                                                                "type": "boolean",
                                                                                "enum": [
                                                                                    false
                                                                                ],
                                                                                "example": false
                                                                            },
                                                                            "errors": {
                                                                                "allOf": [
                                                                                    {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    }
                                                                                ],
                                                                                "minLength": 1,
                                                                                "example": [
                                                                                    {
                                                                                        "code": 7003,
                                                                                        "message": "No route for the URI"
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "messages": {
                                                                                "allOf": [
                                                                                    {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    }
                                                                                ],
                                                                                "example": []
                                                                            },
                                                                            "result": {
                                                                                "type": "null",
                                                                                "enum": [
                                                                                    null
                                                                                ],
                                                                                "example": null
                                                                            }
                                                                        }
                                                                    }
                                                                ],
                                                                "definitions": {
                                                                    "messages": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "required": [
                                                                                "code",
                                                                                "message"
                                                                            ],
                                                                            "properties": {
                                                                                "code": {
                                                                                    "type": "integer",
                                                                                    "minimum": 1000
                                                                                },
                                                                                "message": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "uniqueItems": true
                                                                        },
                                                                        "example": []
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "properties": {
                                                                    "result": {
                                                                        "type": [
                                                                            "object",
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "result": {
                                                                "type": "object",
                                                                "cfRecurse": ""
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "collection_role_response": {
                                                "allOf": [
                                                    {
                                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
                                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                        "description": "Schema for an API response from Cloudflare that contains multiple result objects",
                                                        "type": "object",
                                                        "anyOf": [
                                                            {
                                                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                "description": "Common schema for all Cloudflare v4 API responses",
                                                                "type": "object",
                                                                "required": [
                                                                    "success",
                                                                    "errors",
                                                                    "messages",
                                                                    "result"
                                                                ],
                                                                "oneOf": [
                                                                    {
                                                                        "$comment": "This subschema describes successful responses",
                                                                        "properties": {
                                                                            "success": {
                                                                                "description": "Whether the API call was successful or not",
                                                                                "type": "boolean",
                                                                                "enum": [
                                                                                    true
                                                                                ],
                                                                                "example": true
                                                                            },
                                                                            "errors": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "required": [
                                                                                        "code",
                                                                                        "message"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "code": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1000
                                                                                        },
                                                                                        "message": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "uniqueItems": true
                                                                                },
                                                                                "example": []
                                                                            },
                                                                            "messages": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "required": [
                                                                                        "code",
                                                                                        "message"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "code": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1000
                                                                                        },
                                                                                        "message": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "uniqueItems": true
                                                                                },
                                                                                "example": []
                                                                            },
                                                                            "result": {
                                                                                "type": [
                                                                                    "object",
                                                                                    "array",
                                                                                    "string"
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "$comment": "This subschema describes failure responses",
                                                                        "properties": {
                                                                            "success": {
                                                                                "description": "Whether the API call was successful or not",
                                                                                "type": "boolean",
                                                                                "enum": [
                                                                                    false
                                                                                ],
                                                                                "example": false
                                                                            },
                                                                            "errors": {
                                                                                "allOf": [
                                                                                    {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    }
                                                                                ],
                                                                                "minLength": 1,
                                                                                "example": [
                                                                                    {
                                                                                        "code": 7003,
                                                                                        "message": "No route for the URI"
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "messages": {
                                                                                "allOf": [
                                                                                    {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    }
                                                                                ],
                                                                                "example": []
                                                                            },
                                                                            "result": {
                                                                                "type": "null",
                                                                                "enum": [
                                                                                    null
                                                                                ],
                                                                                "example": null
                                                                            }
                                                                        }
                                                                    }
                                                                ],
                                                                "definitions": {
                                                                    "messages": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "required": [
                                                                                "code",
                                                                                "message"
                                                                            ],
                                                                            "properties": {
                                                                                "code": {
                                                                                    "type": "integer",
                                                                                    "minimum": 1000
                                                                                },
                                                                                "message": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "uniqueItems": true
                                                                        },
                                                                        "example": []
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "properties": {
                                                                    "result": {
                                                                        "type": [
                                                                            "array",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "result_info": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "page": {
                                                                                "description": "Current page within paginated list of results",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "per_page": {
                                                                                "description": "Number of results per page of results",
                                                                                "type": "number",
                                                                                "example": 20
                                                                            },
                                                                            "count": {
                                                                                "description": "Total results returned based on your search parameters",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "total_count": {
                                                                                "description": "Total results available without any search parameters",
                                                                                "type": "number",
                                                                                "example": 2000
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "definitions": {
                                                            "params": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "page": {
                                                                        "description": "Requested page within paginated list of results",
                                                                        "type": "number",
                                                                        "example": 1
                                                                    },
                                                                    "per_page": {
                                                                        "description": "Maximum number of results requested",
                                                                        "type": "number",
                                                                        "example": 20
                                                                    }
                                                                }
                                                            },
                                                            "result_info": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "page": {
                                                                        "description": "Current page within paginated list of results",
                                                                        "type": "number",
                                                                        "example": 1
                                                                    },
                                                                    "per_page": {
                                                                        "description": "Number of results per page of results",
                                                                        "type": "number",
                                                                        "example": 20
                                                                    },
                                                                    "count": {
                                                                        "description": "Total results returned based on your search parameters",
                                                                        "type": "number",
                                                                        "example": 1
                                                                    },
                                                                    "total_count": {
                                                                        "description": "Total results available without any search parameters",
                                                                        "type": "number",
                                                                        "example": 2000
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "result": {
                                                                "type": "array",
                                                                "items": {
                                                                    "cfRecurse": ""
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "invited_by": {
                                    "description": "The email address of the user who created the invite",
                                    "type": "string",
                                    "maxLength": 90,
                                    "example": "user@example.com"
                                },
                                "invited_on": {
                                    "description": "When the invite was sent",
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2014-01-01T05:20:00Z"
                                },
                                "expires_on": {
                                    "description": "When the invite is no longer active",
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2014-01-01T05:20:00Z"
                                }
                            }
                        },
                        "organization_invite": {
                            "allOf": [
                                {
                                    "type": "object",
                                    "required": [
                                        "invited_member_id",
                                        "organization_id"
                                    ],
                                    "properties": {
                                        "id": {
                                            "description": "Invite identifier tag",
                                            "type": "string",
                                            "maxLength": 32,
                                            "readOnly": true,
                                            "example": "4f5f0c14a2a41d5063dd301b2f829f04"
                                        },
                                        "invited_member_id": {
                                            "description": "Id of the user to be added to the Organization",
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "maxLength": 32,
                                            "readOnly": true,
                                            "example": "5a7805061c76ada191ed06f989cc3dac"
                                        },
                                        "invited_member_email": {
                                            "description": "Email address of the user to be added to the Organization",
                                            "type": "string",
                                            "maxLength": 90,
                                            "example": "user@example.com"
                                        },
                                        "organization_id": {
                                            "description": "ID of the Organization the user will be added to",
                                            "type": "string",
                                            "maxLength": 32,
                                            "readOnly": true,
                                            "example": "5a7805061c76ada191ed06f989cc3dac"
                                        },
                                        "organization_name": {
                                            "description": "Organization Name",
                                            "type": "string",
                                            "maxLength": 100,
                                            "readOnly": true,
                                            "example": "Cloudflare, Inc."
                                        },
                                        "roles": {
                                            "description": "Roles to be assigned to this Member",
                                            "type": "array",
                                            "items": {
                                                "id": "https://api.cloudflare.com/schemas/v4/client/definitions/organization/role.json",
                                                "title": "Organization Roles",
                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                "description": "A role defines what permissions a Member of an Organization has.",
                                                "type": "object",
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "description",
                                                    "permissions"
                                                ],
                                                "properties": {
                                                    "id": {
                                                        "description": "Role identifier tag",
                                                        "type": "string",
                                                        "maxLength": 32,
                                                        "readOnly": true,
                                                        "example": "3536bcfad5faccb999b47003c79917fb"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Role Name",
                                                        "maxLength": 120,
                                                        "readOnly": true,
                                                        "example": "Organization Admin"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "description": "Description of role's permissions",
                                                        "readOnly": true,
                                                        "example": "Administrative access to the entire Organization"
                                                    },
                                                    "permissions": {
                                                        "type": "array",
                                                        "description": "Access permissions for this User",
                                                        "readOnly": true,
                                                        "items": {
                                                            "type": "string",
                                                            "maxLength": 160,
                                                            "example": "#zones:read"
                                                        }
                                                    }
                                                },
                                                "definitions": {
                                                    "identifier": {
                                                        "description": "Role identifier tag",
                                                        "type": "string",
                                                        "maxLength": 32,
                                                        "readOnly": true,
                                                        "example": "3536bcfad5faccb999b47003c79917fb"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Role Name",
                                                        "maxLength": 120,
                                                        "readOnly": true,
                                                        "example": "Organization Admin"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "description": "Description of role's permissions",
                                                        "readOnly": true,
                                                        "example": "Administrative access to the entire Organization"
                                                    },
                                                    "permissions": {
                                                        "type": "array",
                                                        "description": "Access permissions for this User",
                                                        "readOnly": true,
                                                        "items": {
                                                            "type": "string",
                                                            "maxLength": 160,
                                                            "example": "#zones:read"
                                                        }
                                                    },
                                                    "organization_identifier": {
                                                        "description": "Organization identifier tag",
                                                        "type": "string",
                                                        "maxLength": 32,
                                                        "readOnly": true,
                                                        "example": "01a7362d577a6c3019a474fd6f485823"
                                                    },
                                                    "single_role_response": {
                                                        "allOf": [
                                                            {
                                                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
                                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                "description": "Schema for an API response from Cloudflare that contains a single result object",
                                                                "type": "object",
                                                                "allOf": [
                                                                    {
                                                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                        "description": "Common schema for all Cloudflare v4 API responses",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "success",
                                                                            "errors",
                                                                            "messages",
                                                                            "result"
                                                                        ],
                                                                        "oneOf": [
                                                                            {
                                                                                "$comment": "This subschema describes successful responses",
                                                                                "properties": {
                                                                                    "success": {
                                                                                        "description": "Whether the API call was successful or not",
                                                                                        "type": "boolean",
                                                                                        "enum": [
                                                                                            true
                                                                                        ],
                                                                                        "example": true
                                                                                    },
                                                                                    "errors": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    },
                                                                                    "messages": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    },
                                                                                    "result": {
                                                                                        "type": [
                                                                                            "object",
                                                                                            "array",
                                                                                            "string"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "$comment": "This subschema describes failure responses",
                                                                                "properties": {
                                                                                    "success": {
                                                                                        "description": "Whether the API call was successful or not",
                                                                                        "type": "boolean",
                                                                                        "enum": [
                                                                                            false
                                                                                        ],
                                                                                        "example": false
                                                                                    },
                                                                                    "errors": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "code",
                                                                                                        "message"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "code": {
                                                                                                            "type": "integer",
                                                                                                            "minimum": 1000
                                                                                                        },
                                                                                                        "message": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "uniqueItems": true
                                                                                                },
                                                                                                "example": []
                                                                                            }
                                                                                        ],
                                                                                        "minLength": 1,
                                                                                        "example": [
                                                                                            {
                                                                                                "code": 7003,
                                                                                                "message": "No route for the URI"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "messages": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "code",
                                                                                                        "message"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "code": {
                                                                                                            "type": "integer",
                                                                                                            "minimum": 1000
                                                                                                        },
                                                                                                        "message": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "uniqueItems": true
                                                                                                },
                                                                                                "example": []
                                                                                            }
                                                                                        ],
                                                                                        "example": []
                                                                                    },
                                                                                    "result": {
                                                                                        "type": "null",
                                                                                        "enum": [
                                                                                            null
                                                                                        ],
                                                                                        "example": null
                                                                                    }
                                                                                }
                                                                            }
                                                                        ],
                                                                        "definitions": {
                                                                            "messages": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "required": [
                                                                                        "code",
                                                                                        "message"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "code": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1000
                                                                                        },
                                                                                        "message": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "uniqueItems": true
                                                                                },
                                                                                "example": []
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "result": {
                                                                                "type": [
                                                                                    "object",
                                                                                    "string",
                                                                                    "null"
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "result": {
                                                                        "type": "object",
                                                                        "cfRecurse": ""
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "collection_role_response": {
                                                        "allOf": [
                                                            {
                                                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
                                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                "description": "Schema for an API response from Cloudflare that contains multiple result objects",
                                                                "type": "object",
                                                                "anyOf": [
                                                                    {
                                                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                        "description": "Common schema for all Cloudflare v4 API responses",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "success",
                                                                            "errors",
                                                                            "messages",
                                                                            "result"
                                                                        ],
                                                                        "oneOf": [
                                                                            {
                                                                                "$comment": "This subschema describes successful responses",
                                                                                "properties": {
                                                                                    "success": {
                                                                                        "description": "Whether the API call was successful or not",
                                                                                        "type": "boolean",
                                                                                        "enum": [
                                                                                            true
                                                                                        ],
                                                                                        "example": true
                                                                                    },
                                                                                    "errors": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    },
                                                                                    "messages": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    },
                                                                                    "result": {
                                                                                        "type": [
                                                                                            "object",
                                                                                            "array",
                                                                                            "string"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "$comment": "This subschema describes failure responses",
                                                                                "properties": {
                                                                                    "success": {
                                                                                        "description": "Whether the API call was successful or not",
                                                                                        "type": "boolean",
                                                                                        "enum": [
                                                                                            false
                                                                                        ],
                                                                                        "example": false
                                                                                    },
                                                                                    "errors": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "code",
                                                                                                        "message"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "code": {
                                                                                                            "type": "integer",
                                                                                                            "minimum": 1000
                                                                                                        },
                                                                                                        "message": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "uniqueItems": true
                                                                                                },
                                                                                                "example": []
                                                                                            }
                                                                                        ],
                                                                                        "minLength": 1,
                                                                                        "example": [
                                                                                            {
                                                                                                "code": 7003,
                                                                                                "message": "No route for the URI"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "messages": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "code",
                                                                                                        "message"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "code": {
                                                                                                            "type": "integer",
                                                                                                            "minimum": 1000
                                                                                                        },
                                                                                                        "message": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "uniqueItems": true
                                                                                                },
                                                                                                "example": []
                                                                                            }
                                                                                        ],
                                                                                        "example": []
                                                                                    },
                                                                                    "result": {
                                                                                        "type": "null",
                                                                                        "enum": [
                                                                                            null
                                                                                        ],
                                                                                        "example": null
                                                                                    }
                                                                                }
                                                                            }
                                                                        ],
                                                                        "definitions": {
                                                                            "messages": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "required": [
                                                                                        "code",
                                                                                        "message"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "code": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1000
                                                                                        },
                                                                                        "message": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "uniqueItems": true
                                                                                },
                                                                                "example": []
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "result": {
                                                                                "type": [
                                                                                    "array",
                                                                                    "null"
                                                                                ]
                                                                            },
                                                                            "result_info": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "page": {
                                                                                        "description": "Current page within paginated list of results",
                                                                                        "type": "number",
                                                                                        "example": 1
                                                                                    },
                                                                                    "per_page": {
                                                                                        "description": "Number of results per page of results",
                                                                                        "type": "number",
                                                                                        "example": 20
                                                                                    },
                                                                                    "count": {
                                                                                        "description": "Total results returned based on your search parameters",
                                                                                        "type": "number",
                                                                                        "example": 1
                                                                                    },
                                                                                    "total_count": {
                                                                                        "description": "Total results available without any search parameters",
                                                                                        "type": "number",
                                                                                        "example": 2000
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                ],
                                                                "definitions": {
                                                                    "params": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "page": {
                                                                                "description": "Requested page within paginated list of results",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "per_page": {
                                                                                "description": "Maximum number of results requested",
                                                                                "type": "number",
                                                                                "example": 20
                                                                            }
                                                                        }
                                                                    },
                                                                    "result_info": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "page": {
                                                                                "description": "Current page within paginated list of results",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "per_page": {
                                                                                "description": "Number of results per page of results",
                                                                                "type": "number",
                                                                                "example": 20
                                                                            },
                                                                            "count": {
                                                                                "description": "Total results returned based on your search parameters",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "total_count": {
                                                                                "description": "Total results available without any search parameters",
                                                                                "type": "number",
                                                                                "example": 2000
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "result": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "cfRecurse": ""
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "invited_by": {
                                            "description": "The email address of the user who created the invite",
                                            "type": "string",
                                            "maxLength": 90,
                                            "example": "user@example.com"
                                        },
                                        "invited_on": {
                                            "description": "When the invite was sent",
                                            "type": "string",
                                            "format": "date-time",
                                            "readOnly": true,
                                            "example": "2014-01-01T05:20:00Z"
                                        },
                                        "expires_on": {
                                            "description": "When the invite is no longer active",
                                            "type": "string",
                                            "format": "date-time",
                                            "readOnly": true,
                                            "example": "2014-01-01T05:20:00Z"
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "organization_is_enforcing_twofactor": {
                                            "description": "Current status of two factor enforcement on the organization",
                                            "type": "boolean",
                                            "example": true,
                                            "default": false
                                        },
                                        "status": {
                                            "description": "Current status of the invitation",
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "accepted",
                                                "rejected",
                                                "canceled",
                                                "left",
                                                "expired"
                                            ],
                                            "example": "accepted"
                                        }
                                    }
                                }
                            ]
                        },
                        "user_invite": {
                            "allOf": [
                                {
                                    "type": "object",
                                    "required": [
                                        "invited_member_id",
                                        "organization_id"
                                    ],
                                    "properties": {
                                        "id": {
                                            "description": "Invite identifier tag",
                                            "type": "string",
                                            "maxLength": 32,
                                            "readOnly": true,
                                            "example": "4f5f0c14a2a41d5063dd301b2f829f04"
                                        },
                                        "invited_member_id": {
                                            "description": "Id of the user to be added to the Organization",
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "maxLength": 32,
                                            "readOnly": true,
                                            "example": "5a7805061c76ada191ed06f989cc3dac"
                                        },
                                        "invited_member_email": {
                                            "description": "Email address of the user to be added to the Organization",
                                            "type": "string",
                                            "maxLength": 90,
                                            "example": "user@example.com"
                                        },
                                        "organization_id": {
                                            "description": "ID of the Organization the user will be added to",
                                            "type": "string",
                                            "maxLength": 32,
                                            "readOnly": true,
                                            "example": "5a7805061c76ada191ed06f989cc3dac"
                                        },
                                        "organization_name": {
                                            "description": "Organization Name",
                                            "type": "string",
                                            "maxLength": 100,
                                            "readOnly": true,
                                            "example": "Cloudflare, Inc."
                                        },
                                        "roles": {
                                            "description": "Roles to be assigned to this Member",
                                            "type": "array",
                                            "items": {
                                                "id": "https://api.cloudflare.com/schemas/v4/client/definitions/organization/role.json",
                                                "title": "Organization Roles",
                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                "description": "A role defines what permissions a Member of an Organization has.",
                                                "type": "object",
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "description",
                                                    "permissions"
                                                ],
                                                "properties": {
                                                    "id": {
                                                        "description": "Role identifier tag",
                                                        "type": "string",
                                                        "maxLength": 32,
                                                        "readOnly": true,
                                                        "example": "3536bcfad5faccb999b47003c79917fb"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Role Name",
                                                        "maxLength": 120,
                                                        "readOnly": true,
                                                        "example": "Organization Admin"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "description": "Description of role's permissions",
                                                        "readOnly": true,
                                                        "example": "Administrative access to the entire Organization"
                                                    },
                                                    "permissions": {
                                                        "type": "array",
                                                        "description": "Access permissions for this User",
                                                        "readOnly": true,
                                                        "items": {
                                                            "type": "string",
                                                            "maxLength": 160,
                                                            "example": "#zones:read"
                                                        }
                                                    }
                                                },
                                                "definitions": {
                                                    "identifier": {
                                                        "description": "Role identifier tag",
                                                        "type": "string",
                                                        "maxLength": 32,
                                                        "readOnly": true,
                                                        "example": "3536bcfad5faccb999b47003c79917fb"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Role Name",
                                                        "maxLength": 120,
                                                        "readOnly": true,
                                                        "example": "Organization Admin"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "description": "Description of role's permissions",
                                                        "readOnly": true,
                                                        "example": "Administrative access to the entire Organization"
                                                    },
                                                    "permissions": {
                                                        "type": "array",
                                                        "description": "Access permissions for this User",
                                                        "readOnly": true,
                                                        "items": {
                                                            "type": "string",
                                                            "maxLength": 160,
                                                            "example": "#zones:read"
                                                        }
                                                    },
                                                    "organization_identifier": {
                                                        "description": "Organization identifier tag",
                                                        "type": "string",
                                                        "maxLength": 32,
                                                        "readOnly": true,
                                                        "example": "01a7362d577a6c3019a474fd6f485823"
                                                    },
                                                    "single_role_response": {
                                                        "allOf": [
                                                            {
                                                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
                                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                "description": "Schema for an API response from Cloudflare that contains a single result object",
                                                                "type": "object",
                                                                "allOf": [
                                                                    {
                                                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                        "description": "Common schema for all Cloudflare v4 API responses",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "success",
                                                                            "errors",
                                                                            "messages",
                                                                            "result"
                                                                        ],
                                                                        "oneOf": [
                                                                            {
                                                                                "$comment": "This subschema describes successful responses",
                                                                                "properties": {
                                                                                    "success": {
                                                                                        "description": "Whether the API call was successful or not",
                                                                                        "type": "boolean",
                                                                                        "enum": [
                                                                                            true
                                                                                        ],
                                                                                        "example": true
                                                                                    },
                                                                                    "errors": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    },
                                                                                    "messages": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    },
                                                                                    "result": {
                                                                                        "type": [
                                                                                            "object",
                                                                                            "array",
                                                                                            "string"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "$comment": "This subschema describes failure responses",
                                                                                "properties": {
                                                                                    "success": {
                                                                                        "description": "Whether the API call was successful or not",
                                                                                        "type": "boolean",
                                                                                        "enum": [
                                                                                            false
                                                                                        ],
                                                                                        "example": false
                                                                                    },
                                                                                    "errors": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "code",
                                                                                                        "message"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "code": {
                                                                                                            "type": "integer",
                                                                                                            "minimum": 1000
                                                                                                        },
                                                                                                        "message": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "uniqueItems": true
                                                                                                },
                                                                                                "example": []
                                                                                            }
                                                                                        ],
                                                                                        "minLength": 1,
                                                                                        "example": [
                                                                                            {
                                                                                                "code": 7003,
                                                                                                "message": "No route for the URI"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "messages": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "code",
                                                                                                        "message"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "code": {
                                                                                                            "type": "integer",
                                                                                                            "minimum": 1000
                                                                                                        },
                                                                                                        "message": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "uniqueItems": true
                                                                                                },
                                                                                                "example": []
                                                                                            }
                                                                                        ],
                                                                                        "example": []
                                                                                    },
                                                                                    "result": {
                                                                                        "type": "null",
                                                                                        "enum": [
                                                                                            null
                                                                                        ],
                                                                                        "example": null
                                                                                    }
                                                                                }
                                                                            }
                                                                        ],
                                                                        "definitions": {
                                                                            "messages": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "required": [
                                                                                        "code",
                                                                                        "message"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "code": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1000
                                                                                        },
                                                                                        "message": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "uniqueItems": true
                                                                                },
                                                                                "example": []
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "result": {
                                                                                "type": [
                                                                                    "object",
                                                                                    "string",
                                                                                    "null"
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "result": {
                                                                        "type": "object",
                                                                        "cfRecurse": ""
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "collection_role_response": {
                                                        "allOf": [
                                                            {
                                                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
                                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                "description": "Schema for an API response from Cloudflare that contains multiple result objects",
                                                                "type": "object",
                                                                "anyOf": [
                                                                    {
                                                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                                        "description": "Common schema for all Cloudflare v4 API responses",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "success",
                                                                            "errors",
                                                                            "messages",
                                                                            "result"
                                                                        ],
                                                                        "oneOf": [
                                                                            {
                                                                                "$comment": "This subschema describes successful responses",
                                                                                "properties": {
                                                                                    "success": {
                                                                                        "description": "Whether the API call was successful or not",
                                                                                        "type": "boolean",
                                                                                        "enum": [
                                                                                            true
                                                                                        ],
                                                                                        "example": true
                                                                                    },
                                                                                    "errors": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    },
                                                                                    "messages": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "required": [
                                                                                                "code",
                                                                                                "message"
                                                                                            ],
                                                                                            "properties": {
                                                                                                "code": {
                                                                                                    "type": "integer",
                                                                                                    "minimum": 1000
                                                                                                },
                                                                                                "message": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "uniqueItems": true
                                                                                        },
                                                                                        "example": []
                                                                                    },
                                                                                    "result": {
                                                                                        "type": [
                                                                                            "object",
                                                                                            "array",
                                                                                            "string"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "$comment": "This subschema describes failure responses",
                                                                                "properties": {
                                                                                    "success": {
                                                                                        "description": "Whether the API call was successful or not",
                                                                                        "type": "boolean",
                                                                                        "enum": [
                                                                                            false
                                                                                        ],
                                                                                        "example": false
                                                                                    },
                                                                                    "errors": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "code",
                                                                                                        "message"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "code": {
                                                                                                            "type": "integer",
                                                                                                            "minimum": 1000
                                                                                                        },
                                                                                                        "message": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "uniqueItems": true
                                                                                                },
                                                                                                "example": []
                                                                                            }
                                                                                        ],
                                                                                        "minLength": 1,
                                                                                        "example": [
                                                                                            {
                                                                                                "code": 7003,
                                                                                                "message": "No route for the URI"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "messages": {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "code",
                                                                                                        "message"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "code": {
                                                                                                            "type": "integer",
                                                                                                            "minimum": 1000
                                                                                                        },
                                                                                                        "message": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "uniqueItems": true
                                                                                                },
                                                                                                "example": []
                                                                                            }
                                                                                        ],
                                                                                        "example": []
                                                                                    },
                                                                                    "result": {
                                                                                        "type": "null",
                                                                                        "enum": [
                                                                                            null
                                                                                        ],
                                                                                        "example": null
                                                                                    }
                                                                                }
                                                                            }
                                                                        ],
                                                                        "definitions": {
                                                                            "messages": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "required": [
                                                                                        "code",
                                                                                        "message"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "code": {
                                                                                            "type": "integer",
                                                                                            "minimum": 1000
                                                                                        },
                                                                                        "message": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "uniqueItems": true
                                                                                },
                                                                                "example": []
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "result": {
                                                                                "type": [
                                                                                    "array",
                                                                                    "null"
                                                                                ]
                                                                            },
                                                                            "result_info": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "page": {
                                                                                        "description": "Current page within paginated list of results",
                                                                                        "type": "number",
                                                                                        "example": 1
                                                                                    },
                                                                                    "per_page": {
                                                                                        "description": "Number of results per page of results",
                                                                                        "type": "number",
                                                                                        "example": 20
                                                                                    },
                                                                                    "count": {
                                                                                        "description": "Total results returned based on your search parameters",
                                                                                        "type": "number",
                                                                                        "example": 1
                                                                                    },
                                                                                    "total_count": {
                                                                                        "description": "Total results available without any search parameters",
                                                                                        "type": "number",
                                                                                        "example": 2000
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                ],
                                                                "definitions": {
                                                                    "params": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "page": {
                                                                                "description": "Requested page within paginated list of results",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "per_page": {
                                                                                "description": "Maximum number of results requested",
                                                                                "type": "number",
                                                                                "example": 20
                                                                            }
                                                                        }
                                                                    },
                                                                    "result_info": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "page": {
                                                                                "description": "Current page within paginated list of results",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "per_page": {
                                                                                "description": "Number of results per page of results",
                                                                                "type": "number",
                                                                                "example": 20
                                                                            },
                                                                            "count": {
                                                                                "description": "Total results returned based on your search parameters",
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "total_count": {
                                                                                "description": "Total results available without any search parameters",
                                                                                "type": "number",
                                                                                "example": 2000
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "result": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "cfRecurse": ""
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "invited_by": {
                                            "description": "The email address of the user who created the invite",
                                            "type": "string",
                                            "maxLength": 90,
                                            "example": "user@example.com"
                                        },
                                        "invited_on": {
                                            "description": "When the invite was sent",
                                            "type": "string",
                                            "format": "date-time",
                                            "readOnly": true,
                                            "example": "2014-01-01T05:20:00Z"
                                        },
                                        "expires_on": {
                                            "description": "When the invite is no longer active",
                                            "type": "string",
                                            "format": "date-time",
                                            "readOnly": true,
                                            "example": "2014-01-01T05:20:00Z"
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "status": {
                                            "description": "Current status of the invitation",
                                            "enum": [
                                                "pending",
                                                "accepted",
                                                "rejected",
                                                "expired"
                                            ],
                                            "example": "accepted"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "roles": {
                "type": "array",
                "example": "[\n  {\n    \"id\": \"3536bcfad5faccb999b47003c79917fb\",\n    \"name\": \"Organization Admin\",\n    \"description\": \"Administrative access to the entire Organization\",\n    \"permissions\": [\n      \"#zones:read\"\n    ]\n  }\n]",
                "description": "Roles available to assign to members of the Organization",
                "items": {
                    "id": "https://api.cloudflare.com/schemas/v4/client/definitions/organization/role.json",
                    "title": "Organization Roles",
                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                    "description": "A role defines what permissions a Member of an Organization has.",
                    "type": "object",
                    "required": [
                        "id",
                        "name",
                        "description",
                        "permissions"
                    ],
                    "properties": {
                        "id": {
                            "description": "Role identifier tag",
                            "type": "string",
                            "maxLength": 32,
                            "readOnly": true,
                            "example": "3536bcfad5faccb999b47003c79917fb"
                        },
                        "name": {
                            "type": "string",
                            "description": "Role Name",
                            "maxLength": 120,
                            "readOnly": true,
                            "example": "Organization Admin"
                        },
                        "description": {
                            "type": "string",
                            "description": "Description of role's permissions",
                            "readOnly": true,
                            "example": "Administrative access to the entire Organization"
                        },
                        "permissions": {
                            "type": "array",
                            "description": "Access permissions for this User",
                            "readOnly": true,
                            "items": {
                                "type": "string",
                                "maxLength": 160,
                                "example": "#zones:read"
                            }
                        }
                    },
                    "definitions": {
                        "identifier": {
                            "description": "Role identifier tag",
                            "type": "string",
                            "maxLength": 32,
                            "readOnly": true,
                            "example": "3536bcfad5faccb999b47003c79917fb"
                        },
                        "name": {
                            "type": "string",
                            "description": "Role Name",
                            "maxLength": 120,
                            "readOnly": true,
                            "example": "Organization Admin"
                        },
                        "description": {
                            "type": "string",
                            "description": "Description of role's permissions",
                            "readOnly": true,
                            "example": "Administrative access to the entire Organization"
                        },
                        "permissions": {
                            "type": "array",
                            "description": "Access permissions for this User",
                            "readOnly": true,
                            "items": {
                                "type": "string",
                                "maxLength": 160,
                                "example": "#zones:read"
                            }
                        },
                        "organization_identifier": {
                            "description": "Organization identifier tag",
                            "type": "string",
                            "maxLength": 32,
                            "readOnly": true,
                            "example": "01a7362d577a6c3019a474fd6f485823"
                        },
                        "single_role_response": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Schema for an API response from Cloudflare that contains a single result object",
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": [
                                                        "object",
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "cfRecurse": ""
                                        }
                                    }
                                }
                            ]
                        },
                        "collection_role_response": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Schema for an API response from Cloudflare that contains multiple result objects",
                                    "type": "object",
                                    "anyOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": [
                                                        "array",
                                                        "null"
                                                    ]
                                                },
                                                "result_info": {
                                                    "type": "object",
                                                    "properties": {
                                                        "page": {
                                                            "description": "Current page within paginated list of results",
                                                            "type": "number",
                                                            "example": 1
                                                        },
                                                        "per_page": {
                                                            "description": "Number of results per page of results",
                                                            "type": "number",
                                                            "example": 20
                                                        },
                                                        "count": {
                                                            "description": "Total results returned based on your search parameters",
                                                            "type": "number",
                                                            "example": 1
                                                        },
                                                        "total_count": {
                                                            "description": "Total results available without any search parameters",
                                                            "type": "number",
                                                            "example": 2000
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "definitions": {
                                        "params": {
                                            "type": "object",
                                            "properties": {
                                                "page": {
                                                    "description": "Requested page within paginated list of results",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "description": "Maximum number of results requested",
                                                    "type": "number",
                                                    "example": 20
                                                }
                                            }
                                        },
                                        "result_info": {
                                            "type": "object",
                                            "properties": {
                                                "page": {
                                                    "description": "Current page within paginated list of results",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "description": "Number of results per page of results",
                                                    "type": "number",
                                                    "example": 20
                                                },
                                                "count": {
                                                    "description": "Total results returned based on your search parameters",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "total_count": {
                                                    "description": "Total results available without any search parameters",
                                                    "type": "number",
                                                    "example": 2000
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "cfRecurse": ""
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "required_props": [],
        "optional_props": [
            "id",
            "name",
            "members",
            "invites",
            "roles"
        ],
        "objects": [],
        "example": "{\n  \"id\": \"01a7362d577a6c3019a474fd6f485823\",\n  \"name\": \"Cloudflare, Inc.\",\n  \"members\": [\n    {\n      \"id\": \"7c5dae5552338874e5053f2534d2767a\",\n      \"name\": \"John Smith\",\n      \"email\": \"user@example.com\",\n      \"status\": \"accepted\",\n      \"roles\": [\n        {\n          \"id\": \"3536bcfad5faccb999b47003c79917fb\",\n          \"name\": \"Organization Admin\",\n          \"description\": \"Administrative access to the entire Organization\",\n          \"permissions\": [\n            \"#zones:read\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"invites\": [\n    {\n      \"id\": \"4f5f0c14a2a41d5063dd301b2f829f04\",\n      \"invited_member_id\": \"5a7805061c76ada191ed06f989cc3dac\",\n      \"invited_member_email\": \"user@example.com\",\n      \"organization_id\": \"5a7805061c76ada191ed06f989cc3dac\",\n      \"organization_name\": \"Cloudflare, Inc.\",\n      \"roles\": [\n        {\n          \"id\": \"3536bcfad5faccb999b47003c79917fb\",\n          \"name\": \"Organization Admin\",\n          \"description\": \"Administrative access to the entire Organization\",\n          \"permissions\": [\n            \"#zones:read\"\n          ]\n        }\n      ],\n      \"invited_by\": \"user@example.com\",\n      \"invited_on\": \"2014-01-01T05:20:00Z\",\n      \"expires_on\": \"2014-01-01T05:20:00Z\",\n      \"organization_is_enforcing_twofactor\": true,\n      \"status\": \"accepted\"\n    }\n  ],\n  \"roles\": [\n    {\n      \"id\": \"3536bcfad5faccb999b47003c79917fb\",\n      \"name\": \"Organization Admin\",\n      \"description\": \"Administrative access to the entire Organization\",\n      \"permissions\": [\n        \"#zones:read\"\n      ]\n    }\n  ]\n}",
        "title": "Organizations",
        "description": "An Organization is an entity which holds a set of zones for multiple users to interact with."
    },
    "_generated_on": "2022-06-23T18:27:26.158678",
    "_generated_from": "https://api.cloudflare.com/apidocs-static/app-15eee93638a35d88ae02.js"
}