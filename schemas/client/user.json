{
    "id": "https://api.cloudflare.com/schemas/v4/client/user.json",
    "title": "User",
    "description": "The currently logged in/authenticated User",
    "type": "object",
    "links": [
        {
            "title": "User Details",
            "rel": "self",
            "href": "user",
            "method": "GET",
            "cfOwnership": "iam",
            "cfPlanAvailability": {
                "free": true,
                "pro": true,
                "business": true,
                "enterprise": true
            },
            "cfPermissionsRequired": {
                "enum": [
                    "com.cloudflare.api.user.read"
                ]
            },
            "html_id": "user-user-details",
            "uri": "user",
            "curl": "curl -X GET \"https://api.cloudflare.com/client/v4/user\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"id\": \"7c5dae5552338874e5053f2534d2767a\",\n    \"email\": \"user@example.com\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Appleseed\",\n    \"username\": \"cfuser12345\",\n    \"telephone\": \"+1 123-123-1234\",\n    \"country\": \"US\",\n    \"zipcode\": \"12345\",\n    \"created_on\": \"2014-01-01T05:20:00Z\",\n    \"modified_on\": \"2014-01-01T05:20:00Z\",\n    \"two_factor_authentication_enabled\": false,\n    \"suspended\": false\n  }\n}"
        },
        {
            "title": "Edit User",
            "description": "Edit part of your user details",
            "rel": "self",
            "href": "user",
            "method": "PATCH",
            "cfOwnership": "iam",
            "cfPlanAvailability": {
                "free": true,
                "pro": true,
                "business": true,
                "enterprise": true
            },
            "cfPermissionsRequired": {
                "enum": [
                    "com.cloudflare.api.user.update"
                ]
            },
            "html_id": "user-edit-user",
            "uri": "user",
            "curl": "curl -X PATCH \"https://api.cloudflare.com/client/v4/user\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\" \\\n     --data '{\"first_name\":\"John\",\"last_name\":\"Appleseed\",\"telephone\":\"+1 123-123-1234\",\"country\":\"US\",\"zipcode\":\"12345\"}'",
            "parameters": {
                "_formatter": {
                    "jsonMediaType": {}
                },
                "all_props": {
                    "first_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "example": "\"John\"",
                        "description": "User's first name",
                        "maxLength": 60
                    },
                    "last_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "example": "\"Appleseed\"",
                        "description": "User's last name",
                        "maxLength": 60
                    },
                    "telephone": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "example": "\"+1 123-123-1234\"",
                        "description": "User's telephone number",
                        "maxLength": 20
                    },
                    "country": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "example": "\"US\"",
                        "description": "The country in which the user lives.",
                        "maxLength": 30
                    },
                    "zipcode": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "example": "\"12345\"",
                        "description": "The zipcode or postal code where the user lives.",
                        "maxLength": 20
                    }
                },
                "required_props": [],
                "optional_props": [
                    "first_name",
                    "last_name",
                    "telephone",
                    "country",
                    "zipcode"
                ],
                "objects": [],
                "example": "{\n  \"first_name\": \"John\",\n  \"last_name\": \"Appleseed\",\n  \"telephone\": \"+1 123-123-1234\",\n  \"country\": \"US\",\n  \"zipcode\": \"12345\"\n}"
            },
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"id\": \"7c5dae5552338874e5053f2534d2767a\",\n    \"email\": \"user@example.com\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Appleseed\",\n    \"username\": \"cfuser12345\",\n    \"telephone\": \"+1 123-123-1234\",\n    \"country\": \"US\",\n    \"zipcode\": \"12345\",\n    \"created_on\": \"2014-01-01T05:20:00Z\",\n    \"modified_on\": \"2014-01-01T05:20:00Z\",\n    \"two_factor_authentication_enabled\": false,\n    \"suspended\": false\n  }\n}"
        }
    ],
    "html_id": "user",
    "object_definition": {
        "_formatter": {
            "jsonMediaType": {}
        },
        "all_props": {
            "id": {
                "type": "string",
                "example": "\"7c5dae5552338874e5053f2534d2767a\"",
                "description": "User identifier tag",
                "maxLength": 32,
                "readOnly": true
            },
            "email": {
                "type": "string",
                "example": "\"user@example.com\"",
                "description": "Your contact email address",
                "maxLength": 90
            },
            "first_name": {
                "type": [
                    "string",
                    "null"
                ],
                "example": "\"John\"",
                "description": "User's first name",
                "maxLength": 60
            },
            "last_name": {
                "type": [
                    "string",
                    "null"
                ],
                "example": "\"Appleseed\"",
                "description": "User's last name",
                "maxLength": 60
            },
            "username": {
                "type": "string",
                "example": "\"cfuser12345\"",
                "description": "A username used to access other cloudflare services, like support",
                "pattern": "^[a-z0-9]+([\\-\\._]?[a-z0-9]+)+$",
                "minLength": 3,
                "maxLength": 90
            },
            "telephone": {
                "type": [
                    "string",
                    "null"
                ],
                "example": "\"+1 123-123-1234\"",
                "description": "User's telephone number",
                "maxLength": 20
            },
            "country": {
                "type": [
                    "string",
                    "null"
                ],
                "example": "\"US\"",
                "description": "The country in which the user lives.",
                "maxLength": 30
            },
            "zipcode": {
                "type": [
                    "string",
                    "null"
                ],
                "example": "\"12345\"",
                "description": "The zipcode or postal code where the user lives.",
                "maxLength": 20
            },
            "created_on": {
                "type": "string",
                "example": "\"2014-01-01T05:20:00Z\"",
                "description": "When the user signed up.",
                "readOnly": true,
                "format": "date-time"
            },
            "modified_on": {
                "type": "string",
                "example": "\"2014-01-01T05:20:00Z\"",
                "description": "Last time the user was modified",
                "readOnly": true,
                "format": "date-time"
            },
            "two_factor_authentication_enabled": {
                "type": "boolean",
                "example": "false",
                "description": "Whether two-factor authentication is enabled for the user account. This does not apply to API authentication",
                "readOnly": true,
                "default": false
            },
            "suspended": {
                "type": "boolean",
                "example": "false",
                "description": "Indicates whether the user is prevented from performing certain actions within their account",
                "readOnly": true,
                "default": false
            },
            "betas": {
                "type": "array",
                "example": "[\n  \"new_feature\"\n]",
                "items": {
                    "description": "A beta feature ID",
                    "type": "string",
                    "example": "new_feature"
                },
                "description": "A list of betas the user is currently participating in. If a beta is zone-specific, the beta will apply to all zones."
            },
            "organizations": {
                "type": "array",
                "example": "[\n  {\n    \"id\": \"01a7362d577a6c3019a474fd6f485823\",\n    \"name\": \"Cloudflare, Inc.\",\n    \"status\": \"member\",\n    \"permissions\": [\n      \"#zones:read\"\n    ],\n    \"roles\": [\n      \"All Privileges - Super Administrator\"\n    ]\n  }\n]",
                "description": "A list of the organizations the user is a member of (or invited to) and the permissions granted to them.",
                "items": {
                    "id": "https://api.cloudflare.com/schemas/v4/client/user/organization.json",
                    "title": "User's Organizations",
                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                    "description": "A list of organizations this user is a member of",
                    "cfExtendedDescription": "Please use equivalent `/accounts` API endpoints. Account APIs provide a broader range of features and are backwards-compatible to organization APIs.",
                    "type": "object",
                    "properties": {
                        "id": {
                            "description": "Organization identifier tag",
                            "type": "string",
                            "maxLength": 32,
                            "readOnly": true,
                            "example": "01a7362d577a6c3019a474fd6f485823"
                        },
                        "name": {
                            "description": "Organization Name",
                            "type": "string",
                            "maxLength": 100,
                            "example": "Cloudflare, Inc."
                        },
                        "status": {
                            "type": "string",
                            "enum": [
                                "member",
                                "invited"
                            ],
                            "description": "Whether or not the user is a member of the organization or has an inivitation pending",
                            "example": "member"
                        },
                        "permissions": {
                            "type": "array",
                            "description": "Access permissions for this User",
                            "readOnly": true,
                            "items": {
                                "type": "string",
                                "maxLength": 160,
                                "example": "#zones:read"
                            }
                        },
                        "roles": {
                            "type": "array",
                            "description": "List of role names for the User at the Organization",
                            "readOnly": true,
                            "items": {
                                "type": "string",
                                "maxLength": 120,
                                "example": "All Privileges - Super Administrator"
                            }
                        }
                    },
                    "definitions": {
                        "identifier": {
                            "description": "Organization identifier tag",
                            "type": "string",
                            "maxLength": 32,
                            "readOnly": true,
                            "example": "01a7362d577a6c3019a474fd6f485823"
                        },
                        "status": {
                            "type": "string",
                            "enum": [
                                "member",
                                "invited"
                            ],
                            "description": "Whether or not the user is a member of the organization or has an inivitation pending",
                            "example": "member"
                        },
                        "single_organization_response": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Schema for an API response from Cloudflare that contains a single result object",
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": [
                                                        "object",
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "cfRecurse": ""
                                        }
                                    }
                                }
                            ]
                        },
                        "collection_organization_response": {
                            "allOf": [
                                {
                                    "id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
                                    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                    "description": "Schema for an API response from Cloudflare that contains multiple result objects",
                                    "type": "object",
                                    "anyOf": [
                                        {
                                            "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                            "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                            "description": "Common schema for all Cloudflare v4 API responses",
                                            "type": "object",
                                            "required": [
                                                "success",
                                                "errors",
                                                "messages",
                                                "result"
                                            ],
                                            "oneOf": [
                                                {
                                                    "$comment": "This subschema describes successful responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                true
                                                            ],
                                                            "example": true
                                                        },
                                                        "errors": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "required": [
                                                                    "code",
                                                                    "message"
                                                                ],
                                                                "properties": {
                                                                    "code": {
                                                                        "type": "integer",
                                                                        "minimum": 1000
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "uniqueItems": true
                                                            },
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": [
                                                                "object",
                                                                "array",
                                                                "string"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "$comment": "This subschema describes failure responses",
                                                    "properties": {
                                                        "success": {
                                                            "description": "Whether the API call was successful or not",
                                                            "type": "boolean",
                                                            "enum": [
                                                                false
                                                            ],
                                                            "example": false
                                                        },
                                                        "errors": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "minLength": 1,
                                                            "example": [
                                                                {
                                                                    "code": 7003,
                                                                    "message": "No route for the URI"
                                                                }
                                                            ]
                                                        },
                                                        "messages": {
                                                            "allOf": [
                                                                {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "code",
                                                                            "message"
                                                                        ],
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "integer",
                                                                                "minimum": 1000
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "uniqueItems": true
                                                                    },
                                                                    "example": []
                                                                }
                                                            ],
                                                            "example": []
                                                        },
                                                        "result": {
                                                            "type": "null",
                                                            "enum": [
                                                                null
                                                            ],
                                                            "example": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "definitions": {
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "code",
                                                            "message"
                                                        ],
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "minimum": 1000
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "uniqueItems": true
                                                    },
                                                    "example": []
                                                }
                                            }
                                        },
                                        {
                                            "properties": {
                                                "result": {
                                                    "type": [
                                                        "array",
                                                        "null"
                                                    ]
                                                },
                                                "result_info": {
                                                    "type": "object",
                                                    "properties": {
                                                        "page": {
                                                            "description": "Current page within paginated list of results",
                                                            "type": "number",
                                                            "example": 1
                                                        },
                                                        "per_page": {
                                                            "description": "Number of results per page of results",
                                                            "type": "number",
                                                            "example": 20
                                                        },
                                                        "count": {
                                                            "description": "Total results returned based on your search parameters",
                                                            "type": "number",
                                                            "example": 1
                                                        },
                                                        "total_count": {
                                                            "description": "Total results available without any search parameters",
                                                            "type": "number",
                                                            "example": 2000
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "definitions": {
                                        "params": {
                                            "type": "object",
                                            "properties": {
                                                "page": {
                                                    "description": "Requested page within paginated list of results",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "description": "Maximum number of results requested",
                                                    "type": "number",
                                                    "example": 20
                                                }
                                            }
                                        },
                                        "result_info": {
                                            "type": "object",
                                            "properties": {
                                                "page": {
                                                    "description": "Current page within paginated list of results",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "description": "Number of results per page of results",
                                                    "type": "number",
                                                    "example": 20
                                                },
                                                "count": {
                                                    "description": "Total results returned based on your search parameters",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "total_count": {
                                                    "description": "Total results available without any search parameters",
                                                    "type": "number",
                                                    "example": 2000
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "cfRecurse": ""
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "links": [
                        {
                            "title": "List Organizations",
                            "description": "List organizations the user is associated with",
                            "rel": "collection",
                            "href": "user/organizations",
                            "method": "GET",
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "member",
                                            "invited"
                                        ],
                                        "description": "Whether or not the user is a member of the organization or has an inivitation pending",
                                        "example": "member"
                                    },
                                    "name": {
                                        "description": "Organization Name",
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "Cloudflare, Inc."
                                    },
                                    "page": {
                                        "type": "number",
                                        "minimum": 1,
                                        "default": 1,
                                        "description": "Page number of paginated results"
                                    },
                                    "per_page": {
                                        "type": "number",
                                        "minimum": 5,
                                        "maximum": 50,
                                        "default": 20,
                                        "description": "Number of organizations per page"
                                    },
                                    "order": {
                                        "type": "string",
                                        "enum": [
                                            "id",
                                            "name",
                                            "status"
                                        ],
                                        "example": "status",
                                        "description": "Field to order organizations by"
                                    },
                                    "direction": {
                                        "type": "string",
                                        "enum": [
                                            "asc",
                                            "desc"
                                        ],
                                        "example": "desc",
                                        "description": "Direction to order organizations"
                                    },
                                    "match": {
                                        "type": "string",
                                        "enum": [
                                            "any",
                                            "all"
                                        ],
                                        "default": "all",
                                        "description": "Whether to match all search requirements or at least one (any)"
                                    }
                                }
                            },
                            "targetSchema": {
                                "allOf": [
                                    {
                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                        "description": "Schema for an API response from Cloudflare that contains multiple result objects",
                                        "type": "object",
                                        "anyOf": [
                                            {
                                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                "description": "Common schema for all Cloudflare v4 API responses",
                                                "type": "object",
                                                "required": [
                                                    "success",
                                                    "errors",
                                                    "messages",
                                                    "result"
                                                ],
                                                "oneOf": [
                                                    {
                                                        "$comment": "This subschema describes successful responses",
                                                        "properties": {
                                                            "success": {
                                                                "description": "Whether the API call was successful or not",
                                                                "type": "boolean",
                                                                "enum": [
                                                                    true
                                                                ],
                                                                "example": true
                                                            },
                                                            "errors": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            },
                                                            "messages": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            },
                                                            "result": {
                                                                "type": [
                                                                    "object",
                                                                    "array",
                                                                    "string"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "$comment": "This subschema describes failure responses",
                                                        "properties": {
                                                            "success": {
                                                                "description": "Whether the API call was successful or not",
                                                                "type": "boolean",
                                                                "enum": [
                                                                    false
                                                                ],
                                                                "example": false
                                                            },
                                                            "errors": {
                                                                "allOf": [
                                                                    {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "required": [
                                                                                "code",
                                                                                "message"
                                                                            ],
                                                                            "properties": {
                                                                                "code": {
                                                                                    "type": "integer",
                                                                                    "minimum": 1000
                                                                                },
                                                                                "message": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "uniqueItems": true
                                                                        },
                                                                        "example": []
                                                                    }
                                                                ],
                                                                "minLength": 1,
                                                                "example": [
                                                                    {
                                                                        "code": 7003,
                                                                        "message": "No route for the URI"
                                                                    }
                                                                ]
                                                            },
                                                            "messages": {
                                                                "allOf": [
                                                                    {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "required": [
                                                                                "code",
                                                                                "message"
                                                                            ],
                                                                            "properties": {
                                                                                "code": {
                                                                                    "type": "integer",
                                                                                    "minimum": 1000
                                                                                },
                                                                                "message": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "uniqueItems": true
                                                                        },
                                                                        "example": []
                                                                    }
                                                                ],
                                                                "example": []
                                                            },
                                                            "result": {
                                                                "type": "null",
                                                                "enum": [
                                                                    null
                                                                ],
                                                                "example": null
                                                            }
                                                        }
                                                    }
                                                ],
                                                "definitions": {
                                                    "messages": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                }
                                            },
                                            {
                                                "properties": {
                                                    "result": {
                                                        "type": [
                                                            "array",
                                                            "null"
                                                        ]
                                                    },
                                                    "result_info": {
                                                        "type": "object",
                                                        "properties": {
                                                            "page": {
                                                                "description": "Current page within paginated list of results",
                                                                "type": "number",
                                                                "example": 1
                                                            },
                                                            "per_page": {
                                                                "description": "Number of results per page of results",
                                                                "type": "number",
                                                                "example": 20
                                                            },
                                                            "count": {
                                                                "description": "Total results returned based on your search parameters",
                                                                "type": "number",
                                                                "example": 1
                                                            },
                                                            "total_count": {
                                                                "description": "Total results available without any search parameters",
                                                                "type": "number",
                                                                "example": 2000
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "definitions": {
                                            "params": {
                                                "type": "object",
                                                "properties": {
                                                    "page": {
                                                        "description": "Requested page within paginated list of results",
                                                        "type": "number",
                                                        "example": 1
                                                    },
                                                    "per_page": {
                                                        "description": "Maximum number of results requested",
                                                        "type": "number",
                                                        "example": 20
                                                    }
                                                }
                                            },
                                            "result_info": {
                                                "type": "object",
                                                "properties": {
                                                    "page": {
                                                        "description": "Current page within paginated list of results",
                                                        "type": "number",
                                                        "example": 1
                                                    },
                                                    "per_page": {
                                                        "description": "Number of results per page of results",
                                                        "type": "number",
                                                        "example": 20
                                                    },
                                                    "count": {
                                                        "description": "Total results returned based on your search parameters",
                                                        "type": "number",
                                                        "example": 1
                                                    },
                                                    "total_count": {
                                                        "description": "Total results available without any search parameters",
                                                        "type": "number",
                                                        "example": 2000
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "result": {
                                                "type": "array",
                                                "items": {
                                                    "cfRecurse": ""
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "cfOwnership": "iam",
                            "cfPlanAvailability": {
                                "free": false,
                                "pro": false,
                                "business": false,
                                "enterprise": true
                            }
                        },
                        {
                            "title": "Organization Details",
                            "description": "Get a specific organization the user is associated with",
                            "rel": "self",
                            "href": "user/organizations/{#/definitions/identifier}",
                            "method": "GET",
                            "targetSchema": {
                                "allOf": [
                                    {
                                        "id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
                                        "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                        "description": "Schema for an API response from Cloudflare that contains a single result object",
                                        "type": "object",
                                        "allOf": [
                                            {
                                                "id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
                                                "$schema": "http://json-schema.org/draft-04/hyper-schema#",
                                                "description": "Common schema for all Cloudflare v4 API responses",
                                                "type": "object",
                                                "required": [
                                                    "success",
                                                    "errors",
                                                    "messages",
                                                    "result"
                                                ],
                                                "oneOf": [
                                                    {
                                                        "$comment": "This subschema describes successful responses",
                                                        "properties": {
                                                            "success": {
                                                                "description": "Whether the API call was successful or not",
                                                                "type": "boolean",
                                                                "enum": [
                                                                    true
                                                                ],
                                                                "example": true
                                                            },
                                                            "errors": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            },
                                                            "messages": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                        "code",
                                                                        "message"
                                                                    ],
                                                                    "properties": {
                                                                        "code": {
                                                                            "type": "integer",
                                                                            "minimum": 1000
                                                                        },
                                                                        "message": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "uniqueItems": true
                                                                },
                                                                "example": []
                                                            },
                                                            "result": {
                                                                "type": [
                                                                    "object",
                                                                    "array",
                                                                    "string"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "$comment": "This subschema describes failure responses",
                                                        "properties": {
                                                            "success": {
                                                                "description": "Whether the API call was successful or not",
                                                                "type": "boolean",
                                                                "enum": [
                                                                    false
                                                                ],
                                                                "example": false
                                                            },
                                                            "errors": {
                                                                "allOf": [
                                                                    {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "required": [
                                                                                "code",
                                                                                "message"
                                                                            ],
                                                                            "properties": {
                                                                                "code": {
                                                                                    "type": "integer",
                                                                                    "minimum": 1000
                                                                                },
                                                                                "message": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "uniqueItems": true
                                                                        },
                                                                        "example": []
                                                                    }
                                                                ],
                                                                "minLength": 1,
                                                                "example": [
                                                                    {
                                                                        "code": 7003,
                                                                        "message": "No route for the URI"
                                                                    }
                                                                ]
                                                            },
                                                            "messages": {
                                                                "allOf": [
                                                                    {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "required": [
                                                                                "code",
                                                                                "message"
                                                                            ],
                                                                            "properties": {
                                                                                "code": {
                                                                                    "type": "integer",
                                                                                    "minimum": 1000
                                                                                },
                                                                                "message": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "uniqueItems": true
                                                                        },
                                                                        "example": []
                                                                    }
                                                                ],
                                                                "example": []
                                                            },
                                                            "result": {
                                                                "type": "null",
                                                                "enum": [
                                                                    null
                                                                ],
                                                                "example": null
                                                            }
                                                        }
                                                    }
                                                ],
                                                "definitions": {
                                                    "messages": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "required": [
                                                                "code",
                                                                "message"
                                                            ],
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer",
                                                                    "minimum": 1000
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "uniqueItems": true
                                                        },
                                                        "example": []
                                                    }
                                                }
                                            },
                                            {
                                                "properties": {
                                                    "result": {
                                                        "type": [
                                                            "object",
                                                            "string",
                                                            "null"
                                                        ]
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "result": {
                                                "type": "object",
                                                "cfRecurse": ""
                                            }
                                        }
                                    }
                                ]
                            },
                            "cfOwnership": "iam",
                            "cfPlanAvailability": {
                                "free": false,
                                "pro": false,
                                "business": false,
                                "enterprise": true
                            }
                        },
                        {
                            "title": "Leave Organization",
                            "description": "Remove association to an organization",
                            "rel": "self",
                            "href": "user/organizations/{#/definitions/identifier}",
                            "method": "DELETE",
                            "targetSchema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "description": "Organization identifier tag",
                                        "type": "string",
                                        "maxLength": 32,
                                        "readOnly": true,
                                        "example": "01a7362d577a6c3019a474fd6f485823"
                                    }
                                }
                            },
                            "cfOwnership": "iam",
                            "cfPlanAvailability": {
                                "free": false,
                                "pro": false,
                                "business": false,
                                "enterprise": true
                            }
                        }
                    ]
                },
                "readOnly": true
            }
        },
        "required_props": [
            "id",
            "email",
            "last_name",
            "first_name",
            "telephone",
            "country",
            "zipcode",
            "two_factor_authentication_enabled",
            "created_on",
            "modified_on"
        ],
        "optional_props": [
            "username",
            "suspended",
            "betas",
            "organizations"
        ],
        "objects": [],
        "example": "{\n  \"id\": \"7c5dae5552338874e5053f2534d2767a\",\n  \"email\": \"user@example.com\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Appleseed\",\n  \"username\": \"cfuser12345\",\n  \"telephone\": \"+1 123-123-1234\",\n  \"country\": \"US\",\n  \"zipcode\": \"12345\",\n  \"created_on\": \"2014-01-01T05:20:00Z\",\n  \"modified_on\": \"2014-01-01T05:20:00Z\",\n  \"two_factor_authentication_enabled\": false,\n  \"suspended\": false\n}",
        "title": "User",
        "description": "The currently logged in/authenticated User"
    },
    "_generated_on": "2022-06-23T18:27:26.175147",
    "_generated_from": "https://api.cloudflare.com/apidocs-static/app-15eee93638a35d88ae02.js"
}