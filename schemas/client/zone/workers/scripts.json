{
    "id": "https://api.cloudflare.com/schemas/v4/client/zone/workers/scripts.json",
    "title": "Worker Script (Deprecated)",
    "description": "A Worker script is a single script that is executed on matching filters in the Cloudflare edge",
    "cfExtendedDescription": "**NOTE**: This API is **deprecated**, please use equivalent `/accounts` API endpoints where possible. These APIs are for use with the previously limited single-script zones.",
    "type": "object",
    "links": [
        {
            "title": "Download Worker",
            "description": "Fetch raw script content for your worker. Note this is the original script content, not JSON encoded.",
            "rel": "self",
            "href": "zones/{#/definitions/zone_identifier}/workers/script",
            "method": "GET",
            "cfRequestHeaders": {
                "type": "object",
                "required": [
                    "X-Auth-Email",
                    "X-Auth-Key",
                    "Accept"
                ],
                "properties": {
                    "X-Auth-Email": {
                        "description": "Your Cloudflare email",
                        "type": "string",
                        "example": "user@example.com"
                    },
                    "X-Auth-Key": {
                        "description": "Your Cloudflare API key",
                        "type": "string",
                        "minLength": 45,
                        "maxLength": 45,
                        "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                    },
                    "Accept": {
                        "type": "string",
                        "enum": [
                            "application/javascript"
                        ],
                        "example": "application/javascript"
                    }
                }
            },
            "mediaType": "application/javascript",
            "cfOwnership": "workers",
            "html_id": "worker-script-deprecated--download-worker",
            "uri": "zones/:zone_identifier/workers/script",
            "curl": "curl -X GET \"https://api.cloudflare.com/client/v4/zones/9a7806061c88ada191ed06f989cc3dac/workers/script\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Accept: application/javascript\"",
            "response": "addEventListener('fetch', event => { event.respondWith(fetch(event.request)) })"
        },
        {
            "title": "Delete Worker",
            "description": "Delete your worker. This call has no response body on a successful delete.",
            "rel": "self",
            "href": "zones/{#/definitions/zone_identifier}/workers/script",
            "method": "DELETE",
            "cfOwnership": "workers",
            "cfRequestHeaders": {
                "type": "object",
                "required": [
                    "X-Auth-Email",
                    "X-Auth-Key"
                ],
                "properties": {
                    "X-Auth-Email": {
                        "description": "Your Cloudflare email",
                        "type": "string",
                        "example": "user@example.com"
                    },
                    "X-Auth-Key": {
                        "description": "Your Cloudflare API key",
                        "type": "string",
                        "minLength": 45,
                        "maxLength": 45,
                        "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                    }
                }
            },
            "html_id": "worker-script-deprecated--delete-worker",
            "uri": "zones/:zone_identifier/workers/script",
            "curl": "curl -X DELETE \"https://api.cloudflare.com/client/v4/zones/9a7806061c88ada191ed06f989cc3dac/workers/script\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\""
        },
        {
            "title": "Upload Worker",
            "description": "Upload a worker, or a new version of a worker.",
            "rel": "self",
            "href": "zones/{#/definitions/zone_identifier}/workers/script",
            "method": "PUT",
            "cfRequestHeaders": {
                "type": "object",
                "required": [
                    "X-Auth-Email",
                    "X-Auth-Key",
                    "Content-Type"
                ],
                "properties": {
                    "X-Auth-Email": {
                        "description": "Your Cloudflare email",
                        "type": "string",
                        "example": "user@example.com"
                    },
                    "X-Auth-Key": {
                        "description": "Your Cloudflare API key",
                        "type": "string",
                        "minLength": 45,
                        "maxLength": 45,
                        "example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
                    },
                    "Content-Type": {
                        "type": "string",
                        "enum": [
                            "application/javascript"
                        ],
                        "example": "application/javascript"
                    }
                }
            },
            "encType": "application/javascript",
            "cfOwnership": "workers",
            "html_id": "worker-script-deprecated--upload-worker",
            "uri": "zones/:zone_identifier/workers/script",
            "curl": "curl -X PUT \"https://api.cloudflare.com/client/v4/zones/9a7806061c88ada191ed06f989cc3dac/workers/script\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/javascript\" \\\n--data \"addEventListener('fetch', event => { event.respondWith(fetch(event.request)) })\"",
            "parameters": {
                "_formatter": {
                    "jsonMediaType": {}
                },
                "all_props": {},
                "required_props": [],
                "optional_props": [],
                "objects": [],
                "example": "\"addEventListener('fetch', event => { event.respondWith(fetch(event.request)) })\""
            },
            "response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"script\": \"addEventListener('fetch', event => { event.respondWith(fetch(event.request)) })\",\n    \"etag\": \"ea95132c15732412d22c1476fa83f27a\",\n    \"size\": 1024,\n    \"modified_on\": \"2017-01-01T00:00:00Z\"\n  }\n}"
        }
    ],
    "cfLinkErrors": {
        "10001": "Unsupported or unexpected Content Type",
        "10002": "Unexpected internal server error",
        "10003": "Missing required URL parameter",
        "10004": "Malformed URL parameter",
        "10006": "Unparseable script body",
        "10007": "Resource not found (similar to HTTP 404)",
        "10014": "Internal error while attempting authorization checks",
        "10015": "The current account is not authorized to use workers",
        "10018": "Attempted to update a script where the e-tag does not match",
        "10021": "Script content failed validation checks, but was otherwise parseable",
        "10023": "Unauthorized access attempt",
        "10027": "Script body was too large"
    },
    "html_id": "worker-script-deprecated-",
    "object_definition": {
        "_formatter": {
            "jsonMediaType": {}
        },
        "all_props": {
            "script": {
                "type": "string",
                "example": "\"addEventListener('fetch', event => { event.respondWith(fetch(event.request)) })\"",
                "readOnly": true,
                "description": "Raw script content, as a string",
                "media": {
                    "type": "application/javascript"
                }
            },
            "etag": {
                "type": "string",
                "example": "\"ea95132c15732412d22c1476fa83f27a\"",
                "description": "Hashed script content, can be used in a If-None-Match header when updating",
                "readOnly": true
            },
            "size": {
                "type": "number",
                "example": "1024",
                "description": "Size of the script, in bytes",
                "readOnly": true
            },
            "modified_on": {
                "type": "string",
                "example": "\"2017-01-01T00:00:00Z\"",
                "description": "When the script was last modified",
                "format": "date-time",
                "readOnly": true
            }
        },
        "required_props": [],
        "optional_props": [
            "script",
            "etag",
            "size",
            "modified_on"
        ],
        "objects": [],
        "example": "{\n  \"script\": \"addEventListener('fetch', event => { event.respondWith(fetch(event.request)) })\",\n  \"etag\": \"ea95132c15732412d22c1476fa83f27a\",\n  \"size\": 1024,\n  \"modified_on\": \"2017-01-01T00:00:00Z\"\n}",
        "title": "Worker Script (Deprecated)",
        "description": "A Worker script is a single script that is executed on matching filters in the Cloudflare edge"
    },
    "_generated_on": "2022-06-23T18:27:26.277512",
    "_generated_from": "https://api.cloudflare.com/apidocs-static/app-15eee93638a35d88ae02.js"
}